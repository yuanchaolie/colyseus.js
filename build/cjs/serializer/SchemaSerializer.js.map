{"version":3,"file":"SchemaSerializer.js","sources":["../../../src/serializer/SchemaSerializer.ts"],"sourcesContent":["import { Serializer } from \"./Serializer\";\r\nimport { Schema, Decoder, Reflection, Iterator, getDecoderStateCallbacks } from \"@colyseus/schema\";\r\nimport type { Room } from \"../Room\";\r\n\r\nexport type SchemaConstructor<T = Schema> = new (...args: any[]) => T;\r\n\r\n//\r\n// TODO: use a schema interface, which even having duplicate definitions, it could be used to get the callback proxy.\r\n// \r\n// ```ts\r\n//     export type SchemaCallbackProxy<RoomState> = (<T extends ISchema>(instance: T) => CallbackProxy<T>);\r\n//     export function getStateCallbacks<T extends ISchema>(room: Room<T>) {\r\n// ```\r\n//\r\nexport function getStateCallbacks<T>(room: Room<T>) {\r\n    try {\r\n        // SchemaSerializer\r\n        // @ts-ignore\r\n        return getDecoderStateCallbacks<T>((room['serializer'] as unknown as SchemaSerializer<T>).decoder);\r\n    } catch (e) {\r\n        // NoneSerializer\r\n        return undefined;\r\n    }\r\n}\r\n\r\nexport class SchemaSerializer<T extends Schema = any> implements Serializer<T> {\r\n    state: T;\r\n    decoder: Decoder<T>;\r\n\r\n    setState(encodedState: Buffer, it?: Iterator) {\r\n        this.decoder.decode(encodedState, it);\r\n    }\r\n\r\n    getState() {\r\n        return this.state;\r\n    }\r\n\r\n    patch(patches: Buffer, it?: Iterator) {\r\n        return this.decoder.decode(patches, it);\r\n    }\r\n\r\n    teardown() {\r\n        this.decoder.root.clearRefs();\r\n    }\r\n\r\n    handshake(bytes: Buffer, it?: Iterator) {\r\n        if (this.state) {\r\n            //\r\n            // TODO: validate definitions against concreate this.state instance\r\n            //\r\n            Reflection.decode(bytes, it); // no-op\r\n\r\n            this.decoder = new Decoder(this.state);\r\n\r\n        } else {\r\n            // initialize reflected state from server\r\n            this.decoder = Reflection.decode(bytes, it);\r\n            this.state = this.decoder.state;\r\n        }\r\n    }\r\n}\r\n"],"names":["getDecoderStateCallbacks","Reflection","Decoder"],"mappings":";;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACM,SAAU,iBAAiB,CAAI,IAAa,EAAA;AAC9C,IAAA,IAAI;;;QAGA,OAAOA,+BAAwB,CAAK,IAAI,CAAC,YAAY,CAAoC,CAAC,OAAO,CAAC;;IACpG,OAAO,CAAC,EAAE;;AAER,QAAA,OAAO,SAAS;;AAExB;MAEa,gBAAgB,CAAA;IAIzB,QAAQ,CAAC,YAAoB,EAAE,EAAa,EAAA;QACxC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,YAAY,EAAE,EAAE,CAAC;;IAGzC,QAAQ,GAAA;QACJ,OAAO,IAAI,CAAC,KAAK;;IAGrB,KAAK,CAAC,OAAe,EAAE,EAAa,EAAA;QAChC,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE,CAAC;;IAG3C,QAAQ,GAAA;AACJ,QAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE;;IAGjC,SAAS,CAAC,KAAa,EAAE,EAAa,EAAA;AAClC,QAAA,IAAI,IAAI,CAAC,KAAK,EAAE;;;;YAIZC,iBAAU,CAAC,MAAM,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YAE7B,IAAI,CAAC,OAAO,GAAG,IAAIC,cAAO,CAAC,IAAI,CAAC,KAAK,CAAC;;aAEnC;;YAEH,IAAI,CAAC,OAAO,GAAGD,iBAAU,CAAC,MAAM,CAAC,KAAK,EAAE,EAAE,CAAC;YAC3C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK;;;AAG1C;;;;;"}