{"version":3,"file":"colyseus-cocos-creator.js","sources":["../src/legacy.ts","../node_modules/tslib/tslib.es6.js","../src/errors/Errors.ts","../node_modules/@colyseus/schema/build/umd/index.js","../src/transport/H3Transport.ts","../node_modules/ws/browser.js","../src/transport/WebSocketTransport.ts","../src/Connection.ts","../src/Protocol.ts","../src/serializer/Serializer.ts","../src/core/nanoevents.ts","../src/core/signal.ts","../src/serializer/SchemaSerializer.ts","../node_modules/@colyseus/msgpackr/unpack.js","../node_modules/@colyseus/msgpackr/pack.js","../src/Room.ts","../node_modules/@colyseus/httpie/xhr/index.js","../src/HTTP.ts","../src/Storage.ts","../src/Auth.ts","../src/3rd_party/discord.ts","../src/Client.ts","../src/serializer/NoneSerializer.ts","../src/index.ts"],"sourcesContent":["//\n// Polyfills for legacy environments\n//\n\n/*\n * Support Android 4.4.x\n */\nif (!ArrayBuffer.isView) {\n    ArrayBuffer.isView = (a: any): a is ArrayBufferView => {\n        return (\n            a !== null &&\n            typeof a === \"object\" &&\n            a.buffer instanceof ArrayBuffer\n        );\n    };\n}\n\n// Define globalThis if not available.\n// https://github.com/colyseus/colyseus.js/issues/86\nif (typeof globalThis === \"undefined\" && typeof window !== \"undefined\") {\n    // @ts-ignore\n    window[\"globalThis\"] = window;\n}\nif (typeof globalThis === \"undefined\") {\n    if (typeof global !== \"undefined\") {\n        // Node.js 或微信小程序环境\n        globalThis = global;\n    } else if (typeof window !== \"undefined\") {\n        // 浏览器环境\n        globalThis = window;\n    } else {\n        // 其他环境，包括微信小程序\n        try {\n            globalThis = Function(\"return this\")();\n        } catch (e) {\n            globalThis = {};\n        }\n    }\n}\n// Cocos Creator does not provide \"FormData\"\n// Define a dummy implementation so it doesn't crash\nif (typeof FormData === \"undefined\") {\n    // @ts-ignore\n    globalThis[\"FormData\"] = class {};\n}\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\r\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\r\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nvar ownKeys = function(o) {\r\n    ownKeys = Object.getOwnPropertyNames || function (o) {\r\n        var ar = [];\r\n        for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\r\n        return ar;\r\n    };\r\n    return ownKeys(o);\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport function __addDisposableResource(env, value, async) {\r\n    if (value !== null && value !== void 0) {\r\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\r\n        var dispose, inner;\r\n        if (async) {\r\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\r\n            dispose = value[Symbol.asyncDispose];\r\n        }\r\n        if (dispose === void 0) {\r\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\r\n            dispose = value[Symbol.dispose];\r\n            if (async) inner = dispose;\r\n        }\r\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\r\n        if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\r\n        env.stack.push({ value: value, dispose: dispose, async: async });\r\n    }\r\n    else if (async) {\r\n        env.stack.push({ async: true });\r\n    }\r\n    return value;\r\n\r\n}\r\n\r\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\r\n\r\nexport function __disposeResources(env) {\r\n    function fail(e) {\r\n        env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\r\n        env.hasError = true;\r\n    }\r\n    var r, s = 0;\r\n    function next() {\r\n        while (r = env.stack.pop()) {\r\n            try {\r\n                if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\r\n                if (r.dispose) {\r\n                    var result = r.dispose.call(r.value);\r\n                    if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\r\n                }\r\n                else s |= 1;\r\n            }\r\n            catch (e) {\r\n                fail(e);\r\n            }\r\n        }\r\n        if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\r\n        if (env.hasError) throw env.error;\r\n    }\r\n    return next();\r\n}\r\n\r\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\r\n    if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\r\n        return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\r\n            return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\r\n        });\r\n    }\r\n    return path;\r\n}\r\n\r\nexport default {\r\n    __extends: __extends,\r\n    __assign: __assign,\r\n    __rest: __rest,\r\n    __decorate: __decorate,\r\n    __param: __param,\r\n    __esDecorate: __esDecorate,\r\n    __runInitializers: __runInitializers,\r\n    __propKey: __propKey,\r\n    __setFunctionName: __setFunctionName,\r\n    __metadata: __metadata,\r\n    __awaiter: __awaiter,\r\n    __generator: __generator,\r\n    __createBinding: __createBinding,\r\n    __exportStar: __exportStar,\r\n    __values: __values,\r\n    __read: __read,\r\n    __spread: __spread,\r\n    __spreadArrays: __spreadArrays,\r\n    __spreadArray: __spreadArray,\r\n    __await: __await,\r\n    __asyncGenerator: __asyncGenerator,\r\n    __asyncDelegator: __asyncDelegator,\r\n    __asyncValues: __asyncValues,\r\n    __makeTemplateObject: __makeTemplateObject,\r\n    __importStar: __importStar,\r\n    __importDefault: __importDefault,\r\n    __classPrivateFieldGet: __classPrivateFieldGet,\r\n    __classPrivateFieldSet: __classPrivateFieldSet,\r\n    __classPrivateFieldIn: __classPrivateFieldIn,\r\n    __addDisposableResource: __addDisposableResource,\r\n    __disposeResources: __disposeResources,\r\n    __rewriteRelativeImportExtension: __rewriteRelativeImportExtension,\r\n};\r\n","export enum CloseCode {\r\n    CONSENTED = 4000,\r\n    DEVMODE_RESTART = 4010\r\n}\r\n\r\nexport class ServerError extends Error {\r\n  public code: number;\r\n\r\n  constructor(code: number, message: string) {\r\n    super(message);\r\n\r\n    this.name = \"ServerError\";\r\n    this.code = code;\r\n  }\r\n}\r\n\r\nexport class AbortError extends Error {\r\n  constructor(message: string) {\r\n    super(message);\r\n    this.name = \"AbortError\";\r\n  }\r\n}\r\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.schema = {}));\n})(this, (function (exports) { 'use strict';\n\n    const SWITCH_TO_STRUCTURE = 255; // (decoding collides with DELETE_AND_ADD + fieldIndex = 63)\n    const TYPE_ID = 213;\n    /**\n     * Encoding Schema field operations.\n     */\n    exports.OPERATION = void 0;\n    (function (OPERATION) {\n        OPERATION[OPERATION[\"ADD\"] = 128] = \"ADD\";\n        OPERATION[OPERATION[\"REPLACE\"] = 0] = \"REPLACE\";\n        OPERATION[OPERATION[\"DELETE\"] = 64] = \"DELETE\";\n        OPERATION[OPERATION[\"DELETE_AND_MOVE\"] = 96] = \"DELETE_AND_MOVE\";\n        OPERATION[OPERATION[\"MOVE_AND_ADD\"] = 160] = \"MOVE_AND_ADD\";\n        OPERATION[OPERATION[\"DELETE_AND_ADD\"] = 192] = \"DELETE_AND_ADD\";\n        /**\n         * Collection operations\n         */\n        OPERATION[OPERATION[\"CLEAR\"] = 10] = \"CLEAR\";\n        /**\n         * ArraySchema operations\n         */\n        OPERATION[OPERATION[\"REVERSE\"] = 15] = \"REVERSE\";\n        OPERATION[OPERATION[\"MOVE\"] = 32] = \"MOVE\";\n        OPERATION[OPERATION[\"DELETE_BY_REFID\"] = 33] = \"DELETE_BY_REFID\";\n        OPERATION[OPERATION[\"ADD_BY_REFID\"] = 129] = \"ADD_BY_REFID\";\n    })(exports.OPERATION || (exports.OPERATION = {}));\n\n    Symbol.metadata ??= Symbol.for(\"Symbol.metadata\");\n\n    const $track = \"~track\";\n    const $encoder = \"~encoder\";\n    const $decoder = \"~decoder\";\n    const $filter = \"~filter\";\n    const $getByIndex = \"~getByIndex\";\n    const $deleteByIndex = \"~deleteByIndex\";\n    /**\n     * Used to hold ChangeTree instances whitin the structures\n     */\n    const $changes = '~changes';\n    /**\n     * Used to keep track of the type of the child elements of a collection\n     * (MapSchema, ArraySchema, etc.)\n     */\n    const $childType = '~childType';\n    /**\n     * Optional \"discard\" method for custom types (ArraySchema)\n     * (Discards changes for next serialization)\n     */\n    const $onEncodeEnd = '~onEncodeEnd';\n    /**\n     * When decoding, this method is called after the instance is fully decoded\n     */\n    const $onDecodeEnd = \"~onDecodeEnd\";\n    /**\n     * Metadata\n     */\n    const $descriptors = \"~descriptors\";\n    const $numFields = \"~__numFields\";\n    const $refTypeFieldIndexes = \"~__refTypeFieldIndexes\";\n    const $viewFieldIndexes = \"~__viewFieldIndexes\";\n    const $fieldIndexesByViewTag = \"$__fieldIndexesByViewTag\";\n\n    /**\n     * Copyright (c) 2018 Endel Dreyer\n     * Copyright (c) 2014 Ion Drive Software Ltd.\n     *\n     * Permission is hereby granted, free of charge, to any person obtaining a copy\n     * of this software and associated documentation files (the \"Software\"), to deal\n     * in the Software without restriction, including without limitation the rights\n     * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n     * copies of the Software, and to permit persons to whom the Software is\n     * furnished to do so, subject to the following conditions:\n     *\n     * The above copyright notice and this permission notice shall be included in all\n     * copies or substantial portions of the Software.\n     *\n     * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n     * SOFTWARE\n     */\n    /**\n     * msgpack implementation highly based on notepack.io\n     * https://github.com/darrachequesne/notepack\n     */\n    let textEncoder;\n    // @ts-ignore\n    try {\n        textEncoder = new TextEncoder();\n    }\n    catch (e) { }\n    const _convoBuffer$1 = new ArrayBuffer(8);\n    const _int32$1 = new Int32Array(_convoBuffer$1);\n    const _float32$1 = new Float32Array(_convoBuffer$1);\n    const _float64$1 = new Float64Array(_convoBuffer$1);\n    const _int64$1 = new BigInt64Array(_convoBuffer$1);\n    const hasBufferByteLength = (typeof Buffer !== 'undefined' && Buffer.byteLength);\n    const utf8Length = (hasBufferByteLength)\n        ? Buffer.byteLength // node\n        : function (str, _) {\n            var c = 0, length = 0;\n            for (var i = 0, l = str.length; i < l; i++) {\n                c = str.charCodeAt(i);\n                if (c < 0x80) {\n                    length += 1;\n                }\n                else if (c < 0x800) {\n                    length += 2;\n                }\n                else if (c < 0xd800 || c >= 0xe000) {\n                    length += 3;\n                }\n                else {\n                    i++;\n                    length += 4;\n                }\n            }\n            return length;\n        };\n    function utf8Write(view, str, it) {\n        var c = 0;\n        for (var i = 0, l = str.length; i < l; i++) {\n            c = str.charCodeAt(i);\n            if (c < 0x80) {\n                view[it.offset++] = c;\n            }\n            else if (c < 0x800) {\n                view[it.offset] = 0xc0 | (c >> 6);\n                view[it.offset + 1] = 0x80 | (c & 0x3f);\n                it.offset += 2;\n            }\n            else if (c < 0xd800 || c >= 0xe000) {\n                view[it.offset] = 0xe0 | (c >> 12);\n                view[it.offset + 1] = 0x80 | (c >> 6 & 0x3f);\n                view[it.offset + 2] = 0x80 | (c & 0x3f);\n                it.offset += 3;\n            }\n            else {\n                i++;\n                c = 0x10000 + (((c & 0x3ff) << 10) | (str.charCodeAt(i) & 0x3ff));\n                view[it.offset] = 0xf0 | (c >> 18);\n                view[it.offset + 1] = 0x80 | (c >> 12 & 0x3f);\n                view[it.offset + 2] = 0x80 | (c >> 6 & 0x3f);\n                view[it.offset + 3] = 0x80 | (c & 0x3f);\n                it.offset += 4;\n            }\n        }\n    }\n    function int8$1(bytes, value, it) {\n        bytes[it.offset++] = value & 255;\n    }\n    function uint8$1(bytes, value, it) {\n        bytes[it.offset++] = value & 255;\n    }\n    function int16$1(bytes, value, it) {\n        bytes[it.offset++] = value & 255;\n        bytes[it.offset++] = (value >> 8) & 255;\n    }\n    function uint16$1(bytes, value, it) {\n        bytes[it.offset++] = value & 255;\n        bytes[it.offset++] = (value >> 8) & 255;\n    }\n    function int32$1(bytes, value, it) {\n        bytes[it.offset++] = value & 255;\n        bytes[it.offset++] = (value >> 8) & 255;\n        bytes[it.offset++] = (value >> 16) & 255;\n        bytes[it.offset++] = (value >> 24) & 255;\n    }\n    function uint32$1(bytes, value, it) {\n        const b4 = value >> 24;\n        const b3 = value >> 16;\n        const b2 = value >> 8;\n        const b1 = value;\n        bytes[it.offset++] = b1 & 255;\n        bytes[it.offset++] = b2 & 255;\n        bytes[it.offset++] = b3 & 255;\n        bytes[it.offset++] = b4 & 255;\n    }\n    function int64$1(bytes, value, it) {\n        const high = Math.floor(value / Math.pow(2, 32));\n        const low = value >>> 0;\n        uint32$1(bytes, low, it);\n        uint32$1(bytes, high, it);\n    }\n    function uint64$1(bytes, value, it) {\n        const high = (value / Math.pow(2, 32)) >> 0;\n        const low = value >>> 0;\n        uint32$1(bytes, low, it);\n        uint32$1(bytes, high, it);\n    }\n    function bigint64$1(bytes, value, it) {\n        _int64$1[0] = BigInt.asIntN(64, value);\n        int32$1(bytes, _int32$1[0], it);\n        int32$1(bytes, _int32$1[1], it);\n    }\n    function biguint64$1(bytes, value, it) {\n        _int64$1[0] = BigInt.asIntN(64, value);\n        int32$1(bytes, _int32$1[0], it);\n        int32$1(bytes, _int32$1[1], it);\n    }\n    function float32$1(bytes, value, it) {\n        _float32$1[0] = value;\n        int32$1(bytes, _int32$1[0], it);\n    }\n    function float64$1(bytes, value, it) {\n        _float64$1[0] = value;\n        int32$1(bytes, _int32$1[0 ], it);\n        int32$1(bytes, _int32$1[1 ], it);\n    }\n    function boolean$1(bytes, value, it) {\n        bytes[it.offset++] = value ? 1 : 0; // uint8\n    }\n    function string$1(bytes, value, it) {\n        // encode `null` strings as empty.\n        if (!value) {\n            value = \"\";\n        }\n        let length = utf8Length(value, \"utf8\");\n        let size = 0;\n        // fixstr\n        if (length < 0x20) {\n            bytes[it.offset++] = length | 0xa0;\n            size = 1;\n        }\n        // str 8\n        else if (length < 0x100) {\n            bytes[it.offset++] = 0xd9;\n            bytes[it.offset++] = length % 255;\n            size = 2;\n        }\n        // str 16\n        else if (length < 0x10000) {\n            bytes[it.offset++] = 0xda;\n            uint16$1(bytes, length, it);\n            size = 3;\n        }\n        // str 32\n        else if (length < 0x100000000) {\n            bytes[it.offset++] = 0xdb;\n            uint32$1(bytes, length, it);\n            size = 5;\n        }\n        else {\n            throw new Error('String too long');\n        }\n        utf8Write(bytes, value, it);\n        return size + length;\n    }\n    function number$1(bytes, value, it) {\n        if (isNaN(value)) {\n            return number$1(bytes, 0, it);\n        }\n        else if (!isFinite(value)) {\n            return number$1(bytes, (value > 0) ? Number.MAX_SAFE_INTEGER : -Number.MAX_SAFE_INTEGER, it);\n        }\n        else if (value !== (value | 0)) {\n            if (Math.abs(value) <= 3.4028235e+38) { // range check\n                _float32$1[0] = value;\n                if (Math.abs(Math.abs(_float32$1[0]) - Math.abs(value)) < 1e-4) { // precision check; adjust 1e-n (n = precision) to in-/decrease acceptable precision loss\n                    // now we know value is in range for f32 and has acceptable precision for f32\n                    bytes[it.offset++] = 0xca;\n                    float32$1(bytes, value, it);\n                    return 5;\n                }\n            }\n            bytes[it.offset++] = 0xcb;\n            float64$1(bytes, value, it);\n            return 9;\n        }\n        if (value >= 0) {\n            // positive fixnum\n            if (value < 0x80) {\n                bytes[it.offset++] = value & 255; // uint8\n                return 1;\n            }\n            // uint 8\n            if (value < 0x100) {\n                bytes[it.offset++] = 0xcc;\n                bytes[it.offset++] = value & 255; // uint8\n                return 2;\n            }\n            // uint 16\n            if (value < 0x10000) {\n                bytes[it.offset++] = 0xcd;\n                uint16$1(bytes, value, it);\n                return 3;\n            }\n            // uint 32\n            if (value < 0x100000000) {\n                bytes[it.offset++] = 0xce;\n                uint32$1(bytes, value, it);\n                return 5;\n            }\n            // uint 64\n            bytes[it.offset++] = 0xcf;\n            uint64$1(bytes, value, it);\n            return 9;\n        }\n        else {\n            // negative fixnum\n            if (value >= -32) {\n                bytes[it.offset++] = 0xe0 | (value + 0x20);\n                return 1;\n            }\n            // int 8\n            if (value >= -128) {\n                bytes[it.offset++] = 0xd0;\n                int8$1(bytes, value, it);\n                return 2;\n            }\n            // int 16\n            if (value >= -32768) {\n                bytes[it.offset++] = 0xd1;\n                int16$1(bytes, value, it);\n                return 3;\n            }\n            // int 32\n            if (value >= -2147483648) {\n                bytes[it.offset++] = 0xd2;\n                int32$1(bytes, value, it);\n                return 5;\n            }\n            // int 64\n            bytes[it.offset++] = 0xd3;\n            int64$1(bytes, value, it);\n            return 9;\n        }\n    }\n    const encode = {\n        int8: int8$1,\n        uint8: uint8$1,\n        int16: int16$1,\n        uint16: uint16$1,\n        int32: int32$1,\n        uint32: uint32$1,\n        int64: int64$1,\n        uint64: uint64$1,\n        bigint64: bigint64$1,\n        biguint64: biguint64$1,\n        float32: float32$1,\n        float64: float64$1,\n        boolean: boolean$1,\n        string: string$1,\n        number: number$1,\n        utf8Write,\n        utf8Length,\n    };\n\n    /**\n     * Copyright (c) 2018 Endel Dreyer\n     * Copyright (c) 2014 Ion Drive Software Ltd.\n     *\n     * Permission is hereby granted, free of charge, to any person obtaining a copy\n     * of this software and associated documentation files (the \"Software\"), to deal\n     * in the Software without restriction, including without limitation the rights\n     * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n     * copies of the Software, and to permit persons to whom the Software is\n     * furnished to do so, subject to the following conditions:\n     *\n     * The above copyright notice and this permission notice shall be included in all\n     * copies or substantial portions of the Software.\n     *\n     * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n     * SOFTWARE\n     */\n    // force little endian to facilitate decoding on multiple implementations\n    const _convoBuffer = new ArrayBuffer(8);\n    const _int32 = new Int32Array(_convoBuffer);\n    const _float32 = new Float32Array(_convoBuffer);\n    const _float64 = new Float64Array(_convoBuffer);\n    const _uint64 = new BigUint64Array(_convoBuffer);\n    const _int64 = new BigInt64Array(_convoBuffer);\n    function utf8Read(bytes, it, length) {\n        var string = '', chr = 0;\n        for (var i = it.offset, end = it.offset + length; i < end; i++) {\n            var byte = bytes[i];\n            if ((byte & 0x80) === 0x00) {\n                string += String.fromCharCode(byte);\n                continue;\n            }\n            if ((byte & 0xe0) === 0xc0) {\n                string += String.fromCharCode(((byte & 0x1f) << 6) |\n                    (bytes[++i] & 0x3f));\n                continue;\n            }\n            if ((byte & 0xf0) === 0xe0) {\n                string += String.fromCharCode(((byte & 0x0f) << 12) |\n                    ((bytes[++i] & 0x3f) << 6) |\n                    ((bytes[++i] & 0x3f) << 0));\n                continue;\n            }\n            if ((byte & 0xf8) === 0xf0) {\n                chr = ((byte & 0x07) << 18) |\n                    ((bytes[++i] & 0x3f) << 12) |\n                    ((bytes[++i] & 0x3f) << 6) |\n                    ((bytes[++i] & 0x3f) << 0);\n                if (chr >= 0x010000) { // surrogate pair\n                    chr -= 0x010000;\n                    string += String.fromCharCode((chr >>> 10) + 0xD800, (chr & 0x3FF) + 0xDC00);\n                }\n                else {\n                    string += String.fromCharCode(chr);\n                }\n                continue;\n            }\n            console.error('Invalid byte ' + byte.toString(16));\n            // (do not throw error to avoid server/client from crashing due to hack attemps)\n            // throw new Error('Invalid byte ' + byte.toString(16));\n        }\n        it.offset += length;\n        return string;\n    }\n    function int8(bytes, it) {\n        return uint8(bytes, it) << 24 >> 24;\n    }\n    function uint8(bytes, it) {\n        return bytes[it.offset++];\n    }\n    function int16(bytes, it) {\n        return uint16(bytes, it) << 16 >> 16;\n    }\n    function uint16(bytes, it) {\n        return bytes[it.offset++] | bytes[it.offset++] << 8;\n    }\n    function int32(bytes, it) {\n        return bytes[it.offset++] | bytes[it.offset++] << 8 | bytes[it.offset++] << 16 | bytes[it.offset++] << 24;\n    }\n    function uint32(bytes, it) {\n        return int32(bytes, it) >>> 0;\n    }\n    function float32(bytes, it) {\n        _int32[0] = int32(bytes, it);\n        return _float32[0];\n    }\n    function float64(bytes, it) {\n        _int32[0 ] = int32(bytes, it);\n        _int32[1 ] = int32(bytes, it);\n        return _float64[0];\n    }\n    function int64(bytes, it) {\n        const low = uint32(bytes, it);\n        const high = int32(bytes, it) * Math.pow(2, 32);\n        return high + low;\n    }\n    function uint64(bytes, it) {\n        const low = uint32(bytes, it);\n        const high = uint32(bytes, it) * Math.pow(2, 32);\n        return high + low;\n    }\n    function bigint64(bytes, it) {\n        _int32[0] = int32(bytes, it);\n        _int32[1] = int32(bytes, it);\n        return _int64[0];\n    }\n    function biguint64(bytes, it) {\n        _int32[0] = int32(bytes, it);\n        _int32[1] = int32(bytes, it);\n        return _uint64[0];\n    }\n    function boolean(bytes, it) {\n        return uint8(bytes, it) > 0;\n    }\n    function string(bytes, it) {\n        const prefix = bytes[it.offset++];\n        let length;\n        if (prefix < 0xc0) {\n            // fixstr\n            length = prefix & 0x1f;\n        }\n        else if (prefix === 0xd9) {\n            length = uint8(bytes, it);\n        }\n        else if (prefix === 0xda) {\n            length = uint16(bytes, it);\n        }\n        else if (prefix === 0xdb) {\n            length = uint32(bytes, it);\n        }\n        return utf8Read(bytes, it, length);\n    }\n    function number(bytes, it) {\n        const prefix = bytes[it.offset++];\n        if (prefix < 0x80) {\n            // positive fixint\n            return prefix;\n        }\n        else if (prefix === 0xca) {\n            // float 32\n            return float32(bytes, it);\n        }\n        else if (prefix === 0xcb) {\n            // float 64\n            return float64(bytes, it);\n        }\n        else if (prefix === 0xcc) {\n            // uint 8\n            return uint8(bytes, it);\n        }\n        else if (prefix === 0xcd) {\n            // uint 16\n            return uint16(bytes, it);\n        }\n        else if (prefix === 0xce) {\n            // uint 32\n            return uint32(bytes, it);\n        }\n        else if (prefix === 0xcf) {\n            // uint 64\n            return uint64(bytes, it);\n        }\n        else if (prefix === 0xd0) {\n            // int 8\n            return int8(bytes, it);\n        }\n        else if (prefix === 0xd1) {\n            // int 16\n            return int16(bytes, it);\n        }\n        else if (prefix === 0xd2) {\n            // int 32\n            return int32(bytes, it);\n        }\n        else if (prefix === 0xd3) {\n            // int 64\n            return int64(bytes, it);\n        }\n        else if (prefix > 0xdf) {\n            // negative fixint\n            return (0xff - prefix + 1) * -1;\n        }\n    }\n    function stringCheck(bytes, it) {\n        const prefix = bytes[it.offset];\n        return (\n        // fixstr\n        (prefix < 0xc0 && prefix > 0xa0) ||\n            // str 8\n            prefix === 0xd9 ||\n            // str 16\n            prefix === 0xda ||\n            // str 32\n            prefix === 0xdb);\n    }\n    const decode = {\n        utf8Read,\n        int8,\n        uint8,\n        int16,\n        uint16,\n        int32,\n        uint32,\n        float32,\n        float64,\n        int64,\n        uint64,\n        bigint64,\n        biguint64,\n        boolean,\n        string,\n        number,\n        stringCheck,\n    };\n\n    const registeredTypes = {};\n    const identifiers = new Map();\n    function registerType(identifier, definition) {\n        if (definition.constructor) {\n            identifiers.set(definition.constructor, identifier);\n            registeredTypes[identifier] = definition;\n        }\n        if (definition.encode) {\n            encode[identifier] = definition.encode;\n        }\n        if (definition.decode) {\n            decode[identifier] = definition.decode;\n        }\n    }\n    function getType(identifier) {\n        return registeredTypes[identifier];\n    }\n    function defineCustomTypes(types) {\n        for (const identifier in types) {\n            registerType(identifier, types[identifier]);\n        }\n        return (t) => type(t);\n    }\n\n    class TypeContext {\n        /**\n         * For inheritance support\n         * Keeps track of which classes extends which. (parent -> children)\n         */\n        static { this.inheritedTypes = new Map(); }\n        static { this.cachedContexts = new Map(); }\n        static register(target) {\n            const parent = Object.getPrototypeOf(target);\n            if (parent !== Schema) {\n                let inherits = TypeContext.inheritedTypes.get(parent);\n                if (!inherits) {\n                    inherits = new Set();\n                    TypeContext.inheritedTypes.set(parent, inherits);\n                }\n                inherits.add(target);\n            }\n        }\n        static cache(rootClass) {\n            let context = TypeContext.cachedContexts.get(rootClass);\n            if (!context) {\n                context = new TypeContext(rootClass);\n                TypeContext.cachedContexts.set(rootClass, context);\n            }\n            return context;\n        }\n        constructor(rootClass) {\n            this.types = {};\n            this.schemas = new Map();\n            this.hasFilters = false;\n            this.parentFiltered = {};\n            if (rootClass) {\n                this.discoverTypes(rootClass);\n            }\n        }\n        has(schema) {\n            return this.schemas.has(schema);\n        }\n        get(typeid) {\n            return this.types[typeid];\n        }\n        add(schema, typeid = this.schemas.size) {\n            // skip if already registered\n            if (this.schemas.has(schema)) {\n                return false;\n            }\n            this.types[typeid] = schema;\n            //\n            // Workaround to allow using an empty Schema (with no `@type()` fields)\n            //\n            if (schema[Symbol.metadata] === undefined) {\n                Metadata.initialize(schema);\n            }\n            this.schemas.set(schema, typeid);\n            return true;\n        }\n        getTypeId(klass) {\n            return this.schemas.get(klass);\n        }\n        discoverTypes(klass, parentType, parentIndex, parentHasViewTag) {\n            if (parentHasViewTag) {\n                this.registerFilteredByParent(klass, parentType, parentIndex);\n            }\n            // skip if already registered\n            if (!this.add(klass)) {\n                return;\n            }\n            // add classes inherited from this base class\n            TypeContext.inheritedTypes.get(klass)?.forEach((child) => {\n                this.discoverTypes(child, parentType, parentIndex, parentHasViewTag);\n            });\n            // add parent classes\n            let parent = klass;\n            while ((parent = Object.getPrototypeOf(parent)) &&\n                parent !== Schema && // stop at root (Schema)\n                parent !== Function.prototype // stop at root (non-Schema)\n            ) {\n                this.discoverTypes(parent);\n            }\n            const metadata = (klass[Symbol.metadata] ??= {});\n            // if any schema/field has filters, mark \"context\" as having filters.\n            if (metadata[$viewFieldIndexes]) {\n                this.hasFilters = true;\n            }\n            for (const fieldIndex in metadata) {\n                const index = fieldIndex;\n                const fieldType = metadata[index].type;\n                const fieldHasViewTag = (metadata[index].tag !== undefined);\n                if (typeof (fieldType) === \"string\") {\n                    continue;\n                }\n                if (typeof (fieldType) === \"function\") {\n                    this.discoverTypes(fieldType, klass, index, parentHasViewTag || fieldHasViewTag);\n                }\n                else {\n                    const type = Object.values(fieldType)[0];\n                    // skip primitive types\n                    if (typeof (type) === \"string\") {\n                        continue;\n                    }\n                    this.discoverTypes(type, klass, index, parentHasViewTag || fieldHasViewTag);\n                }\n            }\n        }\n        /**\n         * Keep track of which classes have filters applied.\n         * Format: `${typeid}-${parentTypeid}-${parentIndex}`\n         */\n        registerFilteredByParent(schema, parentType, parentIndex) {\n            const typeid = this.schemas.get(schema) ?? this.schemas.size;\n            let key = `${typeid}`;\n            if (parentType) {\n                key += `-${this.schemas.get(parentType)}`;\n            }\n            key += `-${parentIndex}`;\n            this.parentFiltered[key] = true;\n        }\n        debug() {\n            let parentFiltered = \"\";\n            for (const key in this.parentFiltered) {\n                const keys = key.split(\"-\").map(Number);\n                const fieldIndex = keys.pop();\n                parentFiltered += `\\n\\t\\t`;\n                parentFiltered += `${key}: ${keys.reverse().map((id, i) => {\n                const klass = this.types[id];\n                const metadata = klass[Symbol.metadata];\n                let txt = klass.name;\n                if (i === 0) {\n                    txt += `[${metadata[fieldIndex].name}]`;\n                }\n                return `${txt}`;\n            }).join(\" -> \")}`;\n            }\n            return `TypeContext ->\\n` +\n                `\\tSchema types: ${this.schemas.size}\\n` +\n                `\\thasFilters: ${this.hasFilters}\\n` +\n                `\\tparentFiltered:${parentFiltered}`;\n        }\n    }\n\n    function getNormalizedType(type) {\n        if (Array.isArray(type)) {\n            return { array: getNormalizedType(type[0]) };\n        }\n        else if (typeof (type['type']) !== \"undefined\") {\n            return type['type'];\n        }\n        else if (isTSEnum(type)) {\n            // Detect TS Enum type (either string or number)\n            return Object.keys(type).every(key => typeof type[key] === \"string\")\n                ? \"string\"\n                : \"number\";\n        }\n        else if (typeof type === \"object\" && type !== null) {\n            // Handle collection types\n            const collectionType = Object.keys(type).find(k => registeredTypes[k] !== undefined);\n            if (collectionType) {\n                type[collectionType] = getNormalizedType(type[collectionType]);\n                return type;\n            }\n        }\n        return type;\n    }\n    function isTSEnum(_enum) {\n        if (typeof _enum === 'function' && _enum[Symbol.metadata]) {\n            return false;\n        }\n        const keys = Object.keys(_enum);\n        const numericFields = keys.filter(k => /\\d+/.test(k));\n        // Check for number enum (has numeric keys and reverse mapping)\n        if (numericFields.length > 0 && numericFields.length === (keys.length / 2) && _enum[_enum[numericFields[0]]] == numericFields[0]) {\n            return true;\n        }\n        // Check for string enum (all values are strings and keys match values)\n        if (keys.length > 0 && keys.every(key => typeof _enum[key] === 'string' && _enum[key] === key)) {\n            return true;\n        }\n        return false;\n    }\n    const Metadata = {\n        addField(metadata, index, name, type, descriptor) {\n            if (index > 64) {\n                throw new Error(`Can't define field '${name}'.\\nSchema instances may only have up to 64 fields.`);\n            }\n            metadata[index] = Object.assign(metadata[index] || {}, // avoid overwriting previous field metadata (@owned / @deprecated)\n            {\n                type: getNormalizedType(type),\n                index,\n                name,\n            });\n            // create \"descriptors\" map\n            Object.defineProperty(metadata, $descriptors, {\n                value: metadata[$descriptors] || {},\n                enumerable: false,\n                configurable: true,\n            });\n            if (descriptor) {\n                // for encoder\n                metadata[$descriptors][name] = descriptor;\n                metadata[$descriptors][`_${name}`] = {\n                    value: undefined,\n                    writable: true,\n                    enumerable: false,\n                    configurable: true,\n                };\n            }\n            else {\n                // for decoder\n                metadata[$descriptors][name] = {\n                    value: undefined,\n                    writable: true,\n                    enumerable: true,\n                    configurable: true,\n                };\n            }\n            // map -1 as last field index\n            Object.defineProperty(metadata, $numFields, {\n                value: index,\n                enumerable: false,\n                configurable: true\n            });\n            // map field name => index (non enumerable)\n            Object.defineProperty(metadata, name, {\n                value: index,\n                enumerable: false,\n                configurable: true,\n            });\n            // if child Ref/complex type, add to -4\n            if (typeof (metadata[index].type) !== \"string\") {\n                if (metadata[$refTypeFieldIndexes] === undefined) {\n                    Object.defineProperty(metadata, $refTypeFieldIndexes, {\n                        value: [],\n                        enumerable: false,\n                        configurable: true,\n                    });\n                }\n                metadata[$refTypeFieldIndexes].push(index);\n            }\n        },\n        setTag(metadata, fieldName, tag) {\n            const index = metadata[fieldName];\n            const field = metadata[index];\n            // add 'tag' to the field\n            field.tag = tag;\n            if (!metadata[$viewFieldIndexes]) {\n                // -2: all field indexes with \"view\" tag\n                Object.defineProperty(metadata, $viewFieldIndexes, {\n                    value: [],\n                    enumerable: false,\n                    configurable: true\n                });\n                // -3: field indexes by \"view\" tag\n                Object.defineProperty(metadata, $fieldIndexesByViewTag, {\n                    value: {},\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            metadata[$viewFieldIndexes].push(index);\n            if (!metadata[$fieldIndexesByViewTag][tag]) {\n                metadata[$fieldIndexesByViewTag][tag] = [];\n            }\n            metadata[$fieldIndexesByViewTag][tag].push(index);\n        },\n        setFields(target, fields) {\n            // for inheritance support\n            const constructor = target.prototype.constructor;\n            TypeContext.register(constructor);\n            const parentClass = Object.getPrototypeOf(constructor);\n            const parentMetadata = parentClass && parentClass[Symbol.metadata];\n            const metadata = Metadata.initialize(constructor);\n            // Use Schema's methods if not defined in the class\n            if (!constructor[$track]) {\n                constructor[$track] = Schema[$track];\n            }\n            if (!constructor[$encoder]) {\n                constructor[$encoder] = Schema[$encoder];\n            }\n            if (!constructor[$decoder]) {\n                constructor[$decoder] = Schema[$decoder];\n            }\n            if (!constructor.prototype.toJSON) {\n                constructor.prototype.toJSON = Schema.prototype.toJSON;\n            }\n            //\n            // detect index for this field, considering inheritance\n            //\n            let fieldIndex = metadata[$numFields] // current structure already has fields defined\n                ?? (parentMetadata && parentMetadata[$numFields]) // parent structure has fields defined\n                ?? -1; // no fields defined\n            fieldIndex++;\n            for (const field in fields) {\n                const type = getNormalizedType(fields[field]);\n                // FIXME: this code is duplicated from @type() annotation\n                const complexTypeKlass = typeof (Object.keys(type)[0]) === \"string\" && getType(Object.keys(type)[0]);\n                const childType = (complexTypeKlass)\n                    ? Object.values(type)[0]\n                    : type;\n                Metadata.addField(metadata, fieldIndex, field, type, getPropertyDescriptor(`_${field}`, fieldIndex, childType, complexTypeKlass));\n                fieldIndex++;\n            }\n            return target;\n        },\n        isDeprecated(metadata, field) {\n            return metadata[field].deprecated === true;\n        },\n        init(klass) {\n            //\n            // Used only to initialize an empty Schema (Encoder#constructor)\n            // TODO: remove/refactor this...\n            //\n            const metadata = {};\n            klass[Symbol.metadata] = metadata;\n            Object.defineProperty(metadata, $numFields, {\n                value: 0,\n                enumerable: false,\n                configurable: true,\n            });\n        },\n        initialize(constructor) {\n            const parentClass = Object.getPrototypeOf(constructor);\n            const parentMetadata = parentClass[Symbol.metadata];\n            let metadata = constructor[Symbol.metadata] ?? Object.create(null);\n            // make sure inherited classes have their own metadata object.\n            if (parentClass !== Schema && metadata === parentMetadata) {\n                metadata = Object.create(null);\n                if (parentMetadata) {\n                    //\n                    // assign parent metadata to current\n                    //\n                    Object.setPrototypeOf(metadata, parentMetadata);\n                    // $numFields\n                    Object.defineProperty(metadata, $numFields, {\n                        value: parentMetadata[$numFields],\n                        enumerable: false,\n                        configurable: true,\n                        writable: true,\n                    });\n                    // $viewFieldIndexes / $fieldIndexesByViewTag\n                    if (parentMetadata[$viewFieldIndexes] !== undefined) {\n                        Object.defineProperty(metadata, $viewFieldIndexes, {\n                            value: [...parentMetadata[$viewFieldIndexes]],\n                            enumerable: false,\n                            configurable: true,\n                            writable: true,\n                        });\n                        Object.defineProperty(metadata, $fieldIndexesByViewTag, {\n                            value: { ...parentMetadata[$fieldIndexesByViewTag] },\n                            enumerable: false,\n                            configurable: true,\n                            writable: true,\n                        });\n                    }\n                    // $refTypeFieldIndexes\n                    if (parentMetadata[$refTypeFieldIndexes] !== undefined) {\n                        Object.defineProperty(metadata, $refTypeFieldIndexes, {\n                            value: [...parentMetadata[$refTypeFieldIndexes]],\n                            enumerable: false,\n                            configurable: true,\n                            writable: true,\n                        });\n                    }\n                    // $descriptors\n                    Object.defineProperty(metadata, $descriptors, {\n                        value: { ...parentMetadata[$descriptors] },\n                        enumerable: false,\n                        configurable: true,\n                        writable: true,\n                    });\n                }\n            }\n            constructor[Symbol.metadata] = metadata;\n            return metadata;\n        },\n        isValidInstance(klass) {\n            return (klass.constructor[Symbol.metadata] &&\n                Object.prototype.hasOwnProperty.call(klass.constructor[Symbol.metadata], $numFields));\n        },\n        getFields(klass) {\n            const metadata = klass[Symbol.metadata];\n            const fields = {};\n            for (let i = 0; i <= metadata[$numFields]; i++) {\n                fields[metadata[i].name] = metadata[i].type;\n            }\n            return fields;\n        },\n        hasViewTagAtIndex(metadata, index) {\n            return metadata?.[$viewFieldIndexes]?.includes(index);\n        }\n    };\n\n    function createChangeSet(queueRootNode) {\n        return { indexes: {}, operations: [], queueRootNode };\n    }\n    // Linked list helper functions\n    function createChangeTreeList() {\n        return { next: undefined, tail: undefined };\n    }\n    function setOperationAtIndex(changeSet, index) {\n        const operationsIndex = changeSet.indexes[index];\n        if (operationsIndex === undefined) {\n            changeSet.indexes[index] = changeSet.operations.push(index) - 1;\n        }\n        else {\n            changeSet.operations[operationsIndex] = index;\n        }\n    }\n    function deleteOperationAtIndex(changeSet, index) {\n        let operationsIndex = changeSet.indexes[index];\n        if (operationsIndex === undefined) {\n            //\n            // if index is not found, we need to find the last operation\n            // FIXME: this is not very efficient\n            //\n            // > See \"should allow consecutive splices (same place)\" tests\n            //\n            operationsIndex = Object.values(changeSet.indexes).at(-1);\n            index = Object.entries(changeSet.indexes).find(([_, value]) => value === operationsIndex)?.[0];\n        }\n        changeSet.operations[operationsIndex] = undefined;\n        delete changeSet.indexes[index];\n    }\n    class ChangeTree {\n        constructor(ref) {\n            /**\n             * Whether this structure is parent of a filtered structure.\n             */\n            this.isFiltered = false;\n            this.indexedOperations = {};\n            //\n            // TODO:\n            //   try storing the index + operation per item.\n            //   example: 1024 & 1025 => ADD, 1026 => DELETE\n            //\n            // => https://chatgpt.com/share/67107d0c-bc20-8004-8583-83b17dd7c196\n            //\n            this.changes = { indexes: {}, operations: [] };\n            this.allChanges = { indexes: {}, operations: [] };\n            /**\n             * Is this a new instance? Used on ArraySchema to determine OPERATION.MOVE_AND_ADD operation.\n             */\n            this.isNew = true;\n            this.ref = ref;\n            this.metadata = ref.constructor[Symbol.metadata];\n            //\n            // Does this structure have \"filters\" declared?\n            //\n            if (this.metadata?.[$viewFieldIndexes]) {\n                this.allFilteredChanges = { indexes: {}, operations: [] };\n                this.filteredChanges = { indexes: {}, operations: [] };\n            }\n        }\n        setRoot(root) {\n            this.root = root;\n            const isNewChangeTree = this.root.add(this);\n            this.checkIsFiltered(this.parent, this.parentIndex, isNewChangeTree);\n            // Recursively set root on child structures\n            if (isNewChangeTree) {\n                this.forEachChild((child, _) => {\n                    if (child.root !== root) {\n                        child.setRoot(root);\n                    }\n                    else {\n                        root.add(child); // increment refCount\n                    }\n                });\n            }\n        }\n        setParent(parent, root, parentIndex) {\n            this.addParent(parent, parentIndex);\n            // avoid setting parents with empty `root`\n            if (!root) {\n                return;\n            }\n            const isNewChangeTree = root.add(this);\n            // skip if parent is already set\n            if (root !== this.root) {\n                this.root = root;\n                this.checkIsFiltered(parent, parentIndex, isNewChangeTree);\n            }\n            // assign same parent on child structures\n            if (isNewChangeTree) {\n                //\n                // assign same parent on child structures\n                //\n                this.forEachChild((child, index) => {\n                    if (child.root === root) {\n                        //\n                        // re-assigning a child of the same root, move it next to parent\n                        // so encoding order is preserved\n                        //\n                        root.add(child);\n                        root.moveNextToParent(child);\n                        return;\n                    }\n                    child.setParent(this.ref, root, index);\n                });\n            }\n        }\n        forEachChild(callback) {\n            //\n            // assign same parent on child structures\n            //\n            if (this.ref[$childType]) {\n                if (typeof (this.ref[$childType]) !== \"string\") {\n                    // MapSchema / ArraySchema, etc.\n                    for (const [key, value] of this.ref.entries()) {\n                        callback(value[$changes], this.indexes?.[key] ?? key);\n                    }\n                }\n            }\n            else {\n                for (const index of this.metadata?.[$refTypeFieldIndexes] ?? []) {\n                    const field = this.metadata[index];\n                    const value = this.ref[field.name];\n                    if (!value) {\n                        continue;\n                    }\n                    callback(value[$changes], index);\n                }\n            }\n        }\n        operation(op) {\n            // operations without index use negative values to represent them\n            // this is checked during .encode() time.\n            if (this.filteredChanges !== undefined) {\n                this.filteredChanges.operations.push(-op);\n                this.root?.enqueueChangeTree(this, 'filteredChanges');\n            }\n            else {\n                this.changes.operations.push(-op);\n                this.root?.enqueueChangeTree(this, 'changes');\n            }\n        }\n        change(index, operation = exports.OPERATION.ADD) {\n            const isFiltered = this.isFiltered || (this.metadata?.[index]?.tag !== undefined);\n            const changeSet = (isFiltered)\n                ? this.filteredChanges\n                : this.changes;\n            const previousOperation = this.indexedOperations[index];\n            if (!previousOperation || previousOperation === exports.OPERATION.DELETE) {\n                const op = (!previousOperation)\n                    ? operation\n                    : (previousOperation === exports.OPERATION.DELETE)\n                        ? exports.OPERATION.DELETE_AND_ADD\n                        : operation;\n                //\n                // TODO: are DELETE operations being encoded as ADD here ??\n                //\n                this.indexedOperations[index] = op;\n            }\n            setOperationAtIndex(changeSet, index);\n            if (isFiltered) {\n                setOperationAtIndex(this.allFilteredChanges, index);\n                if (this.root) {\n                    this.root.enqueueChangeTree(this, 'filteredChanges');\n                    this.root.enqueueChangeTree(this, 'allFilteredChanges');\n                }\n            }\n            else {\n                setOperationAtIndex(this.allChanges, index);\n                this.root?.enqueueChangeTree(this, 'changes');\n            }\n        }\n        shiftChangeIndexes(shiftIndex) {\n            //\n            // Used only during:\n            //\n            // - ArraySchema#unshift()\n            //\n            const changeSet = (this.isFiltered)\n                ? this.filteredChanges\n                : this.changes;\n            const newIndexedOperations = {};\n            const newIndexes = {};\n            for (const index in this.indexedOperations) {\n                newIndexedOperations[Number(index) + shiftIndex] = this.indexedOperations[index];\n                newIndexes[Number(index) + shiftIndex] = changeSet.indexes[index];\n            }\n            this.indexedOperations = newIndexedOperations;\n            changeSet.indexes = newIndexes;\n            changeSet.operations = changeSet.operations.map((index) => index + shiftIndex);\n        }\n        shiftAllChangeIndexes(shiftIndex, startIndex = 0) {\n            //\n            // Used only during:\n            //\n            // - ArraySchema#splice()\n            //\n            if (this.filteredChanges !== undefined) {\n                this._shiftAllChangeIndexes(shiftIndex, startIndex, this.allFilteredChanges);\n                this._shiftAllChangeIndexes(shiftIndex, startIndex, this.allChanges);\n            }\n            else {\n                this._shiftAllChangeIndexes(shiftIndex, startIndex, this.allChanges);\n            }\n        }\n        _shiftAllChangeIndexes(shiftIndex, startIndex = 0, changeSet) {\n            const newIndexes = {};\n            let newKey = 0;\n            for (const key in changeSet.indexes) {\n                newIndexes[newKey++] = changeSet.indexes[key];\n            }\n            changeSet.indexes = newIndexes;\n            for (let i = 0; i < changeSet.operations.length; i++) {\n                const index = changeSet.operations[i];\n                if (index > startIndex) {\n                    changeSet.operations[i] = index + shiftIndex;\n                }\n            }\n        }\n        indexedOperation(index, operation, allChangesIndex = index) {\n            this.indexedOperations[index] = operation;\n            if (this.filteredChanges !== undefined) {\n                setOperationAtIndex(this.allFilteredChanges, allChangesIndex);\n                setOperationAtIndex(this.filteredChanges, index);\n                this.root?.enqueueChangeTree(this, 'filteredChanges');\n            }\n            else {\n                setOperationAtIndex(this.allChanges, allChangesIndex);\n                setOperationAtIndex(this.changes, index);\n                this.root?.enqueueChangeTree(this, 'changes');\n            }\n        }\n        getType(index) {\n            return (\n            //\n            // Get the child type from parent structure.\n            // - [\"string\"] => \"string\"\n            // - { map: \"string\" } => \"string\"\n            // - { set: \"string\" } => \"string\"\n            //\n            this.ref[$childType] || // ArraySchema | MapSchema | SetSchema | CollectionSchema\n                this.metadata[index].type // Schema\n            );\n        }\n        getChange(index) {\n            return this.indexedOperations[index];\n        }\n        //\n        // used during `.encode()`\n        //\n        getValue(index, isEncodeAll = false) {\n            //\n            // `isEncodeAll` param is only used by ArraySchema\n            //\n            return this.ref[$getByIndex](index, isEncodeAll);\n        }\n        delete(index, operation, allChangesIndex = index) {\n            if (index === undefined) {\n                try {\n                    throw new Error(`@colyseus/schema ${this.ref.constructor.name}: trying to delete non-existing index '${index}'`);\n                }\n                catch (e) {\n                    console.warn(e);\n                }\n                return;\n            }\n            const changeSet = (this.filteredChanges !== undefined)\n                ? this.filteredChanges\n                : this.changes;\n            this.indexedOperations[index] = operation ?? exports.OPERATION.DELETE;\n            setOperationAtIndex(changeSet, index);\n            deleteOperationAtIndex(this.allChanges, allChangesIndex);\n            const previousValue = this.getValue(index);\n            // remove `root` reference\n            if (previousValue && previousValue[$changes]) {\n                //\n                // FIXME: this.root is \"undefined\"\n                //\n                // This method is being called at decoding time when a DELETE operation is found.\n                //\n                // - This is due to using the concrete Schema class at decoding time.\n                // - \"Reflected\" structures do not have this problem.\n                //\n                // (The property descriptors should NOT be used at decoding time. only at encoding time.)\n                //\n                this.root?.remove(previousValue[$changes]);\n            }\n            //\n            // FIXME: this is looking a ugly and repeated\n            //\n            if (this.filteredChanges !== undefined) {\n                deleteOperationAtIndex(this.allFilteredChanges, allChangesIndex);\n                this.root?.enqueueChangeTree(this, 'filteredChanges');\n            }\n            else {\n                this.root?.enqueueChangeTree(this, 'changes');\n            }\n            return previousValue;\n        }\n        endEncode(changeSetName) {\n            this.indexedOperations = {};\n            // clear changeset\n            this[changeSetName] = createChangeSet();\n            // ArraySchema and MapSchema have a custom \"encode end\" method\n            this.ref[$onEncodeEnd]?.();\n            // Not a new instance anymore\n            this.isNew = false;\n        }\n        discard(discardAll = false) {\n            //\n            // > MapSchema:\n            //      Remove cached key to ensure ADD operations is unsed instead of\n            //      REPLACE in case same key is used on next patches.\n            //\n            this.ref[$onEncodeEnd]?.();\n            this.indexedOperations = {};\n            this.changes = createChangeSet(this.changes.queueRootNode);\n            if (this.filteredChanges !== undefined) {\n                this.filteredChanges = createChangeSet(this.filteredChanges.queueRootNode);\n            }\n            if (discardAll) {\n                // preserve queueRootNode references\n                this.allChanges = createChangeSet(this.allChanges.queueRootNode);\n                if (this.allFilteredChanges !== undefined) {\n                    this.allFilteredChanges = createChangeSet(this.allFilteredChanges.queueRootNode);\n                }\n            }\n        }\n        /**\n         * Recursively discard all changes from this, and child structures.\n         * (Used in tests only)\n         */\n        discardAll() {\n            const keys = Object.keys(this.indexedOperations);\n            for (let i = 0, len = keys.length; i < len; i++) {\n                const value = this.getValue(Number(keys[i]));\n                if (value && value[$changes]) {\n                    value[$changes].discardAll();\n                }\n            }\n            this.discard();\n        }\n        get changed() {\n            return (Object.entries(this.indexedOperations).length > 0);\n        }\n        checkIsFiltered(parent, parentIndex, isNewChangeTree) {\n            if (this.root.types.hasFilters) {\n                //\n                // At Schema initialization, the \"root\" structure might not be available\n                // yet, as it only does once the \"Encoder\" has been set up.\n                //\n                // So the \"parent\" may be already set without a \"root\".\n                //\n                this._checkFilteredByParent(parent, parentIndex);\n                if (this.filteredChanges !== undefined) {\n                    this.root?.enqueueChangeTree(this, 'filteredChanges');\n                    if (isNewChangeTree) {\n                        this.root?.enqueueChangeTree(this, 'allFilteredChanges');\n                    }\n                }\n            }\n            if (!this.isFiltered) {\n                this.root?.enqueueChangeTree(this, 'changes');\n                if (isNewChangeTree) {\n                    this.root?.enqueueChangeTree(this, 'allChanges');\n                }\n            }\n        }\n        _checkFilteredByParent(parent, parentIndex) {\n            // skip if parent is not set\n            if (!parent) {\n                return;\n            }\n            //\n            // ArraySchema | MapSchema - get the child type\n            // (if refType is typeof string, the parentFiltered[key] below will always be invalid)\n            //\n            const refType = Metadata.isValidInstance(this.ref)\n                ? this.ref.constructor\n                : this.ref[$childType];\n            let parentChangeTree;\n            let parentIsCollection = !Metadata.isValidInstance(parent);\n            if (parentIsCollection) {\n                parentChangeTree = parent[$changes];\n                parent = parentChangeTree.parent;\n                parentIndex = parentChangeTree.parentIndex;\n            }\n            else {\n                parentChangeTree = parent[$changes];\n            }\n            const parentConstructor = parent.constructor;\n            let key = `${this.root.types.getTypeId(refType)}`;\n            if (parentConstructor) {\n                key += `-${this.root.types.schemas.get(parentConstructor)}`;\n            }\n            key += `-${parentIndex}`;\n            const fieldHasViewTag = Metadata.hasViewTagAtIndex(parentConstructor?.[Symbol.metadata], parentIndex);\n            this.isFiltered = parent[$changes].isFiltered // in case parent is already filtered\n                || this.root.types.parentFiltered[key]\n                || fieldHasViewTag;\n            //\n            // \"isFiltered\" may not be imedialely available during `change()` due to the instance not being attached to the root yet.\n            // when it's available, we need to enqueue the \"changes\" changeset into the \"filteredChanges\" changeset.\n            //\n            if (this.isFiltered) {\n                this.isVisibilitySharedWithParent = (parentChangeTree.isFiltered &&\n                    typeof (refType) !== \"string\" &&\n                    !fieldHasViewTag &&\n                    parentIsCollection);\n                if (!this.filteredChanges) {\n                    this.filteredChanges = createChangeSet();\n                    this.allFilteredChanges = createChangeSet();\n                }\n                if (this.changes.operations.length > 0) {\n                    this.changes.operations.forEach((index) => setOperationAtIndex(this.filteredChanges, index));\n                    this.allChanges.operations.forEach((index) => setOperationAtIndex(this.allFilteredChanges, index));\n                    this.changes = createChangeSet();\n                    this.allChanges = createChangeSet();\n                }\n            }\n        }\n        /**\n         * Get the immediate parent\n         */\n        get parent() {\n            return this.parentChain?.ref;\n        }\n        /**\n         * Get the immediate parent index\n         */\n        get parentIndex() {\n            return this.parentChain?.index;\n        }\n        /**\n         * Add a parent to the chain\n         */\n        addParent(parent, index) {\n            // Check if this parent already exists in the chain\n            if (this.hasParent((p, _) => p[$changes] === parent[$changes])) {\n                // if (this.hasParent((p, i) => p[$changes] === parent[$changes] && i === index)) {\n                this.parentChain.index = index;\n                return;\n            }\n            this.parentChain = {\n                ref: parent,\n                index,\n                next: this.parentChain\n            };\n        }\n        /**\n         * Remove a parent from the chain\n         * @param parent - The parent to remove\n         * @returns true if parent was removed\n         */\n        removeParent(parent = this.parent) {\n            let current = this.parentChain;\n            let previous = null;\n            while (current) {\n                //\n                // FIXME: it is required to check against `$changes` here because\n                // ArraySchema is instance of Proxy\n                //\n                if (current.ref[$changes] === parent[$changes]) {\n                    if (previous) {\n                        previous.next = current.next;\n                    }\n                    else {\n                        this.parentChain = current.next;\n                    }\n                    return true;\n                }\n                previous = current;\n                current = current.next;\n            }\n            return this.parentChain === undefined;\n        }\n        /**\n         * Find a specific parent in the chain\n         */\n        findParent(predicate) {\n            let current = this.parentChain;\n            while (current) {\n                if (predicate(current.ref, current.index)) {\n                    return current;\n                }\n                current = current.next;\n            }\n            return undefined;\n        }\n        /**\n         * Check if this ChangeTree has a specific parent\n         */\n        hasParent(predicate) {\n            return this.findParent(predicate) !== undefined;\n        }\n        /**\n         * Get all parents as an array (for debugging/testing)\n         */\n        getAllParents() {\n            const parents = [];\n            let current = this.parentChain;\n            while (current) {\n                parents.push({ ref: current.ref, index: current.index });\n                current = current.next;\n            }\n            return parents;\n        }\n    }\n\n    function encodeValue(encoder, bytes, type, value, operation, it) {\n        if (typeof (type) === \"string\") {\n            encode[type]?.(bytes, value, it);\n        }\n        else if (type[Symbol.metadata] !== undefined) {\n            //\n            // Encode refId for this instance.\n            // The actual instance is going to be encoded on next `changeTree` iteration.\n            //\n            encode.number(bytes, value[$changes].refId, it);\n            // Try to encode inherited TYPE_ID if it's an ADD operation.\n            if ((operation & exports.OPERATION.ADD) === exports.OPERATION.ADD) {\n                encoder.tryEncodeTypeId(bytes, type, value.constructor, it);\n            }\n        }\n        else {\n            //\n            // Encode refId for this instance.\n            // The actual instance is going to be encoded on next `changeTree` iteration.\n            //\n            encode.number(bytes, value[$changes].refId, it);\n        }\n    }\n    /**\n     * Used for Schema instances.\n     * @private\n     */\n    const encodeSchemaOperation = function (encoder, bytes, changeTree, index, operation, it, _, __, metadata) {\n        // \"compress\" field index + operation\n        bytes[it.offset++] = (index | operation) & 255;\n        // Do not encode value for DELETE operations\n        if (operation === exports.OPERATION.DELETE) {\n            return;\n        }\n        const ref = changeTree.ref;\n        const field = metadata[index];\n        // TODO: inline this function call small performance gain\n        encodeValue(encoder, bytes, metadata[index].type, ref[field.name], operation, it);\n    };\n    /**\n     * Used for collections (MapSchema, CollectionSchema, SetSchema)\n     * @private\n     */\n    const encodeKeyValueOperation = function (encoder, bytes, changeTree, index, operation, it) {\n        // encode operation\n        bytes[it.offset++] = operation & 255;\n        // encode index\n        encode.number(bytes, index, it);\n        // Do not encode value for DELETE operations\n        if (operation === exports.OPERATION.DELETE) {\n            return;\n        }\n        const ref = changeTree.ref;\n        //\n        // encode \"alias\" for dynamic fields (maps)\n        //\n        if ((operation & exports.OPERATION.ADD) === exports.OPERATION.ADD) { // ADD or DELETE_AND_ADD\n            if (typeof (ref['set']) === \"function\") {\n                //\n                // MapSchema dynamic key\n                //\n                const dynamicIndex = changeTree.ref['$indexes'].get(index);\n                encode.string(bytes, dynamicIndex, it);\n            }\n        }\n        const type = ref[$childType];\n        const value = ref[$getByIndex](index);\n        // try { throw new Error(); } catch (e) {\n        //     // only print if not coming from Reflection.ts\n        //     if (!e.stack.includes(\"src/Reflection.ts\")) {\n        //         console.log(\"encodeKeyValueOperation -> \", {\n        //             ref: changeTree.ref.constructor.name,\n        //             field,\n        //             operation: OPERATION[operation],\n        //             value: value?.toJSON(),\n        //             items: ref.toJSON(),\n        //         });\n        //     }\n        // }\n        // TODO: inline this function call small performance gain\n        encodeValue(encoder, bytes, type, value, operation, it);\n    };\n    /**\n     * Used for collections (MapSchema, ArraySchema, etc.)\n     * @private\n     */\n    const encodeArray = function (encoder, bytes, changeTree, field, operation, it, isEncodeAll, hasView) {\n        const ref = changeTree.ref;\n        const useOperationByRefId = hasView && changeTree.isFiltered && (typeof (changeTree.getType(field)) !== \"string\");\n        let refOrIndex;\n        if (useOperationByRefId) {\n            const item = ref['tmpItems'][field];\n            // Skip encoding if item is undefined (e.g. when clear() is called)\n            if (!item) {\n                return;\n            }\n            refOrIndex = item[$changes].refId;\n            if (operation === exports.OPERATION.DELETE) {\n                operation = exports.OPERATION.DELETE_BY_REFID;\n            }\n            else if (operation === exports.OPERATION.ADD) {\n                operation = exports.OPERATION.ADD_BY_REFID;\n            }\n        }\n        else {\n            refOrIndex = field;\n        }\n        // encode operation\n        bytes[it.offset++] = operation & 255;\n        // encode index\n        encode.number(bytes, refOrIndex, it);\n        // Do not encode value for DELETE operations\n        if (operation === exports.OPERATION.DELETE || operation === exports.OPERATION.DELETE_BY_REFID) {\n            return;\n        }\n        const type = changeTree.getType(field);\n        const value = changeTree.getValue(field, isEncodeAll);\n        // console.log({ type, field, value });\n        // console.log(\"encodeArray -> \", {\n        //     ref: changeTree.ref.constructor.name,\n        //     field,\n        //     operation: OPERATION[operation],\n        //     value: value?.toJSON(),\n        //     items: ref.toJSON(),\n        // });\n        // TODO: inline this function call small performance gain\n        encodeValue(encoder, bytes, type, value, operation, it);\n    };\n\n    const DEFINITION_MISMATCH = -1;\n    function decodeValue(decoder, operation, ref, index, type, bytes, it, allChanges) {\n        const $root = decoder.root;\n        const previousValue = ref[$getByIndex](index);\n        let value;\n        if ((operation & exports.OPERATION.DELETE) === exports.OPERATION.DELETE) {\n            // Flag `refId` for garbage collection.\n            const previousRefId = $root.refIds.get(previousValue);\n            if (previousRefId !== undefined) {\n                $root.removeRef(previousRefId);\n            }\n            //\n            // Delete operations\n            //\n            if (operation !== exports.OPERATION.DELETE_AND_ADD) {\n                ref[$deleteByIndex](index);\n            }\n            value = undefined;\n        }\n        if (operation === exports.OPERATION.DELETE) ;\n        else if (Schema.is(type)) {\n            const refId = decode.number(bytes, it);\n            value = $root.refs.get(refId);\n            if ((operation & exports.OPERATION.ADD) === exports.OPERATION.ADD) {\n                const childType = decoder.getInstanceType(bytes, it, type);\n                if (!value) {\n                    value = decoder.createInstanceOfType(childType);\n                }\n                $root.addRef(refId, value, (value !== previousValue || // increment ref count if value has changed\n                    (operation === exports.OPERATION.DELETE_AND_ADD && value === previousValue) // increment ref count if the same instance is being added again\n                ));\n            }\n        }\n        else if (typeof (type) === \"string\") {\n            //\n            // primitive value (number, string, boolean, etc)\n            //\n            value = decode[type](bytes, it);\n        }\n        else {\n            const typeDef = getType(Object.keys(type)[0]);\n            const refId = decode.number(bytes, it);\n            const valueRef = ($root.refs.has(refId))\n                ? previousValue || $root.refs.get(refId)\n                : new typeDef.constructor();\n            value = valueRef.clone(true);\n            value[$childType] = Object.values(type)[0]; // cache childType for ArraySchema and MapSchema\n            if (previousValue) {\n                let previousRefId = $root.refIds.get(previousValue);\n                if (previousRefId !== undefined && refId !== previousRefId) {\n                    //\n                    // enqueue onRemove if structure has been replaced.\n                    //\n                    const entries = previousValue.entries();\n                    let iter;\n                    while ((iter = entries.next()) && !iter.done) {\n                        const [key, value] = iter.value;\n                        // if value is a schema, remove its reference\n                        if (typeof (value) === \"object\") {\n                            previousRefId = $root.refIds.get(value);\n                            $root.removeRef(previousRefId);\n                        }\n                        allChanges.push({\n                            ref: previousValue,\n                            refId: previousRefId,\n                            op: exports.OPERATION.DELETE,\n                            field: key,\n                            value: undefined,\n                            previousValue: value,\n                        });\n                    }\n                }\n            }\n            $root.addRef(refId, value, (valueRef !== previousValue ||\n                (operation === exports.OPERATION.DELETE_AND_ADD && valueRef === previousValue)));\n        }\n        return { value, previousValue };\n    }\n    const decodeSchemaOperation = function (decoder, bytes, it, ref, allChanges) {\n        const first_byte = bytes[it.offset++];\n        const metadata = ref.constructor[Symbol.metadata];\n        // \"compressed\" index + operation\n        const operation = (first_byte >> 6) << 6;\n        const index = first_byte % (operation || 255);\n        // skip early if field is not defined\n        const field = metadata[index];\n        if (field === undefined) {\n            console.warn(\"@colyseus/schema: field not defined at\", { index, ref: ref.constructor.name, metadata });\n            return DEFINITION_MISMATCH;\n        }\n        const { value, previousValue } = decodeValue(decoder, operation, ref, index, field.type, bytes, it, allChanges);\n        if (value !== null && value !== undefined) {\n            ref[field.name] = value;\n        }\n        // add change\n        if (previousValue !== value) {\n            allChanges.push({\n                ref,\n                refId: decoder.currentRefId,\n                op: operation,\n                field: field.name,\n                value,\n                previousValue,\n            });\n        }\n    };\n    const decodeKeyValueOperation = function (decoder, bytes, it, ref, allChanges) {\n        // \"uncompressed\" index + operation (array/map items)\n        const operation = bytes[it.offset++];\n        if (operation === exports.OPERATION.CLEAR) {\n            //\n            // When decoding:\n            // - enqueue items for DELETE callback.\n            // - flag child items for garbage collection.\n            //\n            decoder.removeChildRefs(ref, allChanges);\n            ref.clear();\n            return;\n        }\n        const index = decode.number(bytes, it);\n        const type = ref[$childType];\n        let dynamicIndex;\n        if ((operation & exports.OPERATION.ADD) === exports.OPERATION.ADD) { // ADD or DELETE_AND_ADD\n            if (typeof (ref['set']) === \"function\") {\n                dynamicIndex = decode.string(bytes, it); // MapSchema\n                ref['setIndex'](index, dynamicIndex);\n            }\n            else {\n                dynamicIndex = index; // ArraySchema\n            }\n        }\n        else {\n            // get dynamic index from \"ref\"\n            dynamicIndex = ref['getIndex'](index);\n        }\n        const { value, previousValue } = decodeValue(decoder, operation, ref, index, type, bytes, it, allChanges);\n        if (value !== null && value !== undefined) {\n            if (typeof (ref['set']) === \"function\") {\n                // MapSchema\n                ref['$items'].set(dynamicIndex, value);\n            }\n            else if (typeof (ref['$setAt']) === \"function\") {\n                // ArraySchema\n                ref['$setAt'](index, value, operation);\n            }\n            else if (typeof (ref['add']) === \"function\") {\n                // CollectionSchema && SetSchema\n                const index = ref.add(value);\n                if (typeof (index) === \"number\") {\n                    ref['setIndex'](index, index);\n                }\n            }\n        }\n        // add change\n        if (previousValue !== value) {\n            allChanges.push({\n                ref,\n                refId: decoder.currentRefId,\n                op: operation,\n                field: \"\", // FIXME: remove this\n                dynamicIndex,\n                value,\n                previousValue,\n            });\n        }\n    };\n    const decodeArray = function (decoder, bytes, it, ref, allChanges) {\n        // \"uncompressed\" index + operation (array/map items)\n        let operation = bytes[it.offset++];\n        let index;\n        if (operation === exports.OPERATION.CLEAR) {\n            //\n            // When decoding:\n            // - enqueue items for DELETE callback.\n            // - flag child items for garbage collection.\n            //\n            decoder.removeChildRefs(ref, allChanges);\n            ref.clear();\n            return;\n        }\n        else if (operation === exports.OPERATION.REVERSE) {\n            ref.reverse();\n            return;\n        }\n        else if (operation === exports.OPERATION.DELETE_BY_REFID) {\n            // TODO: refactor here, try to follow same flow as below\n            const refId = decode.number(bytes, it);\n            const previousValue = decoder.root.refs.get(refId);\n            index = ref.findIndex((value) => value === previousValue);\n            ref[$deleteByIndex](index);\n            allChanges.push({\n                ref,\n                refId: decoder.currentRefId,\n                op: exports.OPERATION.DELETE,\n                field: \"\", // FIXME: remove this\n                dynamicIndex: index,\n                value: undefined,\n                previousValue,\n            });\n            return;\n        }\n        else if (operation === exports.OPERATION.ADD_BY_REFID) {\n            const refId = decode.number(bytes, it);\n            const itemByRefId = decoder.root.refs.get(refId);\n            // if item already exists, use existing index\n            if (itemByRefId) {\n                index = ref.findIndex((value) => value === itemByRefId);\n            }\n            // fallback to use last index\n            if (index === -1 || index === undefined) {\n                index = ref.length;\n            }\n        }\n        else {\n            index = decode.number(bytes, it);\n        }\n        const type = ref[$childType];\n        let dynamicIndex = index;\n        const { value, previousValue } = decodeValue(decoder, operation, ref, index, type, bytes, it, allChanges);\n        if (value !== null && value !== undefined &&\n            value !== previousValue // avoid setting same value twice (if index === 0 it will result in a \"unshift\" for ArraySchema)\n        ) {\n            // ArraySchema\n            ref['$setAt'](index, value, operation);\n        }\n        // add change\n        if (previousValue !== value) {\n            allChanges.push({\n                ref,\n                refId: decoder.currentRefId,\n                op: operation,\n                field: \"\", // FIXME: remove this\n                dynamicIndex,\n                value,\n                previousValue,\n            });\n        }\n    };\n\n    class EncodeSchemaError extends Error {\n    }\n    function assertType(value, type, klass, field) {\n        let typeofTarget;\n        let allowNull = false;\n        switch (type) {\n            case \"number\":\n            case \"int8\":\n            case \"uint8\":\n            case \"int16\":\n            case \"uint16\":\n            case \"int32\":\n            case \"uint32\":\n            case \"int64\":\n            case \"uint64\":\n            case \"float32\":\n            case \"float64\":\n                typeofTarget = \"number\";\n                if (isNaN(value)) {\n                    console.log(`trying to encode \"NaN\" in ${klass.constructor.name}#${field}`);\n                }\n                break;\n            case \"bigint64\":\n            case \"biguint64\":\n                typeofTarget = \"bigint\";\n                break;\n            case \"string\":\n                typeofTarget = \"string\";\n                allowNull = true;\n                break;\n            case \"boolean\":\n                // boolean is always encoded as true/false based on truthiness\n                return;\n            default:\n                // skip assertion for custom types\n                // TODO: allow custom types to define their own assertions\n                return;\n        }\n        if (typeof (value) !== typeofTarget && (!allowNull || (allowNull && value !== null))) {\n            let foundValue = `'${JSON.stringify(value)}'${(value && value.constructor && ` (${value.constructor.name})`) || ''}`;\n            throw new EncodeSchemaError(`a '${typeofTarget}' was expected, but ${foundValue} was provided in ${klass.constructor.name}#${field}`);\n        }\n    }\n    function assertInstanceType(value, type, instance, field) {\n        if (!(value instanceof type)) {\n            throw new EncodeSchemaError(`a '${type.name}' was expected, but '${value && value.constructor.name}' was provided in ${instance.constructor.name}#${field}`);\n        }\n    }\n\n    var _a$4, _b$4;\n    const DEFAULT_SORT = (a, b) => {\n        const A = a.toString();\n        const B = b.toString();\n        if (A < B)\n            return -1;\n        else if (A > B)\n            return 1;\n        else\n            return 0;\n    };\n    class ArraySchema {\n        static { this[_a$4] = encodeArray; }\n        static { this[_b$4] = decodeArray; }\n        /**\n         * Determine if a property must be filtered.\n         * - If returns false, the property is NOT going to be encoded.\n         * - If returns true, the property is going to be encoded.\n         *\n         * Encoding with \"filters\" happens in two steps:\n         * - First, the encoder iterates over all \"not owned\" properties and encodes them.\n         * - Then, the encoder iterates over all \"owned\" properties per instance and encodes them.\n         */\n        static [(_a$4 = $encoder, _b$4 = $decoder, $filter)](ref, index, view) {\n            return (!view ||\n                typeof (ref[$childType]) === \"string\" ||\n                view.isChangeTreeVisible(ref['tmpItems'][index]?.[$changes]));\n        }\n        static is(type) {\n            return (\n            // type format: [\"string\"]\n            Array.isArray(type) ||\n                // type format: { array: \"string\" }\n                (type['array'] !== undefined));\n        }\n        static from(iterable) {\n            return new ArraySchema(...Array.from(iterable));\n        }\n        constructor(...items) {\n            this.items = [];\n            this.tmpItems = [];\n            this.deletedIndexes = {};\n            this.isMovingItems = false;\n            Object.defineProperty(this, $childType, {\n                value: undefined,\n                enumerable: false,\n                writable: true,\n                configurable: true,\n            });\n            const proxy = new Proxy(this, {\n                get: (obj, prop) => {\n                    if (typeof (prop) !== \"symbol\" &&\n                        // FIXME: d8 accuses this as low performance\n                        !isNaN(prop) // https://stackoverflow.com/a/175787/892698\n                    ) {\n                        return this.items[prop];\n                    }\n                    else {\n                        return Reflect.get(obj, prop);\n                    }\n                },\n                set: (obj, key, setValue) => {\n                    if (typeof (key) !== \"symbol\" && !isNaN(key)) {\n                        if (setValue === undefined || setValue === null) {\n                            obj.$deleteAt(key);\n                        }\n                        else {\n                            if (setValue[$changes]) {\n                                assertInstanceType(setValue, obj[$childType], obj, key);\n                                const previousValue = obj.items[key];\n                                if (!obj.isMovingItems) {\n                                    obj.$changeAt(Number(key), setValue);\n                                }\n                                else {\n                                    if (previousValue !== undefined) {\n                                        if (setValue[$changes].isNew) {\n                                            obj[$changes].indexedOperation(Number(key), exports.OPERATION.MOVE_AND_ADD);\n                                        }\n                                        else {\n                                            if ((obj[$changes].getChange(Number(key)) & exports.OPERATION.DELETE) === exports.OPERATION.DELETE) {\n                                                obj[$changes].indexedOperation(Number(key), exports.OPERATION.DELETE_AND_MOVE);\n                                            }\n                                            else {\n                                                obj[$changes].indexedOperation(Number(key), exports.OPERATION.MOVE);\n                                            }\n                                        }\n                                    }\n                                    else if (setValue[$changes].isNew) {\n                                        obj[$changes].indexedOperation(Number(key), exports.OPERATION.ADD);\n                                    }\n                                    setValue[$changes].setParent(this, obj[$changes].root, key);\n                                }\n                                if (previousValue !== undefined) {\n                                    // remove root reference from previous value\n                                    previousValue[$changes].root?.remove(previousValue[$changes]);\n                                }\n                            }\n                            else {\n                                obj.$changeAt(Number(key), setValue);\n                            }\n                            obj.items[key] = setValue;\n                            obj.tmpItems[key] = setValue;\n                        }\n                        return true;\n                    }\n                    else {\n                        return Reflect.set(obj, key, setValue);\n                    }\n                },\n                deleteProperty: (obj, prop) => {\n                    if (typeof (prop) === \"number\") {\n                        obj.$deleteAt(prop);\n                    }\n                    else {\n                        delete obj[prop];\n                    }\n                    return true;\n                },\n                has: (obj, key) => {\n                    if (typeof (key) !== \"symbol\" && !isNaN(Number(key))) {\n                        return Reflect.has(this.items, key);\n                    }\n                    return Reflect.has(obj, key);\n                }\n            });\n            Object.defineProperty(this, $changes, {\n                value: new ChangeTree(proxy),\n                enumerable: false,\n                writable: true,\n            });\n            if (items.length > 0) {\n                this.push(...items);\n            }\n            return proxy;\n        }\n        set length(newLength) {\n            if (newLength === 0) {\n                this.clear();\n            }\n            else if (newLength < this.items.length) {\n                this.splice(newLength, this.length - newLength);\n            }\n            else {\n                console.warn(\"ArraySchema: can't set .length to a higher value than its length.\");\n            }\n        }\n        get length() {\n            return this.items.length;\n        }\n        push(...values) {\n            let length = this.tmpItems.length;\n            const changeTree = this[$changes];\n            for (let i = 0, l = values.length; i < l; i++, length++) {\n                const value = values[i];\n                if (value === undefined || value === null) {\n                    // skip null values\n                    return;\n                }\n                else if (typeof (value) === \"object\" && this[$childType]) {\n                    assertInstanceType(value, this[$childType], this, i);\n                    // TODO: move value[$changes]?.setParent() to this block.\n                }\n                changeTree.indexedOperation(length, exports.OPERATION.ADD, this.items.length);\n                this.items.push(value);\n                this.tmpItems.push(value);\n                //\n                // set value's parent after the value is set\n                // (to avoid encoding \"refId\" operations before parent's \"ADD\" operation)\n                //\n                value[$changes]?.setParent(this, changeTree.root, length);\n            }\n            return length;\n        }\n        /**\n         * Removes the last element from an array and returns it.\n         */\n        pop() {\n            let index = -1;\n            // find last non-undefined index\n            for (let i = this.tmpItems.length - 1; i >= 0; i--) {\n                // if (this.tmpItems[i] !== undefined) {\n                if (this.deletedIndexes[i] !== true) {\n                    index = i;\n                    break;\n                }\n            }\n            if (index < 0) {\n                return undefined;\n            }\n            this[$changes].delete(index, undefined, this.items.length - 1);\n            this.deletedIndexes[index] = true;\n            return this.items.pop();\n        }\n        at(index) {\n            // Allow negative indexing from the end\n            if (index < 0)\n                index += this.length;\n            return this.items[index];\n        }\n        // encoding only\n        $changeAt(index, value) {\n            if (value === undefined || value === null) {\n                console.error(\"ArraySchema items cannot be null nor undefined; Use `deleteAt(index)` instead.\");\n                return;\n            }\n            // skip if the value is the same as cached.\n            if (this.items[index] === value) {\n                return;\n            }\n            const operation = (this.items[index] !== undefined)\n                ? typeof (value) === \"object\"\n                    ? exports.OPERATION.DELETE_AND_ADD // schema child\n                    : exports.OPERATION.REPLACE // primitive\n                : exports.OPERATION.ADD;\n            const changeTree = this[$changes];\n            changeTree.change(index, operation);\n            //\n            // set value's parent after the value is set\n            // (to avoid encoding \"refId\" operations before parent's \"ADD\" operation)\n            //\n            value[$changes]?.setParent(this, changeTree.root, index);\n        }\n        // encoding only\n        $deleteAt(index, operation) {\n            this[$changes].delete(index, operation);\n        }\n        // decoding only\n        $setAt(index, value, operation) {\n            if (index === 0 &&\n                operation === exports.OPERATION.ADD &&\n                this.items[index] !== undefined) {\n                // handle decoding unshift\n                this.items.unshift(value);\n            }\n            else if (operation === exports.OPERATION.DELETE_AND_MOVE) {\n                this.items.splice(index, 1);\n                this.items[index] = value;\n            }\n            else {\n                this.items[index] = value;\n            }\n        }\n        clear() {\n            // skip if already clear\n            if (this.items.length === 0) {\n                return;\n            }\n            // discard previous operations.\n            const changeTree = this[$changes];\n            // remove children references\n            changeTree.forEachChild((childChangeTree, _) => {\n                changeTree.root?.remove(childChangeTree);\n            });\n            changeTree.discard(true);\n            changeTree.operation(exports.OPERATION.CLEAR);\n            this.items.length = 0;\n            this.tmpItems.length = 0;\n        }\n        /**\n         * Combines two or more arrays.\n         * @param items Additional items to add to the end of array1.\n         */\n        // @ts-ignore\n        concat(...items) {\n            return new ArraySchema(...this.items.concat(...items));\n        }\n        /**\n         * Adds all the elements of an array separated by the specified separator string.\n         * @param separator A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.\n         */\n        join(separator) {\n            return this.items.join(separator);\n        }\n        /**\n         * Reverses the elements in an Array.\n         */\n        // @ts-ignore\n        reverse() {\n            this[$changes].operation(exports.OPERATION.REVERSE);\n            this.items.reverse();\n            this.tmpItems.reverse();\n            return this;\n        }\n        /**\n         * Removes the first element from an array and returns it.\n         */\n        shift() {\n            if (this.items.length === 0) {\n                return undefined;\n            }\n            const changeTree = this[$changes];\n            const index = this.tmpItems.findIndex(item => item === this.items[0]);\n            const allChangesIndex = this.items.findIndex(item => item === this.items[0]);\n            changeTree.delete(index, exports.OPERATION.DELETE, allChangesIndex);\n            changeTree.shiftAllChangeIndexes(-1, allChangesIndex);\n            this.deletedIndexes[index] = true;\n            return this.items.shift();\n        }\n        /**\n         * Returns a section of an array.\n         * @param start The beginning of the specified portion of the array.\n         * @param end The end of the specified portion of the array. This is exclusive of the element at the index 'end'.\n         */\n        slice(start, end) {\n            const sliced = new ArraySchema();\n            sliced.push(...this.items.slice(start, end));\n            return sliced;\n        }\n        /**\n         * Sorts an array.\n         * @param compareFn Function used to determine the order of the elements. It is expected to return\n         * a negative value if first argument is less than second argument, zero if they're equal and a positive\n         * value otherwise. If omitted, the elements are sorted in ascending, ASCII character order.\n         * ```ts\n         * [11,2,22,1].sort((a, b) => a - b)\n         * ```\n         */\n        sort(compareFn = DEFAULT_SORT) {\n            this.isMovingItems = true;\n            const changeTree = this[$changes];\n            const sortedItems = this.items.sort(compareFn);\n            // wouldn't OPERATION.MOVE make more sense here?\n            sortedItems.forEach((_, i) => changeTree.change(i, exports.OPERATION.REPLACE));\n            this.tmpItems.sort(compareFn);\n            this.isMovingItems = false;\n            return this;\n        }\n        /**\n         * Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\n         * @param start The zero-based location in the array from which to start removing elements.\n         * @param deleteCount The number of elements to remove.\n         * @param insertItems Elements to insert into the array in place of the deleted elements.\n         */\n        splice(start, deleteCount, ...insertItems) {\n            const changeTree = this[$changes];\n            const itemsLength = this.items.length;\n            const tmpItemsLength = this.tmpItems.length;\n            const insertCount = insertItems.length;\n            // build up-to-date list of indexes, excluding removed values.\n            const indexes = [];\n            for (let i = 0; i < tmpItemsLength; i++) {\n                if (this.deletedIndexes[i] !== true) {\n                    indexes.push(i);\n                }\n            }\n            if (itemsLength > start) {\n                // if deleteCount is not provided, delete all items from start to end\n                if (deleteCount === undefined) {\n                    deleteCount = itemsLength - start;\n                }\n                //\n                // delete operations at correct index\n                //\n                for (let i = start; i < start + deleteCount; i++) {\n                    const index = indexes[i];\n                    changeTree.delete(index, exports.OPERATION.DELETE);\n                    this.deletedIndexes[index] = true;\n                }\n            }\n            else {\n                // not enough items to delete\n                deleteCount = 0;\n            }\n            // insert operations\n            if (insertCount > 0) {\n                if (insertCount > deleteCount) {\n                    console.error(\"Inserting more elements than deleting during ArraySchema#splice()\");\n                    throw new Error(\"ArraySchema#splice(): insertCount must be equal or lower than deleteCount.\");\n                }\n                for (let i = 0; i < insertCount; i++) {\n                    const addIndex = (indexes[start] ?? itemsLength) + i;\n                    changeTree.indexedOperation(addIndex, (this.deletedIndexes[addIndex])\n                        ? exports.OPERATION.DELETE_AND_ADD\n                        : exports.OPERATION.ADD);\n                    // set value's parent/root\n                    insertItems[i][$changes]?.setParent(this, changeTree.root, addIndex);\n                }\n            }\n            //\n            // delete exceeding indexes from \"allChanges\"\n            // (prevent .encodeAll() from encoding non-existing items)\n            //\n            if (deleteCount > insertCount) {\n                changeTree.shiftAllChangeIndexes(-(deleteCount - insertCount), indexes[start + insertCount]);\n                // debugChangeSet(\"AFTER SHIFT indexes\", changeTree.allChanges);\n            }\n            //\n            // FIXME: this code block is duplicated on ChangeTree\n            //\n            if (changeTree.filteredChanges !== undefined) {\n                changeTree.root?.enqueueChangeTree(changeTree, 'filteredChanges');\n            }\n            else {\n                changeTree.root?.enqueueChangeTree(changeTree, 'changes');\n            }\n            return this.items.splice(start, deleteCount, ...insertItems);\n        }\n        /**\n         * Inserts new elements at the start of an array.\n         * @param items  Elements to insert at the start of the Array.\n         */\n        unshift(...items) {\n            const changeTree = this[$changes];\n            // shift indexes\n            changeTree.shiftChangeIndexes(items.length);\n            // new index\n            if (changeTree.isFiltered) {\n                setOperationAtIndex(changeTree.filteredChanges, this.items.length);\n                // changeTree.filteredChanges[this.items.length] = OPERATION.ADD;\n            }\n            else {\n                setOperationAtIndex(changeTree.allChanges, this.items.length);\n                // changeTree.allChanges[this.items.length] = OPERATION.ADD;\n            }\n            // FIXME: should we use OPERATION.MOVE here instead?\n            items.forEach((_, index) => {\n                changeTree.change(index, exports.OPERATION.ADD);\n            });\n            this.tmpItems.unshift(...items);\n            return this.items.unshift(...items);\n        }\n        /**\n         * Returns the index of the first occurrence of a value in an array.\n         * @param searchElement The value to locate in the array.\n         * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.\n         */\n        indexOf(searchElement, fromIndex) {\n            return this.items.indexOf(searchElement, fromIndex);\n        }\n        /**\n         * Returns the index of the last occurrence of a specified value in an array.\n         * @param searchElement The value to locate in the array.\n         * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.\n         */\n        lastIndexOf(searchElement, fromIndex = this.length - 1) {\n            return this.items.lastIndexOf(searchElement, fromIndex);\n        }\n        every(callbackfn, thisArg) {\n            return this.items.every(callbackfn, thisArg);\n        }\n        /**\n         * Determines whether the specified callback function returns true for any element of an array.\n         * @param callbackfn A function that accepts up to three arguments. The some method calls\n         * the callbackfn function for each element in the array until the callbackfn returns a value\n         * which is coercible to the Boolean value true, or until the end of the array.\n         * @param thisArg An object to which the this keyword can refer in the callbackfn function.\n         * If thisArg is omitted, undefined is used as the this value.\n         */\n        some(callbackfn, thisArg) {\n            return this.items.some(callbackfn, thisArg);\n        }\n        /**\n         * Performs the specified action for each element in an array.\n         * @param callbackfn  A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\n         * @param thisArg  An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\n         */\n        forEach(callbackfn, thisArg) {\n            return this.items.forEach(callbackfn, thisArg);\n        }\n        /**\n         * Calls a defined callback function on each element of an array, and returns an array that contains the results.\n         * @param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\n         * @param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\n         */\n        map(callbackfn, thisArg) {\n            return this.items.map(callbackfn, thisArg);\n        }\n        filter(callbackfn, thisArg) {\n            return this.items.filter(callbackfn, thisArg);\n        }\n        /**\n         * Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n         * @param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\n         * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n         */\n        reduce(callbackfn, initialValue) {\n            return this.items.reduce(callbackfn, initialValue);\n        }\n        /**\n         * Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n         * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\n         * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n         */\n        reduceRight(callbackfn, initialValue) {\n            return this.items.reduceRight(callbackfn, initialValue);\n        }\n        /**\n         * Returns the value of the first element in the array where predicate is true, and undefined\n         * otherwise.\n         * @param predicate find calls predicate once for each element of the array, in ascending\n         * order, until it finds one where predicate returns true. If such an element is found, find\n         * immediately returns that element value. Otherwise, find returns undefined.\n         * @param thisArg If provided, it will be used as the this value for each invocation of\n         * predicate. If it is not provided, undefined is used instead.\n         */\n        find(predicate, thisArg) {\n            return this.items.find(predicate, thisArg);\n        }\n        /**\n         * Returns the index of the first element in the array where predicate is true, and -1\n         * otherwise.\n         * @param predicate find calls predicate once for each element of the array, in ascending\n         * order, until it finds one where predicate returns true. If such an element is found,\n         * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\n         * @param thisArg If provided, it will be used as the this value for each invocation of\n         * predicate. If it is not provided, undefined is used instead.\n         */\n        findIndex(predicate, thisArg) {\n            return this.items.findIndex(predicate, thisArg);\n        }\n        /**\n         * Returns the this object after filling the section identified by start and end with value\n         * @param value value to fill array section with\n         * @param start index to start filling the array at. If start is negative, it is treated as\n         * length+start where length is the length of the array.\n         * @param end index to stop filling the array at. If end is negative, it is treated as\n         * length+end.\n         */\n        fill(value, start, end) {\n            //\n            // TODO\n            //\n            throw new Error(\"ArraySchema#fill() not implemented\");\n        }\n        /**\n         * Returns the this object after copying a section of the array identified by start and end\n         * to the same array starting at position target\n         * @param target If target is negative, it is treated as length+target where length is the\n         * length of the array.\n         * @param start If start is negative, it is treated as length+start. If end is negative, it\n         * is treated as length+end.\n         * @param end If not specified, length of the this object is used as its default value.\n         */\n        copyWithin(target, start, end) {\n            //\n            // TODO\n            //\n            throw new Error(\"ArraySchema#copyWithin() not implemented\");\n        }\n        /**\n         * Returns a string representation of an array.\n         */\n        toString() {\n            return this.items.toString();\n        }\n        /**\n         * Returns a string representation of an array. The elements are converted to string using their toLocalString methods.\n         */\n        toLocaleString() {\n            return this.items.toLocaleString();\n        }\n        ;\n        /** Iterator */\n        [Symbol.iterator]() {\n            return this.items[Symbol.iterator]();\n        }\n        static get [Symbol.species]() {\n            return ArraySchema;\n        }\n        /**\n         * Returns an iterable of key, value pairs for every entry in the array\n         */\n        entries() { return this.items.entries(); }\n        /**\n         * Returns an iterable of keys in the array\n         */\n        keys() { return this.items.keys(); }\n        /**\n         * Returns an iterable of values in the array\n         */\n        values() { return this.items.values(); }\n        /**\n         * Determines whether an array includes a certain element, returning true or false as appropriate.\n         * @param searchElement The element to search for.\n         * @param fromIndex The position in this array at which to begin searching for searchElement.\n         */\n        includes(searchElement, fromIndex) {\n            return this.items.includes(searchElement, fromIndex);\n        }\n        //\n        // ES2022\n        //\n        /**\n         * Calls a defined callback function on each element of an array. Then, flattens the result into\n         * a new array.\n         * This is identical to a map followed by flat with depth 1.\n         *\n         * @param callback A function that accepts up to three arguments. The flatMap method calls the\n         * callback function one time for each element in the array.\n         * @param thisArg An object to which the this keyword can refer in the callback function. If\n         * thisArg is omitted, undefined is used as the this value.\n         */\n        // @ts-ignore\n        flatMap(callback, thisArg) {\n            // @ts-ignore\n            throw new Error(\"ArraySchema#flatMap() is not supported.\");\n        }\n        /**\n         * Returns a new array with all sub-array elements concatenated into it recursively up to the\n         * specified depth.\n         *\n         * @param depth The maximum recursion depth\n         */\n        // @ts-ignore\n        flat(depth) {\n            throw new Error(\"ArraySchema#flat() is not supported.\");\n        }\n        findLast() {\n            // @ts-ignore\n            return this.items.findLast.apply(this.items, arguments);\n        }\n        findLastIndex(...args) {\n            // @ts-ignore\n            return this.items.findLastIndex.apply(this.items, arguments);\n        }\n        //\n        // ES2023\n        //\n        with(index, value) {\n            const copy = this.items.slice();\n            // Allow negative indexing from the end\n            if (index < 0)\n                index += this.length;\n            copy[index] = value;\n            return new ArraySchema(...copy);\n        }\n        toReversed() {\n            return this.items.slice().reverse();\n        }\n        toSorted(compareFn) {\n            return this.items.slice().sort(compareFn);\n        }\n        // @ts-ignore\n        toSpliced(start, deleteCount, ...items) {\n            // @ts-ignore\n            return this.items.toSpliced.apply(copy, arguments);\n        }\n        shuffle() {\n            return this.move((_) => {\n                let currentIndex = this.items.length;\n                while (currentIndex != 0) {\n                    let randomIndex = Math.floor(Math.random() * currentIndex);\n                    currentIndex--;\n                    [this[currentIndex], this[randomIndex]] = [this[randomIndex], this[currentIndex]];\n                }\n            });\n        }\n        /**\n         * Allows to move items around in the array.\n         *\n         * Example:\n         *     state.cards.move((cards) => {\n         *         [cards[4], cards[3]] = [cards[3], cards[4]];\n         *         [cards[3], cards[2]] = [cards[2], cards[3]];\n         *         [cards[2], cards[0]] = [cards[0], cards[2]];\n         *         [cards[1], cards[1]] = [cards[1], cards[1]];\n         *         [cards[0], cards[0]] = [cards[0], cards[0]];\n         *     })\n         *\n         * @param cb\n         * @returns\n         */\n        move(cb) {\n            this.isMovingItems = true;\n            cb(this);\n            this.isMovingItems = false;\n            return this;\n        }\n        [($getByIndex)](index, isEncodeAll = false) {\n            //\n            // TODO: avoid unecessary `this.tmpItems` check during decoding.\n            //\n            //    ENCODING uses `this.tmpItems` (or `this.items` if `isEncodeAll` is true)\n            //    DECODING uses `this.items`\n            //\n            return (isEncodeAll)\n                ? this.items[index]\n                : this.deletedIndexes[index]\n                    ? this.items[index]\n                    : this.tmpItems[index] || this.items[index];\n        }\n        [$deleteByIndex](index) {\n            this.items[index] = undefined;\n            this.tmpItems[index] = undefined; // TODO: do not try to get \"tmpItems\" at decoding time.\n        }\n        [$onEncodeEnd]() {\n            this.tmpItems = this.items.slice();\n            this.deletedIndexes = {};\n        }\n        [$onDecodeEnd]() {\n            this.items = this.items.filter((item) => item !== undefined);\n            this.tmpItems = this.items.slice(); // TODO: do no use \"tmpItems\" at decoding time.\n        }\n        toArray() {\n            return this.items.slice(0);\n        }\n        toJSON() {\n            return this.toArray().map((value) => {\n                return (typeof (value['toJSON']) === \"function\")\n                    ? value['toJSON']()\n                    : value;\n            });\n        }\n        //\n        // Decoding utilities\n        //\n        clone(isDecoding) {\n            let cloned;\n            if (isDecoding) {\n                cloned = new ArraySchema();\n                cloned.push(...this.items);\n            }\n            else {\n                cloned = new ArraySchema(...this.map(item => ((item[$changes])\n                    ? item.clone()\n                    : item)));\n            }\n            return cloned;\n        }\n        ;\n    }\n    registerType(\"array\", { constructor: ArraySchema });\n\n    var _a$3, _b$3;\n    class MapSchema {\n        static { this[_a$3] = encodeKeyValueOperation; }\n        static { this[_b$3] = decodeKeyValueOperation; }\n        /**\n         * Determine if a property must be filtered.\n         * - If returns false, the property is NOT going to be encoded.\n         * - If returns true, the property is going to be encoded.\n         *\n         * Encoding with \"filters\" happens in two steps:\n         * - First, the encoder iterates over all \"not owned\" properties and encodes them.\n         * - Then, the encoder iterates over all \"owned\" properties per instance and encodes them.\n         */\n        static [(_a$3 = $encoder, _b$3 = $decoder, $filter)](ref, index, view) {\n            return (!view ||\n                typeof (ref[$childType]) === \"string\" ||\n                view.isChangeTreeVisible((ref[$getByIndex](index) ?? ref.deletedItems[index])[$changes]));\n        }\n        static is(type) {\n            return type['map'] !== undefined;\n        }\n        constructor(initialValues) {\n            this.$items = new Map();\n            this.$indexes = new Map();\n            this.deletedItems = {};\n            const changeTree = new ChangeTree(this);\n            changeTree.indexes = {};\n            Object.defineProperty(this, $changes, {\n                value: changeTree,\n                enumerable: false,\n                writable: true,\n            });\n            if (initialValues) {\n                if (initialValues instanceof Map ||\n                    initialValues instanceof MapSchema) {\n                    initialValues.forEach((v, k) => this.set(k, v));\n                }\n                else {\n                    for (const k in initialValues) {\n                        this.set(k, initialValues[k]);\n                    }\n                }\n            }\n            Object.defineProperty(this, $childType, {\n                value: undefined,\n                enumerable: false,\n                writable: true,\n                configurable: true,\n            });\n        }\n        /** Iterator */\n        [Symbol.iterator]() { return this.$items[Symbol.iterator](); }\n        get [Symbol.toStringTag]() { return this.$items[Symbol.toStringTag]; }\n        static get [Symbol.species]() { return MapSchema; }\n        set(key, value) {\n            if (value === undefined || value === null) {\n                throw new Error(`MapSchema#set('${key}', ${value}): trying to set ${value} value on '${key}'.`);\n            }\n            else if (typeof (value) === \"object\" && this[$childType]) {\n                assertInstanceType(value, this[$childType], this, key);\n            }\n            // Force \"key\" as string\n            // See: https://github.com/colyseus/colyseus/issues/561#issuecomment-1646733468\n            key = key.toString();\n            const changeTree = this[$changes];\n            const isRef = (value[$changes]) !== undefined;\n            let index;\n            let operation;\n            // IS REPLACE?\n            if (typeof (changeTree.indexes[key]) !== \"undefined\") {\n                index = changeTree.indexes[key];\n                operation = exports.OPERATION.REPLACE;\n                const previousValue = this.$items.get(key);\n                if (previousValue === value) {\n                    // if value is the same, avoid re-encoding it.\n                    return;\n                }\n                else if (isRef) {\n                    // if is schema, force ADD operation if value differ from previous one.\n                    operation = exports.OPERATION.DELETE_AND_ADD;\n                    // remove reference from previous value\n                    if (previousValue !== undefined) {\n                        previousValue[$changes].root?.remove(previousValue[$changes]);\n                    }\n                }\n                if (this.deletedItems[index]) {\n                    delete this.deletedItems[index];\n                }\n            }\n            else {\n                index = changeTree.indexes[$numFields] ?? 0;\n                operation = exports.OPERATION.ADD;\n                this.$indexes.set(index, key);\n                changeTree.indexes[key] = index;\n                changeTree.indexes[$numFields] = index + 1;\n            }\n            this.$items.set(key, value);\n            changeTree.change(index, operation);\n            //\n            // set value's parent after the value is set\n            // (to avoid encoding \"refId\" operations before parent's \"ADD\" operation)\n            //\n            if (isRef) {\n                value[$changes].setParent(this, changeTree.root, index);\n            }\n            return this;\n        }\n        get(key) {\n            return this.$items.get(key);\n        }\n        delete(key) {\n            const index = this[$changes].indexes[key];\n            this.deletedItems[index] = this[$changes].delete(index);\n            return this.$items.delete(key);\n        }\n        clear() {\n            const changeTree = this[$changes];\n            // discard previous operations.\n            changeTree.discard(true);\n            changeTree.indexes = {};\n            // remove children references\n            changeTree.forEachChild((childChangeTree, _) => {\n                changeTree.root?.remove(childChangeTree);\n            });\n            // clear previous indexes\n            this.$indexes.clear();\n            // clear items\n            this.$items.clear();\n            changeTree.operation(exports.OPERATION.CLEAR);\n        }\n        has(key) {\n            return this.$items.has(key);\n        }\n        forEach(callbackfn) {\n            this.$items.forEach(callbackfn);\n        }\n        entries() {\n            return this.$items.entries();\n        }\n        keys() {\n            return this.$items.keys();\n        }\n        values() {\n            return this.$items.values();\n        }\n        get size() {\n            return this.$items.size;\n        }\n        setIndex(index, key) {\n            this.$indexes.set(index, key);\n        }\n        getIndex(index) {\n            return this.$indexes.get(index);\n        }\n        [$getByIndex](index) {\n            return this.$items.get(this.$indexes.get(index));\n        }\n        [$deleteByIndex](index) {\n            const key = this.$indexes.get(index);\n            this.$items.delete(key);\n            this.$indexes.delete(index);\n        }\n        [$onEncodeEnd]() {\n            const changeTree = this[$changes];\n            // - cleanup changeTree.indexes\n            // - cleanup $indexes\n            for (const indexStr in this.deletedItems) {\n                const index = parseInt(indexStr);\n                const key = this.$indexes.get(index);\n                // TODO: refactor this.\n                // it shouldn't be necessary to keep track of indexes both on changeTree and on $indexes\n                delete changeTree.indexes[key];\n                this.$indexes.delete(index);\n            }\n            this.deletedItems = {};\n        }\n        toJSON() {\n            const map = {};\n            this.forEach((value, key) => {\n                map[key] = (typeof (value['toJSON']) === \"function\")\n                    ? value['toJSON']()\n                    : value;\n            });\n            return map;\n        }\n        //\n        // Decoding utilities\n        //\n        // @ts-ignore\n        clone(isDecoding) {\n            let cloned;\n            if (isDecoding) {\n                // client-side\n                cloned = Object.assign(new MapSchema(), this);\n            }\n            else {\n                // server-side\n                cloned = new MapSchema();\n                this.forEach((value, key) => {\n                    if (value[$changes]) {\n                        cloned.set(key, value['clone']());\n                    }\n                    else {\n                        cloned.set(key, value);\n                    }\n                });\n            }\n            return cloned;\n        }\n    }\n    registerType(\"map\", { constructor: MapSchema });\n\n    var _a$2, _b$2;\n    class CollectionSchema {\n        static { this[_a$2] = encodeKeyValueOperation; }\n        static { this[_b$2] = decodeKeyValueOperation; }\n        /**\n         * Determine if a property must be filtered.\n         * - If returns false, the property is NOT going to be encoded.\n         * - If returns true, the property is going to be encoded.\n         *\n         * Encoding with \"filters\" happens in two steps:\n         * - First, the encoder iterates over all \"not owned\" properties and encodes them.\n         * - Then, the encoder iterates over all \"owned\" properties per instance and encodes them.\n         */\n        static [(_a$2 = $encoder, _b$2 = $decoder, $filter)](ref, index, view) {\n            return (!view ||\n                typeof (ref[$childType]) === \"string\" ||\n                view.isChangeTreeVisible((ref[$getByIndex](index) ?? ref.deletedItems[index])[$changes]));\n        }\n        static is(type) {\n            return type['collection'] !== undefined;\n        }\n        constructor(initialValues) {\n            this.$items = new Map();\n            this.$indexes = new Map();\n            this.deletedItems = {};\n            this.$refId = 0;\n            this[$changes] = new ChangeTree(this);\n            this[$changes].indexes = {};\n            if (initialValues) {\n                initialValues.forEach((v) => this.add(v));\n            }\n            Object.defineProperty(this, $childType, {\n                value: undefined,\n                enumerable: false,\n                writable: true,\n                configurable: true,\n            });\n        }\n        add(value) {\n            // set \"index\" for reference.\n            const index = this.$refId++;\n            const isRef = (value[$changes]) !== undefined;\n            if (isRef) {\n                value[$changes].setParent(this, this[$changes].root, index);\n            }\n            this[$changes].indexes[index] = index;\n            this.$indexes.set(index, index);\n            this.$items.set(index, value);\n            this[$changes].change(index);\n            return index;\n        }\n        at(index) {\n            const key = Array.from(this.$items.keys())[index];\n            return this.$items.get(key);\n        }\n        entries() {\n            return this.$items.entries();\n        }\n        delete(item) {\n            const entries = this.$items.entries();\n            let index;\n            let entry;\n            while (entry = entries.next()) {\n                if (entry.done) {\n                    break;\n                }\n                if (item === entry.value[1]) {\n                    index = entry.value[0];\n                    break;\n                }\n            }\n            if (index === undefined) {\n                return false;\n            }\n            this.deletedItems[index] = this[$changes].delete(index);\n            this.$indexes.delete(index);\n            return this.$items.delete(index);\n        }\n        clear() {\n            const changeTree = this[$changes];\n            // discard previous operations.\n            changeTree.discard(true);\n            changeTree.indexes = {};\n            // remove children references\n            changeTree.forEachChild((childChangeTree, _) => {\n                changeTree.root?.remove(childChangeTree);\n            });\n            // clear previous indexes\n            this.$indexes.clear();\n            // clear items\n            this.$items.clear();\n            changeTree.operation(exports.OPERATION.CLEAR);\n        }\n        has(value) {\n            return Array.from(this.$items.values()).some((v) => v === value);\n        }\n        forEach(callbackfn) {\n            this.$items.forEach((value, key, _) => callbackfn(value, key, this));\n        }\n        values() {\n            return this.$items.values();\n        }\n        get size() {\n            return this.$items.size;\n        }\n        /** Iterator */\n        [Symbol.iterator]() {\n            return this.$items.values();\n        }\n        setIndex(index, key) {\n            this.$indexes.set(index, key);\n        }\n        getIndex(index) {\n            return this.$indexes.get(index);\n        }\n        [$getByIndex](index) {\n            return this.$items.get(this.$indexes.get(index));\n        }\n        [$deleteByIndex](index) {\n            const key = this.$indexes.get(index);\n            this.$items.delete(key);\n            this.$indexes.delete(index);\n        }\n        [$onEncodeEnd]() {\n            this.deletedItems = {};\n        }\n        toArray() {\n            return Array.from(this.$items.values());\n        }\n        toJSON() {\n            const values = [];\n            this.forEach((value, key) => {\n                values.push((typeof (value['toJSON']) === \"function\")\n                    ? value['toJSON']()\n                    : value);\n            });\n            return values;\n        }\n        //\n        // Decoding utilities\n        //\n        clone(isDecoding) {\n            let cloned;\n            if (isDecoding) {\n                // client-side\n                cloned = Object.assign(new CollectionSchema(), this);\n            }\n            else {\n                // server-side\n                cloned = new CollectionSchema();\n                this.forEach((value) => {\n                    if (value[$changes]) {\n                        cloned.add(value['clone']());\n                    }\n                    else {\n                        cloned.add(value);\n                    }\n                });\n            }\n            return cloned;\n        }\n    }\n    registerType(\"collection\", { constructor: CollectionSchema, });\n\n    var _a$1, _b$1;\n    class SetSchema {\n        static { this[_a$1] = encodeKeyValueOperation; }\n        static { this[_b$1] = decodeKeyValueOperation; }\n        /**\n         * Determine if a property must be filtered.\n         * - If returns false, the property is NOT going to be encoded.\n         * - If returns true, the property is going to be encoded.\n         *\n         * Encoding with \"filters\" happens in two steps:\n         * - First, the encoder iterates over all \"not owned\" properties and encodes them.\n         * - Then, the encoder iterates over all \"owned\" properties per instance and encodes them.\n         */\n        static [(_a$1 = $encoder, _b$1 = $decoder, $filter)](ref, index, view) {\n            return (!view ||\n                typeof (ref[$childType]) === \"string\" ||\n                view.visible.has((ref[$getByIndex](index) ?? ref.deletedItems[index])[$changes]));\n        }\n        static is(type) {\n            return type['set'] !== undefined;\n        }\n        constructor(initialValues) {\n            this.$items = new Map();\n            this.$indexes = new Map();\n            this.deletedItems = {};\n            this.$refId = 0;\n            this[$changes] = new ChangeTree(this);\n            this[$changes].indexes = {};\n            if (initialValues) {\n                initialValues.forEach((v) => this.add(v));\n            }\n            Object.defineProperty(this, $childType, {\n                value: undefined,\n                enumerable: false,\n                writable: true,\n                configurable: true,\n            });\n        }\n        add(value) {\n            // immediatelly return false if value already added.\n            if (this.has(value)) {\n                return false;\n            }\n            // set \"index\" for reference.\n            const index = this.$refId++;\n            if ((value[$changes]) !== undefined) {\n                value[$changes].setParent(this, this[$changes].root, index);\n            }\n            const operation = this[$changes].indexes[index]?.op ?? exports.OPERATION.ADD;\n            this[$changes].indexes[index] = index;\n            this.$indexes.set(index, index);\n            this.$items.set(index, value);\n            this[$changes].change(index, operation);\n            return index;\n        }\n        entries() {\n            return this.$items.entries();\n        }\n        delete(item) {\n            const entries = this.$items.entries();\n            let index;\n            let entry;\n            while (entry = entries.next()) {\n                if (entry.done) {\n                    break;\n                }\n                if (item === entry.value[1]) {\n                    index = entry.value[0];\n                    break;\n                }\n            }\n            if (index === undefined) {\n                return false;\n            }\n            this.deletedItems[index] = this[$changes].delete(index);\n            this.$indexes.delete(index);\n            return this.$items.delete(index);\n        }\n        clear() {\n            const changeTree = this[$changes];\n            // discard previous operations.\n            changeTree.discard(true);\n            changeTree.indexes = {};\n            // clear previous indexes\n            this.$indexes.clear();\n            // clear items\n            this.$items.clear();\n            changeTree.operation(exports.OPERATION.CLEAR);\n        }\n        has(value) {\n            const values = this.$items.values();\n            let has = false;\n            let entry;\n            while (entry = values.next()) {\n                if (entry.done) {\n                    break;\n                }\n                if (value === entry.value) {\n                    has = true;\n                    break;\n                }\n            }\n            return has;\n        }\n        forEach(callbackfn) {\n            this.$items.forEach((value, key, _) => callbackfn(value, key, this));\n        }\n        values() {\n            return this.$items.values();\n        }\n        get size() {\n            return this.$items.size;\n        }\n        /** Iterator */\n        [Symbol.iterator]() {\n            return this.$items.values();\n        }\n        setIndex(index, key) {\n            this.$indexes.set(index, key);\n        }\n        getIndex(index) {\n            return this.$indexes.get(index);\n        }\n        [$getByIndex](index) {\n            return this.$items.get(this.$indexes.get(index));\n        }\n        [$deleteByIndex](index) {\n            const key = this.$indexes.get(index);\n            this.$items.delete(key);\n            this.$indexes.delete(index);\n        }\n        [$onEncodeEnd]() {\n            this.deletedItems = {};\n        }\n        toArray() {\n            return Array.from(this.$items.values());\n        }\n        toJSON() {\n            const values = [];\n            this.forEach((value, key) => {\n                values.push((typeof (value['toJSON']) === \"function\")\n                    ? value['toJSON']()\n                    : value);\n            });\n            return values;\n        }\n        //\n        // Decoding utilities\n        //\n        clone(isDecoding) {\n            let cloned;\n            if (isDecoding) {\n                // client-side\n                cloned = Object.assign(new SetSchema(), this);\n            }\n            else {\n                // server-side\n                cloned = new SetSchema();\n                this.forEach((value) => {\n                    if (value[$changes]) {\n                        cloned.add(value['clone']());\n                    }\n                    else {\n                        cloned.add(value);\n                    }\n                });\n            }\n            return cloned;\n        }\n    }\n    registerType(\"set\", { constructor: SetSchema });\n\n    const DEFAULT_VIEW_TAG = -1;\n    function entity(constructor) {\n        TypeContext.register(constructor);\n        return constructor;\n    }\n    /**\n     * [See documentation](https://docs.colyseus.io/state/schema/)\n     *\n     * Annotate a Schema property to be serializeable.\n     * \\@type()'d fields are automatically flagged as \"dirty\" for the next patch.\n     *\n     * @example Standard usage, with automatic change tracking.\n     * ```\n     * \\@type(\"string\") propertyName: string;\n     * ```\n     *\n     * @example You can provide the \"manual\" option if you'd like to manually control your patches via .setDirty().\n     * ```\n     * \\@type(\"string\", { manual: true })\n     * ```\n     */\n    // export function type(type: DefinitionType, options?: TypeOptions) {\n    //     return function ({ get, set }, context: ClassAccessorDecoratorContext): ClassAccessorDecoratorResult<Schema, any> {\n    //         if (context.kind !== \"accessor\") {\n    //             throw new Error(\"@type() is only supported for class accessor properties\");\n    //         }\n    //         const field = context.name.toString();\n    //         //\n    //         // detect index for this field, considering inheritance\n    //         //\n    //         const parent = Object.getPrototypeOf(context.metadata);\n    //         let fieldIndex: number = context.metadata[$numFields] // current structure already has fields defined\n    //             ?? (parent && parent[$numFields]) // parent structure has fields defined\n    //             ?? -1; // no fields defined\n    //         fieldIndex++;\n    //         if (\n    //             !parent && // the parent already initializes the `$changes` property\n    //             !Metadata.hasFields(context.metadata)\n    //         ) {\n    //             context.addInitializer(function (this: Ref) {\n    //                 Object.defineProperty(this, $changes, {\n    //                     value: new ChangeTree(this),\n    //                     enumerable: false,\n    //                     writable: true\n    //                 });\n    //             });\n    //         }\n    //         Metadata.addField(context.metadata, fieldIndex, field, type);\n    //         const isArray = ArraySchema.is(type);\n    //         const isMap = !isArray && MapSchema.is(type);\n    //         // if (options && options.manual) {\n    //         //     // do not declare getter/setter descriptor\n    //         //     definition.descriptors[field] = {\n    //         //         enumerable: true,\n    //         //         configurable: true,\n    //         //         writable: true,\n    //         //     };\n    //         //     return;\n    //         // }\n    //         return {\n    //             init(value) {\n    //                 // TODO: may need to convert ArraySchema/MapSchema here\n    //                 // do not flag change if value is undefined.\n    //                 if (value !== undefined) {\n    //                     this[$changes].change(fieldIndex);\n    //                     // automaticallty transform Array into ArraySchema\n    //                     if (isArray) {\n    //                         if (!(value instanceof ArraySchema)) {\n    //                             value = new ArraySchema(...value);\n    //                         }\n    //                         value[$childType] = Object.values(type)[0];\n    //                     }\n    //                     // automaticallty transform Map into MapSchema\n    //                     if (isMap) {\n    //                         if (!(value instanceof MapSchema)) {\n    //                             value = new MapSchema(value);\n    //                         }\n    //                         value[$childType] = Object.values(type)[0];\n    //                     }\n    //                     // try to turn provided structure into a Proxy\n    //                     if (value['$proxy'] === undefined) {\n    //                         if (isMap) {\n    //                             value = getMapProxy(value);\n    //                         }\n    //                     }\n    //                 }\n    //                 return value;\n    //             },\n    //             get() {\n    //                 return get.call(this);\n    //             },\n    //             set(value: any) {\n    //                 /**\n    //                  * Create Proxy for array or map items\n    //                  */\n    //                 // skip if value is the same as cached.\n    //                 if (value === get.call(this)) {\n    //                     return;\n    //                 }\n    //                 if (\n    //                     value !== undefined &&\n    //                     value !== null\n    //                 ) {\n    //                     // automaticallty transform Array into ArraySchema\n    //                     if (isArray) {\n    //                         if (!(value instanceof ArraySchema)) {\n    //                             value = new ArraySchema(...value);\n    //                         }\n    //                         value[$childType] = Object.values(type)[0];\n    //                     }\n    //                     // automaticallty transform Map into MapSchema\n    //                     if (isMap) {\n    //                         if (!(value instanceof MapSchema)) {\n    //                             value = new MapSchema(value);\n    //                         }\n    //                         value[$childType] = Object.values(type)[0];\n    //                     }\n    //                     // try to turn provided structure into a Proxy\n    //                     if (value['$proxy'] === undefined) {\n    //                         if (isMap) {\n    //                             value = getMapProxy(value);\n    //                         }\n    //                     }\n    //                     // flag the change for encoding.\n    //                     this[$changes].change(fieldIndex);\n    //                     //\n    //                     // call setParent() recursively for this and its child\n    //                     // structures.\n    //                     //\n    //                     if (value[$changes]) {\n    //                         value[$changes].setParent(\n    //                             this,\n    //                             this[$changes].root,\n    //                             Metadata.getIndex(context.metadata, field),\n    //                         );\n    //                     }\n    //                 } else if (get.call(this)) {\n    //                     //\n    //                     // Setting a field to `null` or `undefined` will delete it.\n    //                     //\n    //                     this[$changes].delete(field);\n    //                 }\n    //                 set.call(this, value);\n    //             },\n    //         };\n    //     }\n    // }\n    function view(tag = DEFAULT_VIEW_TAG) {\n        return function (target, fieldName) {\n            const constructor = target.constructor;\n            const parentClass = Object.getPrototypeOf(constructor);\n            const parentMetadata = parentClass[Symbol.metadata];\n            // TODO: use Metadata.initialize()\n            const metadata = (constructor[Symbol.metadata] ??= Object.assign({}, constructor[Symbol.metadata], parentMetadata ?? Object.create(null)));\n            // const fieldIndex = metadata[fieldName];\n            // if (!metadata[fieldIndex]) {\n            //     //\n            //     // detect index for this field, considering inheritance\n            //     //\n            //     metadata[fieldIndex] = {\n            //         type: undefined,\n            //         index: (metadata[$numFields] // current structure already has fields defined\n            //             ?? (parentMetadata && parentMetadata[$numFields]) // parent structure has fields defined\n            //             ?? -1) + 1 // no fields defined\n            //     }\n            // }\n            Metadata.setTag(metadata, fieldName, tag);\n        };\n    }\n    function type(type, options) {\n        return function (target, field) {\n            const constructor = target.constructor;\n            if (!type) {\n                throw new Error(`${constructor.name}: @type() reference provided for \"${field}\" is undefined. Make sure you don't have any circular dependencies.`);\n            }\n            // Normalize type (enum/collection/etc)\n            type = getNormalizedType(type);\n            // for inheritance support\n            TypeContext.register(constructor);\n            const parentClass = Object.getPrototypeOf(constructor);\n            const parentMetadata = parentClass[Symbol.metadata];\n            const metadata = Metadata.initialize(constructor);\n            let fieldIndex = metadata[field];\n            /**\n             * skip if descriptor already exists for this field (`@deprecated()`)\n             */\n            if (metadata[fieldIndex] !== undefined) {\n                if (metadata[fieldIndex].deprecated) {\n                    // do not create accessors for deprecated properties.\n                    return;\n                }\n                else if (metadata[fieldIndex].type !== undefined) {\n                    // trying to define same property multiple times across inheritance.\n                    // https://github.com/colyseus/colyseus-unity3d/issues/131#issuecomment-814308572\n                    try {\n                        throw new Error(`@colyseus/schema: Duplicate '${field}' definition on '${constructor.name}'.\\nCheck @type() annotation`);\n                    }\n                    catch (e) {\n                        const definitionAtLine = e.stack.split(\"\\n\")[4].trim();\n                        throw new Error(`${e.message} ${definitionAtLine}`);\n                    }\n                }\n            }\n            else {\n                //\n                // detect index for this field, considering inheritance\n                //\n                fieldIndex = metadata[$numFields] // current structure already has fields defined\n                    ?? (parentMetadata && parentMetadata[$numFields]) // parent structure has fields defined\n                    ?? -1; // no fields defined\n                fieldIndex++;\n            }\n            if (options && options.manual) {\n                Metadata.addField(metadata, fieldIndex, field, type, {\n                    // do not declare getter/setter descriptor\n                    enumerable: true,\n                    configurable: true,\n                    writable: true,\n                });\n            }\n            else {\n                const complexTypeKlass = typeof (Object.keys(type)[0]) === \"string\" && getType(Object.keys(type)[0]);\n                const childType = (complexTypeKlass)\n                    ? Object.values(type)[0]\n                    : type;\n                Metadata.addField(metadata, fieldIndex, field, type, getPropertyDescriptor(`_${field}`, fieldIndex, childType, complexTypeKlass));\n            }\n        };\n    }\n    function getPropertyDescriptor(fieldCached, fieldIndex, type, complexTypeKlass) {\n        return {\n            get: function () { return this[fieldCached]; },\n            set: function (value) {\n                const previousValue = this[fieldCached] ?? undefined;\n                // skip if value is the same as cached.\n                if (value === previousValue) {\n                    return;\n                }\n                if (value !== undefined &&\n                    value !== null) {\n                    if (complexTypeKlass) {\n                        // automaticallty transform Array into ArraySchema\n                        if (complexTypeKlass.constructor === ArraySchema && !(value instanceof ArraySchema)) {\n                            value = new ArraySchema(...value);\n                        }\n                        // automaticallty transform Map into MapSchema\n                        if (complexTypeKlass.constructor === MapSchema && !(value instanceof MapSchema)) {\n                            value = new MapSchema(value);\n                        }\n                        value[$childType] = type;\n                    }\n                    else if (typeof (type) !== \"string\") {\n                        assertInstanceType(value, type, this, fieldCached.substring(1));\n                    }\n                    else {\n                        assertType(value, type, this, fieldCached.substring(1));\n                    }\n                    const changeTree = this[$changes];\n                    //\n                    // Replacing existing \"ref\", remove it from root.\n                    //\n                    if (previousValue !== undefined && previousValue[$changes]) {\n                        changeTree.root?.remove(previousValue[$changes]);\n                        this.constructor[$track](changeTree, fieldIndex, exports.OPERATION.DELETE_AND_ADD);\n                    }\n                    else {\n                        this.constructor[$track](changeTree, fieldIndex, exports.OPERATION.ADD);\n                    }\n                    //\n                    // call setParent() recursively for this and its child\n                    // structures.\n                    //\n                    value[$changes]?.setParent(this, changeTree.root, fieldIndex);\n                }\n                else if (previousValue !== undefined) {\n                    //\n                    // Setting a field to `null` or `undefined` will delete it.\n                    //\n                    this[$changes].delete(fieldIndex);\n                }\n                this[fieldCached] = value;\n            },\n            enumerable: true,\n            configurable: true\n        };\n    }\n    /**\n     * `@deprecated()` flag a field as deprecated.\n     * The previous `@type()` annotation should remain along with this one.\n     */\n    function deprecated(throws = true) {\n        return function (klass, field) {\n            //\n            // FIXME: the following block of code is repeated across `@type()`, `@deprecated()` and `@unreliable()` decorators.\n            //\n            const constructor = klass.constructor;\n            const parentClass = Object.getPrototypeOf(constructor);\n            const parentMetadata = parentClass[Symbol.metadata];\n            const metadata = (constructor[Symbol.metadata] ??= Object.assign({}, constructor[Symbol.metadata], parentMetadata ?? Object.create(null)));\n            const fieldIndex = metadata[field];\n            // if (!metadata[field]) {\n            //     //\n            //     // detect index for this field, considering inheritance\n            //     //\n            //     metadata[field] = {\n            //         type: undefined,\n            //         index: (metadata[$numFields] // current structure already has fields defined\n            //             ?? (parentMetadata && parentMetadata[$numFields]) // parent structure has fields defined\n            //             ?? -1) + 1 // no fields defined\n            //     }\n            // }\n            metadata[fieldIndex].deprecated = true;\n            if (throws) {\n                metadata[$descriptors] ??= {};\n                metadata[$descriptors][field] = {\n                    get: function () { throw new Error(`${field} is deprecated.`); },\n                    set: function (value) { },\n                    enumerable: false,\n                    configurable: true\n                };\n            }\n            // flag metadata[field] as non-enumerable\n            Object.defineProperty(metadata, fieldIndex, {\n                value: metadata[fieldIndex],\n                enumerable: false,\n                configurable: true\n            });\n        };\n    }\n    function defineTypes(target, fields, options) {\n        for (let field in fields) {\n            type(fields[field], options)(target.prototype, field);\n        }\n        return target;\n    }\n    function schema(fieldsAndMethods, name, inherits = Schema) {\n        const fields = {};\n        const methods = {};\n        const defaultValues = {};\n        const viewTagFields = {};\n        for (let fieldName in fieldsAndMethods) {\n            const value = fieldsAndMethods[fieldName];\n            if (typeof (value) === \"object\") {\n                if (value['view'] !== undefined) {\n                    viewTagFields[fieldName] = (typeof (value['view']) === \"boolean\")\n                        ? DEFAULT_VIEW_TAG\n                        : value['view'];\n                }\n                fields[fieldName] = getNormalizedType(value);\n                // If no explicit default provided, handle automatic instantiation for collection types\n                if (!Object.prototype.hasOwnProperty.call(value, 'default')) {\n                    // TODO: remove Array.isArray() check. Use ['array'] !== undefined only.\n                    if (Array.isArray(value) || value['array'] !== undefined) {\n                        // Collection: Array → new ArraySchema()\n                        defaultValues[fieldName] = new ArraySchema();\n                    }\n                    else if (value['map'] !== undefined) {\n                        // Collection: Map → new MapSchema()\n                        defaultValues[fieldName] = new MapSchema();\n                    }\n                    else if (value['collection'] !== undefined) {\n                        // Collection: Collection → new CollectionSchema()\n                        defaultValues[fieldName] = new CollectionSchema();\n                    }\n                    else if (value['set'] !== undefined) {\n                        // Collection: Set → new SetSchema()\n                        defaultValues[fieldName] = new SetSchema();\n                    }\n                    else if (value['type'] !== undefined && Schema.is(value['type'])) {\n                        // Direct Schema type: Type → new Type()\n                        defaultValues[fieldName] = new value['type']();\n                    }\n                }\n                else {\n                    defaultValues[fieldName] = value['default'];\n                }\n            }\n            else if (typeof (value) === \"function\") {\n                if (Schema.is(value)) {\n                    // Direct Schema type: Type → new Type()\n                    defaultValues[fieldName] = new value();\n                    fields[fieldName] = getNormalizedType(value);\n                }\n                else {\n                    methods[fieldName] = value;\n                }\n            }\n            else {\n                fields[fieldName] = getNormalizedType(value);\n            }\n        }\n        const getDefaultValues = () => {\n            const defaults = {};\n            for (const fieldName in defaultValues) {\n                const defaultValue = defaultValues[fieldName];\n                // If the default value has a clone method, use it to get a fresh instance\n                if (defaultValue && typeof defaultValue.clone === 'function') {\n                    defaults[fieldName] = defaultValue.clone();\n                }\n                else {\n                    // Otherwise, use the value as-is (for primitives and non-cloneable objects)\n                    defaults[fieldName] = defaultValue;\n                }\n            }\n            return defaults;\n        };\n        const klass = Metadata.setFields(class extends inherits {\n            constructor(...args) {\n                args[0] = Object.assign({}, getDefaultValues(), args[0]);\n                super(...args);\n            }\n        }, fields);\n        for (let fieldName in viewTagFields) {\n            view(viewTagFields[fieldName])(klass.prototype, fieldName);\n        }\n        for (let methodName in methods) {\n            klass.prototype[methodName] = methods[methodName];\n        }\n        if (name) {\n            Object.defineProperty(klass, \"name\", { value: name });\n        }\n        klass.extends = (fields, name) => schema(fields, name, klass);\n        return klass;\n    }\n\n    function getIndent(level) {\n        return (new Array(level).fill(0)).map((_, i) => (i === level - 1) ? `└─ ` : `   `).join(\"\");\n    }\n    function dumpChanges(schema) {\n        const $root = schema[$changes].root;\n        const dump = {\n            ops: {},\n            refs: []\n        };\n        // for (const refId in $root.changes) {\n        let current = $root.changes.next;\n        while (current) {\n            const changeTree = current.changeTree;\n            // skip if ChangeTree is undefined\n            if (changeTree === undefined) {\n                current = current.next;\n                continue;\n            }\n            const changes = changeTree.indexedOperations;\n            dump.refs.push(`refId#${changeTree.refId}`);\n            for (const index in changes) {\n                const op = changes[index];\n                const opName = exports.OPERATION[op];\n                if (!dump.ops[opName]) {\n                    dump.ops[opName] = 0;\n                }\n                dump.ops[exports.OPERATION[op]]++;\n            }\n            current = current.next;\n        }\n        return dump;\n    }\n\n    var _a, _b;\n    /**\n     * Schema encoder / decoder\n     */\n    class Schema {\n        static { this[_a] = encodeSchemaOperation; }\n        static { this[_b] = decodeSchemaOperation; }\n        /**\n         * Assign the property descriptors required to track changes on this instance.\n         * @param instance\n         */\n        static initialize(instance) {\n            Object.defineProperty(instance, $changes, {\n                value: new ChangeTree(instance),\n                enumerable: false,\n                writable: true\n            });\n            Object.defineProperties(instance, instance.constructor[Symbol.metadata]?.[$descriptors] || {});\n        }\n        static is(type) {\n            return typeof (type[Symbol.metadata]) === \"object\";\n            // const metadata = type[Symbol.metadata];\n            // return metadata && Object.prototype.hasOwnProperty.call(metadata, -1);\n        }\n        /**\n         * Track property changes\n         */\n        static [(_a = $encoder, _b = $decoder, $track)](changeTree, index, operation = exports.OPERATION.ADD) {\n            changeTree.change(index, operation);\n        }\n        /**\n         * Determine if a property must be filtered.\n         * - If returns false, the property is NOT going to be encoded.\n         * - If returns true, the property is going to be encoded.\n         *\n         * Encoding with \"filters\" happens in two steps:\n         * - First, the encoder iterates over all \"not owned\" properties and encodes them.\n         * - Then, the encoder iterates over all \"owned\" properties per instance and encodes them.\n         */\n        static [$filter](ref, index, view) {\n            const metadata = ref.constructor[Symbol.metadata];\n            const tag = metadata[index]?.tag;\n            if (view === undefined) {\n                // shared pass/encode: encode if doesn't have a tag\n                return tag === undefined;\n            }\n            else if (tag === undefined) {\n                // view pass: no tag\n                return true;\n            }\n            else if (tag === DEFAULT_VIEW_TAG) {\n                // view pass: default tag\n                return view.isChangeTreeVisible(ref[$changes]);\n            }\n            else {\n                // view pass: custom tag\n                const tags = view.tags?.get(ref[$changes]);\n                return tags && tags.has(tag);\n            }\n        }\n        // allow inherited classes to have a constructor\n        constructor(...args) {\n            //\n            // inline\n            // Schema.initialize(this);\n            //\n            Schema.initialize(this);\n            //\n            // Assign initial values\n            //\n            if (args[0]) {\n                Object.assign(this, args[0]);\n            }\n        }\n        assign(props) {\n            Object.assign(this, props);\n            return this;\n        }\n        /**\n         * (Server-side): Flag a property to be encoded for the next patch.\n         * @param instance Schema instance\n         * @param property string representing the property name, or number representing the index of the property.\n         * @param operation OPERATION to perform (detected automatically)\n         */\n        setDirty(property, operation) {\n            const metadata = this.constructor[Symbol.metadata];\n            this[$changes].change(metadata[metadata[property]].index, operation);\n        }\n        clone() {\n            const cloned = new (this.constructor);\n            const metadata = this.constructor[Symbol.metadata];\n            //\n            // TODO: clone all properties, not only annotated ones\n            //\n            // for (const field in this) {\n            for (const fieldIndex in metadata) {\n                // const field = metadata[metadata[fieldIndex]].name;\n                const field = metadata[fieldIndex].name;\n                if (typeof (this[field]) === \"object\" &&\n                    typeof (this[field]?.clone) === \"function\") {\n                    // deep clone\n                    cloned[field] = this[field].clone();\n                }\n                else {\n                    // primitive values\n                    cloned[field] = this[field];\n                }\n            }\n            return cloned;\n        }\n        toJSON() {\n            const obj = {};\n            const metadata = this.constructor[Symbol.metadata];\n            for (const index in metadata) {\n                const field = metadata[index];\n                const fieldName = field.name;\n                if (!field.deprecated && this[fieldName] !== null && typeof (this[fieldName]) !== \"undefined\") {\n                    obj[fieldName] = (typeof (this[fieldName]['toJSON']) === \"function\")\n                        ? this[fieldName]['toJSON']()\n                        : this[fieldName];\n                }\n            }\n            return obj;\n        }\n        /**\n         * Used in tests only\n         * @internal\n         */\n        discardAllChanges() {\n            this[$changes].discardAll();\n        }\n        [$getByIndex](index) {\n            const metadata = this.constructor[Symbol.metadata];\n            return this[metadata[index].name];\n        }\n        [$deleteByIndex](index) {\n            const metadata = this.constructor[Symbol.metadata];\n            this[metadata[index].name] = undefined;\n        }\n        /**\n         * Inspect the `refId` of all Schema instances in the tree. Optionally display the contents of the instance.\n         *\n         * @param ref Schema instance\n         * @param showContents display JSON contents of the instance\n         * @returns\n         */\n        static debugRefIds(ref, showContents = false, level = 0, decoder, keyPrefix = \"\") {\n            const contents = (showContents) ? ` - ${JSON.stringify(ref.toJSON())}` : \"\";\n            const changeTree = ref[$changes];\n            const refId = (decoder) ? decoder.root.refIds.get(ref) : changeTree.refId;\n            const root = (decoder) ? decoder.root : changeTree.root;\n            // log reference count if > 1\n            const refCount = (root?.refCount?.[refId] > 1)\n                ? ` [×${root.refCount[refId]}]`\n                : '';\n            let output = `${getIndent(level)}${keyPrefix}${ref.constructor.name} (refId: ${refId})${refCount}${contents}\\n`;\n            changeTree.forEachChild((childChangeTree, indexOrKey) => {\n                let key = indexOrKey;\n                if (typeof indexOrKey === 'number' && ref['$indexes']) {\n                    // MapSchema\n                    key = ref['$indexes'].get(indexOrKey) ?? indexOrKey;\n                }\n                const keyPrefix = (ref['forEach'] !== undefined && key !== undefined) ? `[\"${key}\"]: ` : \"\";\n                output += this.debugRefIds(childChangeTree.ref, showContents, level + 1, decoder, keyPrefix);\n            });\n            return output;\n        }\n        static debugRefIdEncodingOrder(ref, changeSet = 'allChanges') {\n            let encodeOrder = [];\n            let current = ref[$changes].root[changeSet].next;\n            while (current) {\n                if (current.changeTree) {\n                    encodeOrder.push(current.changeTree.refId);\n                }\n                current = current.next;\n            }\n            return encodeOrder;\n        }\n        static debugRefIdsFromDecoder(decoder) {\n            return this.debugRefIds(decoder.state, false, 0, decoder);\n        }\n        /**\n         * Return a string representation of the changes on a Schema instance.\n         * The list of changes is cleared after each encode.\n         *\n         * @param instance Schema instance\n         * @param isEncodeAll Return \"full encode\" instead of current change set.\n         * @returns\n         */\n        static debugChanges(instance, isEncodeAll = false) {\n            const changeTree = instance[$changes];\n            const changeSet = (isEncodeAll) ? changeTree.allChanges : changeTree.changes;\n            const changeSetName = (isEncodeAll) ? \"allChanges\" : \"changes\";\n            let output = `${instance.constructor.name} (${changeTree.refId}) -> .${changeSetName}:\\n`;\n            function dumpChangeSet(changeSet) {\n                changeSet.operations\n                    .filter(op => op)\n                    .forEach((index) => {\n                    const operation = changeTree.indexedOperations[index];\n                    output += `- [${index}]: ${exports.OPERATION[operation]} (${JSON.stringify(changeTree.getValue(Number(index), isEncodeAll))})\\n`;\n                });\n            }\n            dumpChangeSet(changeSet);\n            // display filtered changes\n            if (!isEncodeAll &&\n                changeTree.filteredChanges &&\n                (changeTree.filteredChanges.operations).filter(op => op).length > 0) {\n                output += `${instance.constructor.name} (${changeTree.refId}) -> .filteredChanges:\\n`;\n                dumpChangeSet(changeTree.filteredChanges);\n            }\n            // display filtered changes\n            if (isEncodeAll &&\n                changeTree.allFilteredChanges &&\n                (changeTree.allFilteredChanges.operations).filter(op => op).length > 0) {\n                output += `${instance.constructor.name} (${changeTree.refId}) -> .allFilteredChanges:\\n`;\n                dumpChangeSet(changeTree.allFilteredChanges);\n            }\n            return output;\n        }\n        static debugChangesDeep(ref, changeSetName = \"changes\") {\n            let output = \"\";\n            const rootChangeTree = ref[$changes];\n            const root = rootChangeTree.root;\n            const changeTrees = new Map();\n            const instanceRefIds = [];\n            let totalOperations = 0;\n            // TODO: FIXME: this method is not working as expected\n            for (const [refId, changes] of Object.entries(root[changeSetName])) {\n                const changeTree = root.changeTrees[refId];\n                if (!changeTree) {\n                    continue;\n                }\n                let includeChangeTree = false;\n                let parentChangeTrees = [];\n                let parentChangeTree = changeTree.parent?.[$changes];\n                if (changeTree === rootChangeTree) {\n                    includeChangeTree = true;\n                }\n                else {\n                    while (parentChangeTree !== undefined) {\n                        parentChangeTrees.push(parentChangeTree);\n                        if (parentChangeTree.ref === ref) {\n                            includeChangeTree = true;\n                            break;\n                        }\n                        parentChangeTree = parentChangeTree.parent?.[$changes];\n                    }\n                }\n                if (includeChangeTree) {\n                    instanceRefIds.push(changeTree.refId);\n                    totalOperations += Object.keys(changes).length;\n                    changeTrees.set(changeTree, parentChangeTrees.reverse());\n                }\n            }\n            output += \"---\\n\";\n            output += `root refId: ${rootChangeTree.refId}\\n`;\n            output += `Total instances: ${instanceRefIds.length} (refIds: ${instanceRefIds.join(\", \")})\\n`;\n            output += `Total changes: ${totalOperations}\\n`;\n            output += \"---\\n\";\n            // based on root.changes, display a tree of changes that has the \"ref\" instance as parent\n            const visitedParents = new WeakSet();\n            for (const [changeTree, parentChangeTrees] of changeTrees.entries()) {\n                parentChangeTrees.forEach((parentChangeTree, level) => {\n                    if (!visitedParents.has(parentChangeTree)) {\n                        output += `${getIndent(level)}${parentChangeTree.ref.constructor.name} (refId: ${parentChangeTree.refId})\\n`;\n                        visitedParents.add(parentChangeTree);\n                    }\n                });\n                const changes = changeTree.indexedOperations;\n                const level = parentChangeTrees.length;\n                const indent = getIndent(level);\n                const parentIndex = (level > 0) ? `(${changeTree.parentIndex}) ` : \"\";\n                output += `${indent}${parentIndex}${changeTree.ref.constructor.name} (refId: ${changeTree.refId}) - changes: ${Object.keys(changes).length}\\n`;\n                for (const index in changes) {\n                    const operation = changes[index];\n                    output += `${getIndent(level + 1)}${exports.OPERATION[operation]}: ${index}\\n`;\n                }\n            }\n            return `${output}`;\n        }\n    }\n\n    /******************************************************************************\r\n    Copyright (c) Microsoft Corporation.\r\n\r\n    Permission to use, copy, modify, and/or distribute this software for any\r\n    purpose with or without fee is hereby granted.\r\n\r\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\n    PERFORMANCE OF THIS SOFTWARE.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise, SuppressedError, Symbol, Iterator */\r\n\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n        var e = new Error(message);\r\n        return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n    };\n\n    class Root {\n        constructor(types) {\n            this.types = types;\n            this.nextUniqueId = 0;\n            this.refCount = {};\n            this.changeTrees = {};\n            // all changes\n            this.allChanges = createChangeTreeList();\n            this.allFilteredChanges = createChangeTreeList(); // TODO: do not initialize it if filters are not used\n            // pending changes to be encoded\n            this.changes = createChangeTreeList();\n            this.filteredChanges = createChangeTreeList(); // TODO: do not initialize it if filters are not used\n        }\n        getNextUniqueId() {\n            return this.nextUniqueId++;\n        }\n        add(changeTree) {\n            // Assign unique `refId` to changeTree if it doesn't have one yet.\n            if (changeTree.refId === undefined) {\n                changeTree.refId = this.getNextUniqueId();\n            }\n            const isNewChangeTree = (this.changeTrees[changeTree.refId] === undefined);\n            if (isNewChangeTree) {\n                this.changeTrees[changeTree.refId] = changeTree;\n            }\n            const previousRefCount = this.refCount[changeTree.refId];\n            if (previousRefCount === 0) {\n                //\n                // When a ChangeTree is re-added, it means that it was previously removed.\n                // We need to re-add all changes to the `changes` map.\n                //\n                const ops = changeTree.allChanges.operations;\n                let len = ops.length;\n                while (len--) {\n                    changeTree.indexedOperations[ops[len]] = exports.OPERATION.ADD;\n                    setOperationAtIndex(changeTree.changes, len);\n                }\n            }\n            this.refCount[changeTree.refId] = (previousRefCount || 0) + 1;\n            // console.log(\"ADD\", { refId: changeTree.refId, ref: changeTree.ref.constructor.name, refCount: this.refCount[changeTree.refId], isNewChangeTree });\n            return isNewChangeTree;\n        }\n        remove(changeTree) {\n            const refCount = (this.refCount[changeTree.refId]) - 1;\n            // console.log(\"REMOVE\", { refId: changeTree.refId, ref: changeTree.ref.constructor.name, refCount, needRemove: refCount <= 0 });\n            if (refCount <= 0) {\n                //\n                // Only remove \"root\" reference if it's the last reference\n                //\n                changeTree.root = undefined;\n                delete this.changeTrees[changeTree.refId];\n                this.removeChangeFromChangeSet(\"allChanges\", changeTree);\n                this.removeChangeFromChangeSet(\"changes\", changeTree);\n                if (changeTree.filteredChanges) {\n                    this.removeChangeFromChangeSet(\"allFilteredChanges\", changeTree);\n                    this.removeChangeFromChangeSet(\"filteredChanges\", changeTree);\n                }\n                this.refCount[changeTree.refId] = 0;\n                changeTree.forEachChild((child, _) => {\n                    if (child.removeParent(changeTree.ref)) {\n                        if ((child.parentChain === undefined || // no parent, remove it\n                            (child.parentChain && this.refCount[child.refId] > 0) // parent is still in use, but has more than one reference, remove it\n                        )) {\n                            this.remove(child);\n                        }\n                        else if (child.parentChain) {\n                            // re-assigning a child of the same root, move it next to parent\n                            this.moveNextToParent(child);\n                        }\n                    }\n                });\n            }\n            else {\n                this.refCount[changeTree.refId] = refCount;\n                //\n                // When losing a reference to an instance, it is best to move the\n                // ChangeTree next to its parent in the encoding queue.\n                //\n                // This way, at decoding time, the instance that contains the\n                // ChangeTree will be available before the ChangeTree itself. If the\n                // containing instance is not available, the Decoder will throw\n                // \"refId not found\" error.\n                //\n                this.recursivelyMoveNextToParent(changeTree);\n            }\n            return refCount;\n        }\n        recursivelyMoveNextToParent(changeTree) {\n            this.moveNextToParent(changeTree);\n            changeTree.forEachChild((child, _) => this.recursivelyMoveNextToParent(child));\n        }\n        moveNextToParent(changeTree) {\n            if (changeTree.filteredChanges) {\n                this.moveNextToParentInChangeTreeList(\"filteredChanges\", changeTree);\n                this.moveNextToParentInChangeTreeList(\"allFilteredChanges\", changeTree);\n            }\n            else {\n                this.moveNextToParentInChangeTreeList(\"changes\", changeTree);\n                this.moveNextToParentInChangeTreeList(\"allChanges\", changeTree);\n            }\n        }\n        moveNextToParentInChangeTreeList(changeSetName, changeTree) {\n            const changeSet = this[changeSetName];\n            const node = changeTree[changeSetName].queueRootNode;\n            if (!node)\n                return;\n            // Find the parent in the linked list\n            const parent = changeTree.parent;\n            if (!parent || !parent[$changes])\n                return;\n            const parentNode = parent[$changes][changeSetName]?.queueRootNode;\n            if (!parentNode || parentNode === node)\n                return;\n            // Use cached positions - no iteration needed!\n            const parentPosition = parentNode.position;\n            const childPosition = node.position;\n            // If child is already after parent, no need to move\n            if (childPosition > parentPosition)\n                return;\n            // Child is before parent, so we need to move it after parent\n            // This maintains decoding order (parent before child)\n            // Remove node from current position\n            if (node.prev) {\n                node.prev.next = node.next;\n            }\n            else {\n                changeSet.next = node.next;\n            }\n            if (node.next) {\n                node.next.prev = node.prev;\n            }\n            else {\n                changeSet.tail = node.prev;\n            }\n            // Insert node right after parent\n            node.prev = parentNode;\n            node.next = parentNode.next;\n            if (parentNode.next) {\n                parentNode.next.prev = node;\n            }\n            else {\n                changeSet.tail = node;\n            }\n            parentNode.next = node;\n            // Update positions after the move\n            this.updatePositionsAfterMove(changeSet, node, parentPosition + 1);\n        }\n        enqueueChangeTree(changeTree, changeSet, queueRootNode = changeTree[changeSet].queueRootNode) {\n            // skip\n            if (queueRootNode) {\n                return;\n            }\n            // Add to linked list if not already present\n            changeTree[changeSet].queueRootNode = this.addToChangeTreeList(this[changeSet], changeTree);\n        }\n        addToChangeTreeList(list, changeTree) {\n            const node = {\n                changeTree,\n                next: undefined,\n                prev: undefined,\n                position: list.tail ? list.tail.position + 1 : 0\n            };\n            if (!list.next) {\n                list.next = node;\n                list.tail = node;\n            }\n            else {\n                node.prev = list.tail;\n                list.tail.next = node;\n                list.tail = node;\n            }\n            return node;\n        }\n        updatePositionsAfterRemoval(list, removedPosition) {\n            // Update positions for all nodes after the removed position\n            let current = list.next;\n            let position = 0;\n            while (current) {\n                if (position >= removedPosition) {\n                    current.position = position;\n                }\n                current = current.next;\n                position++;\n            }\n        }\n        updatePositionsAfterMove(list, node, newPosition) {\n            // Recalculate all positions - this is more reliable than trying to be clever\n            let current = list.next;\n            let position = 0;\n            while (current) {\n                current.position = position;\n                current = current.next;\n                position++;\n            }\n        }\n        removeChangeFromChangeSet(changeSetName, changeTree) {\n            const changeSet = this[changeSetName];\n            const node = changeTree[changeSetName].queueRootNode;\n            if (node && node.changeTree === changeTree) {\n                const removedPosition = node.position;\n                // Remove the node from the linked list\n                if (node.prev) {\n                    node.prev.next = node.next;\n                }\n                else {\n                    changeSet.next = node.next;\n                }\n                if (node.next) {\n                    node.next.prev = node.prev;\n                }\n                else {\n                    changeSet.tail = node.prev;\n                }\n                // Update positions for nodes that came after the removed node\n                this.updatePositionsAfterRemoval(changeSet, removedPosition);\n                // Clear ChangeTree reference\n                changeTree[changeSetName].queueRootNode = undefined;\n                return true;\n            }\n            return false;\n        }\n    }\n\n    class Encoder {\n        static { this.BUFFER_SIZE = (typeof (Buffer) !== \"undefined\") && Buffer.poolSize || 8 * 1024; } // 8KB\n        constructor(state) {\n            this.sharedBuffer = Buffer.allocUnsafe(Encoder.BUFFER_SIZE);\n            //\n            // Use .cache() here to avoid re-creating a new context for every new room instance.\n            //\n            // We may need to make this optional in case of dynamically created\n            // schemas - which would lead to memory leaks\n            //\n            this.context = TypeContext.cache(state.constructor);\n            this.root = new Root(this.context);\n            this.setState(state);\n            // console.log(\">>>>>>>>>>>>>>>> Encoder types\");\n            // this.context.schemas.forEach((id, schema) => {\n            //     console.log(\"type:\", id, schema.name, Object.keys(schema[Symbol.metadata]));\n            // });\n        }\n        setState(state) {\n            this.state = state;\n            this.state[$changes].setRoot(this.root);\n        }\n        encode(it = { offset: 0 }, view, buffer = this.sharedBuffer, changeSetName = \"changes\", isEncodeAll = changeSetName === \"allChanges\", initialOffset = it.offset // cache current offset in case we need to resize the buffer\n        ) {\n            const hasView = (view !== undefined);\n            const rootChangeTree = this.state[$changes];\n            let current = this.root[changeSetName];\n            while (current = current.next) {\n                const changeTree = current.changeTree;\n                if (hasView) {\n                    if (!view.isChangeTreeVisible(changeTree)) {\n                        // console.log(\"MARK AS INVISIBLE:\", { ref: changeTree.ref.constructor.name, refId: changeTree.refId, raw: changeTree.ref.toJSON() });\n                        view.invisible.add(changeTree);\n                        continue; // skip this change tree\n                    }\n                    view.invisible.delete(changeTree); // remove from invisible list\n                }\n                const changeSet = changeTree[changeSetName];\n                const ref = changeTree.ref;\n                // TODO: avoid iterating over change tree if no changes were made\n                const numChanges = changeSet.operations.length;\n                if (numChanges === 0) {\n                    continue;\n                }\n                const ctor = ref.constructor;\n                const encoder = ctor[$encoder];\n                const filter = ctor[$filter];\n                const metadata = ctor[Symbol.metadata];\n                // skip root `refId` if it's the first change tree\n                // (unless it \"hasView\", which will need to revisit the root)\n                if (hasView || it.offset > initialOffset || changeTree !== rootChangeTree) {\n                    buffer[it.offset++] = SWITCH_TO_STRUCTURE & 255;\n                    encode.number(buffer, changeTree.refId, it);\n                }\n                for (let j = 0; j < numChanges; j++) {\n                    const fieldIndex = changeSet.operations[j];\n                    if (fieldIndex < 0) {\n                        // \"pure\" operation without fieldIndex (e.g. CLEAR, REVERSE, etc.)\n                        // encode and continue early - no need to reach $filter check\n                        buffer[it.offset++] = Math.abs(fieldIndex) & 255;\n                        continue;\n                    }\n                    const operation = (isEncodeAll)\n                        ? exports.OPERATION.ADD\n                        : changeTree.indexedOperations[fieldIndex];\n                    //\n                    // first pass (encodeAll), identify \"filtered\" operations without encoding them\n                    // they will be encoded per client, based on their view.\n                    //\n                    // TODO: how can we optimize filtering out \"encode all\" operations?\n                    // TODO: avoid checking if no view tags were defined\n                    //\n                    if (fieldIndex === undefined || operation === undefined || (filter && !filter(ref, fieldIndex, view))) {\n                        // console.log(\"ADD AS INVISIBLE:\", fieldIndex, changeTree.ref.constructor.name)\n                        // view?.invisible.add(changeTree);\n                        continue;\n                    }\n                    encoder(this, buffer, changeTree, fieldIndex, operation, it, isEncodeAll, hasView, metadata);\n                }\n            }\n            if (it.offset > buffer.byteLength) {\n                // we can assume that n + 1 poolSize will suffice given that we are likely done with encoding at this point\n                // multiples of poolSize are faster to allocate than arbitrary sizes\n                // if we are on an older platform that doesn't implement pooling use 8kb as poolSize (that's the default for node)\n                const newSize = Math.ceil(it.offset / (Buffer.poolSize ?? 8 * 1024)) * (Buffer.poolSize ?? 8 * 1024);\n                console.warn(`@colyseus/schema buffer overflow. Encoded state is higher than default BUFFER_SIZE. Use the following to increase default BUFFER_SIZE:\n\n    import { Encoder } from \"@colyseus/schema\";\n    Encoder.BUFFER_SIZE = ${Math.round(newSize / 1024)} * 1024; // ${Math.round(newSize / 1024)} KB\n`);\n                //\n                // resize buffer and re-encode (TODO: can we avoid re-encoding here?)\n                // -> No we probably can't unless we catch the need for resize before encoding which is likely more computationally expensive than resizing on demand\n                //\n                buffer = Buffer.alloc(newSize, buffer); // fill with buffer here to memcpy previous encoding steps beyond the initialOffset\n                // assign resized buffer to local sharedBuffer\n                if (buffer === this.sharedBuffer) {\n                    this.sharedBuffer = buffer;\n                }\n                return this.encode({ offset: initialOffset }, view, buffer, changeSetName, isEncodeAll);\n            }\n            else {\n                return buffer.subarray(0, it.offset);\n            }\n        }\n        encodeAll(it = { offset: 0 }, buffer = this.sharedBuffer) {\n            return this.encode(it, undefined, buffer, \"allChanges\", true);\n        }\n        encodeAllView(view, sharedOffset, it, bytes = this.sharedBuffer) {\n            const viewOffset = it.offset;\n            // try to encode \"filtered\" changes\n            this.encode(it, view, bytes, \"allFilteredChanges\", true, viewOffset);\n            return Buffer.concat([\n                bytes.subarray(0, sharedOffset),\n                bytes.subarray(viewOffset, it.offset)\n            ]);\n        }\n        debugChanges(field) {\n            const rootChangeSet = (typeof (field) === \"string\")\n                ? this.root[field]\n                : field;\n            let current = rootChangeSet.next;\n            while (current) {\n                const changeTree = current.changeTree;\n                const changeSet = changeTree[field];\n                const metadata = changeTree.ref.constructor[Symbol.metadata];\n                console.log(\"->\", { ref: changeTree.ref.constructor.name, refId: changeTree.refId, changes: Object.keys(changeSet).length });\n                for (const index in changeSet) {\n                    const op = changeSet[index];\n                    console.log(\"  ->\", {\n                        index,\n                        field: metadata?.[index],\n                        op: exports.OPERATION[op],\n                    });\n                }\n                current = current.next;\n            }\n        }\n        encodeView(view, sharedOffset, it, bytes = this.sharedBuffer) {\n            const viewOffset = it.offset;\n            // encode visibility changes (add/remove for this view)\n            for (const [refId, changes] of view.changes) {\n                const changeTree = this.root.changeTrees[refId];\n                if (changeTree === undefined) {\n                    // detached instance, remove from view and skip.\n                    // console.log(\"detached instance, remove from view and skip.\", refId);\n                    view.changes.delete(refId);\n                    continue;\n                }\n                const keys = Object.keys(changes);\n                if (keys.length === 0) {\n                    // FIXME: avoid having empty changes if no changes were made\n                    // console.log(\"changes.size === 0, skip\", refId, changeTree.ref.constructor.name);\n                    continue;\n                }\n                const ref = changeTree.ref;\n                const ctor = ref.constructor;\n                const encoder = ctor[$encoder];\n                const metadata = ctor[Symbol.metadata];\n                bytes[it.offset++] = SWITCH_TO_STRUCTURE & 255;\n                encode.number(bytes, changeTree.refId, it);\n                for (let i = 0, numChanges = keys.length; i < numChanges; i++) {\n                    const index = Number(keys[i]);\n                    // workaround when using view.add() on item that has been deleted from state (see test \"adding to view item that has been removed from state\")\n                    const value = changeTree.ref[$getByIndex](index);\n                    const operation = (value !== undefined && changes[index]) || exports.OPERATION.DELETE;\n                    // isEncodeAll = false\n                    // hasView = true\n                    encoder(this, bytes, changeTree, index, operation, it, false, true, metadata);\n                }\n            }\n            //\n            // TODO: only clear view changes after all views are encoded\n            // (to allow re-using StateView's for multiple clients)\n            //\n            // clear \"view\" changes after encoding\n            view.changes.clear();\n            // try to encode \"filtered\" changes\n            this.encode(it, view, bytes, \"filteredChanges\", false, viewOffset);\n            return Buffer.concat([\n                bytes.subarray(0, sharedOffset),\n                bytes.subarray(viewOffset, it.offset)\n            ]);\n        }\n        discardChanges() {\n            // discard shared changes\n            let current = this.root.changes.next;\n            while (current) {\n                current.changeTree.endEncode('changes');\n                current = current.next;\n            }\n            this.root.changes = createChangeTreeList();\n            // discard filtered changes\n            current = this.root.filteredChanges.next;\n            while (current) {\n                current.changeTree.endEncode('filteredChanges');\n                current = current.next;\n            }\n            this.root.filteredChanges = createChangeTreeList();\n        }\n        tryEncodeTypeId(bytes, baseType, targetType, it) {\n            const baseTypeId = this.context.getTypeId(baseType);\n            const targetTypeId = this.context.getTypeId(targetType);\n            if (targetTypeId === undefined) {\n                console.warn(`@colyseus/schema WARNING: Class \"${targetType.name}\" is not registered on TypeRegistry - Please either tag the class with @entity or define a @type() field.`);\n                return;\n            }\n            if (baseTypeId !== targetTypeId) {\n                bytes[it.offset++] = TYPE_ID & 255;\n                encode.number(bytes, targetTypeId, it);\n            }\n        }\n        get hasChanges() {\n            return (this.root.changes.next !== undefined ||\n                this.root.filteredChanges.next !== undefined);\n        }\n    }\n\n    function spliceOne(arr, index) {\n        // manually splice an array\n        if (index === -1 || index >= arr.length) {\n            return false;\n        }\n        const len = arr.length - 1;\n        for (let i = index; i < len; i++) {\n            arr[i] = arr[i + 1];\n        }\n        arr.length = len;\n        return true;\n    }\n\n    class DecodingWarning extends Error {\n        constructor(message) {\n            super(message);\n            this.name = \"DecodingWarning\";\n        }\n    }\n    class ReferenceTracker {\n        constructor() {\n            //\n            // Relation of refId => Schema structure\n            // For direct access of structures during decoding time.\n            //\n            this.refs = new Map();\n            this.refIds = new WeakMap();\n            this.refCount = {};\n            this.deletedRefs = new Set();\n            this.callbacks = {};\n            this.nextUniqueId = 0;\n        }\n        getNextUniqueId() {\n            return this.nextUniqueId++;\n        }\n        // for decoding\n        addRef(refId, ref, incrementCount = true) {\n            this.refs.set(refId, ref);\n            this.refIds.set(ref, refId);\n            if (incrementCount) {\n                this.refCount[refId] = (this.refCount[refId] || 0) + 1;\n            }\n            if (this.deletedRefs.has(refId)) {\n                this.deletedRefs.delete(refId);\n            }\n        }\n        // for decoding\n        removeRef(refId) {\n            const refCount = this.refCount[refId];\n            if (refCount === undefined) {\n                try {\n                    throw new DecodingWarning(\"trying to remove refId that doesn't exist: \" + refId);\n                }\n                catch (e) {\n                    console.warn(e);\n                }\n                return;\n            }\n            if (refCount === 0) {\n                try {\n                    const ref = this.refs.get(refId);\n                    throw new DecodingWarning(`trying to remove refId '${refId}' with 0 refCount (${ref.constructor.name}: ${JSON.stringify(ref)})`);\n                }\n                catch (e) {\n                    console.warn(e);\n                }\n                return;\n            }\n            if ((this.refCount[refId] = refCount - 1) <= 0) {\n                this.deletedRefs.add(refId);\n            }\n        }\n        clearRefs() {\n            this.refs.clear();\n            this.deletedRefs.clear();\n            this.callbacks = {};\n            this.refCount = {};\n        }\n        // for decoding\n        garbageCollectDeletedRefs() {\n            this.deletedRefs.forEach((refId) => {\n                //\n                // Skip active references.\n                //\n                if (this.refCount[refId] > 0) {\n                    return;\n                }\n                const ref = this.refs.get(refId);\n                //\n                // Ensure child schema instances have their references removed as well.\n                //\n                if (ref.constructor[Symbol.metadata] !== undefined) {\n                    const metadata = ref.constructor[Symbol.metadata];\n                    for (const index in metadata) {\n                        const field = metadata[index].name;\n                        const childRefId = typeof (ref[field]) === \"object\" && this.refIds.get(ref[field]);\n                        if (childRefId && !this.deletedRefs.has(childRefId)) {\n                            this.removeRef(childRefId);\n                        }\n                    }\n                }\n                else {\n                    if (typeof (ref[$childType]) === \"function\") {\n                        Array.from(ref.values())\n                            .forEach((child) => {\n                            const childRefId = this.refIds.get(child);\n                            if (!this.deletedRefs.has(childRefId)) {\n                                this.removeRef(childRefId);\n                            }\n                        });\n                    }\n                }\n                this.refs.delete(refId); // remove ref\n                delete this.refCount[refId]; // remove ref count\n                delete this.callbacks[refId]; // remove callbacks\n            });\n            // clear deleted refs.\n            this.deletedRefs.clear();\n        }\n        addCallback(refId, fieldOrOperation, callback) {\n            if (refId === undefined) {\n                const name = (typeof (fieldOrOperation) === \"number\")\n                    ? exports.OPERATION[fieldOrOperation]\n                    : fieldOrOperation;\n                throw new Error(`Can't addCallback on '${name}' (refId is undefined)`);\n            }\n            if (!this.callbacks[refId]) {\n                this.callbacks[refId] = {};\n            }\n            if (!this.callbacks[refId][fieldOrOperation]) {\n                this.callbacks[refId][fieldOrOperation] = [];\n            }\n            this.callbacks[refId][fieldOrOperation].push(callback);\n            return () => this.removeCallback(refId, fieldOrOperation, callback);\n        }\n        removeCallback(refId, field, callback) {\n            const index = this.callbacks?.[refId]?.[field]?.indexOf(callback);\n            if (index !== undefined && index !== -1) {\n                spliceOne(this.callbacks[refId][field], index);\n            }\n        }\n    }\n\n    class Decoder {\n        constructor(root, context) {\n            this.currentRefId = 0;\n            this.setState(root);\n            this.context = context || new TypeContext(root.constructor);\n            // console.log(\">>>>>>>>>>>>>>>> Decoder types\");\n            // this.context.schemas.forEach((id, schema) => {\n            //     console.log(\"type:\", id, schema.name, Object.keys(schema[Symbol.metadata]));\n            // });\n        }\n        setState(root) {\n            this.state = root;\n            this.root = new ReferenceTracker();\n            this.root.addRef(0, root);\n        }\n        decode(bytes, it = { offset: 0 }, ref = this.state) {\n            const allChanges = [];\n            const $root = this.root;\n            const totalBytes = bytes.byteLength;\n            let decoder = ref['constructor'][$decoder];\n            this.currentRefId = 0;\n            while (it.offset < totalBytes) {\n                //\n                // Peek ahead, check if it's a switch to a different structure\n                //\n                if (bytes[it.offset] == SWITCH_TO_STRUCTURE) {\n                    it.offset++;\n                    ref[$onDecodeEnd]?.();\n                    const nextRefId = decode.number(bytes, it);\n                    const nextRef = $root.refs.get(nextRefId);\n                    //\n                    // Trying to access a reference that haven't been decoded yet.\n                    //\n                    if (!nextRef) {\n                        // throw new Error(`\"refId\" not found: ${nextRefId}`);\n                        console.error(`\"refId\" not found: ${nextRefId}`, { previousRef: ref, previousRefId: this.currentRefId });\n                        console.warn(\"Please report this issue to the developers.\");\n                        this.skipCurrentStructure(bytes, it, totalBytes);\n                    }\n                    else {\n                        ref = nextRef;\n                        decoder = ref.constructor[$decoder];\n                        this.currentRefId = nextRefId;\n                    }\n                    continue;\n                }\n                const result = decoder(this, bytes, it, ref, allChanges);\n                if (result === DEFINITION_MISMATCH) {\n                    console.warn(\"@colyseus/schema: definition mismatch\");\n                    this.skipCurrentStructure(bytes, it, totalBytes);\n                    continue;\n                }\n            }\n            // FIXME: DRY with SWITCH_TO_STRUCTURE block.\n            ref[$onDecodeEnd]?.();\n            // trigger changes\n            this.triggerChanges?.(allChanges);\n            // drop references of unused schemas\n            $root.garbageCollectDeletedRefs();\n            return allChanges;\n        }\n        skipCurrentStructure(bytes, it, totalBytes) {\n            //\n            // keep skipping next bytes until reaches a known structure\n            // by local decoder.\n            //\n            const nextIterator = { offset: it.offset };\n            while (it.offset < totalBytes) {\n                if (bytes[it.offset] === SWITCH_TO_STRUCTURE) {\n                    nextIterator.offset = it.offset + 1;\n                    if (this.root.refs.has(decode.number(bytes, nextIterator))) {\n                        break;\n                    }\n                }\n                it.offset++;\n            }\n        }\n        getInstanceType(bytes, it, defaultType) {\n            let type;\n            if (bytes[it.offset] === TYPE_ID) {\n                it.offset++;\n                const type_id = decode.number(bytes, it);\n                type = this.context.get(type_id);\n            }\n            return type || defaultType;\n        }\n        createInstanceOfType(type) {\n            return new type();\n        }\n        removeChildRefs(ref, allChanges) {\n            const needRemoveRef = typeof (ref[$childType]) !== \"string\";\n            const refId = this.root.refIds.get(ref);\n            ref.forEach((value, key) => {\n                allChanges.push({\n                    ref: ref,\n                    refId,\n                    op: exports.OPERATION.DELETE,\n                    field: key,\n                    value: undefined,\n                    previousValue: value\n                });\n                if (needRemoveRef) {\n                    this.root.removeRef(this.root.refIds.get(value));\n                }\n            });\n        }\n    }\n\n    /**\n     * Reflection\n     */\n    class ReflectionField extends Schema {\n    }\n    __decorate([\n        type(\"string\")\n    ], ReflectionField.prototype, \"name\", void 0);\n    __decorate([\n        type(\"string\")\n    ], ReflectionField.prototype, \"type\", void 0);\n    __decorate([\n        type(\"number\")\n    ], ReflectionField.prototype, \"referencedType\", void 0);\n    class ReflectionType extends Schema {\n        constructor() {\n            super(...arguments);\n            this.fields = new ArraySchema();\n        }\n    }\n    __decorate([\n        type(\"number\")\n    ], ReflectionType.prototype, \"id\", void 0);\n    __decorate([\n        type(\"number\")\n    ], ReflectionType.prototype, \"extendsId\", void 0);\n    __decorate([\n        type([ReflectionField])\n    ], ReflectionType.prototype, \"fields\", void 0);\n    class Reflection extends Schema {\n        constructor() {\n            super(...arguments);\n            this.types = new ArraySchema();\n        }\n        /**\n         * Encodes the TypeContext of an Encoder into a buffer.\n         *\n         * @param encoder Encoder instance\n         * @param it\n         * @returns\n         */\n        static encode(encoder, it = { offset: 0 }) {\n            const context = encoder.context;\n            const reflection = new Reflection();\n            const reflectionEncoder = new Encoder(reflection);\n            // rootType is usually the first schema passed to the Encoder\n            // (unless it inherits from another schema)\n            const rootType = context.schemas.get(encoder.state.constructor);\n            if (rootType > 0) {\n                reflection.rootType = rootType;\n            }\n            const includedTypeIds = new Set();\n            const pendingReflectionTypes = {};\n            // add type to reflection in a way that respects inheritance\n            // (parent types should be added before their children)\n            const addType = (type) => {\n                if (type.extendsId === undefined || includedTypeIds.has(type.extendsId)) {\n                    includedTypeIds.add(type.id);\n                    reflection.types.push(type);\n                    const deps = pendingReflectionTypes[type.id];\n                    if (deps !== undefined) {\n                        delete pendingReflectionTypes[type.id];\n                        deps.forEach((childType) => addType(childType));\n                    }\n                }\n                else {\n                    if (pendingReflectionTypes[type.extendsId] === undefined) {\n                        pendingReflectionTypes[type.extendsId] = [];\n                    }\n                    pendingReflectionTypes[type.extendsId].push(type);\n                }\n            };\n            context.schemas.forEach((typeid, klass) => {\n                const type = new ReflectionType();\n                type.id = Number(typeid);\n                // support inheritance\n                const inheritFrom = Object.getPrototypeOf(klass);\n                if (inheritFrom !== Schema) {\n                    type.extendsId = context.schemas.get(inheritFrom);\n                }\n                const metadata = klass[Symbol.metadata];\n                //\n                // FIXME: this is a workaround for inherited types without additional fields\n                // if metadata is the same reference as the parent class - it means the class has no own metadata\n                //\n                if (metadata !== inheritFrom[Symbol.metadata]) {\n                    for (const fieldIndex in metadata) {\n                        const index = Number(fieldIndex);\n                        const fieldName = metadata[index].name;\n                        // skip fields from parent classes\n                        if (!Object.prototype.hasOwnProperty.call(metadata, fieldName)) {\n                            continue;\n                        }\n                        const reflectionField = new ReflectionField();\n                        reflectionField.name = fieldName;\n                        let fieldType;\n                        const field = metadata[index];\n                        if (typeof (field.type) === \"string\") {\n                            fieldType = field.type;\n                        }\n                        else {\n                            let childTypeSchema;\n                            //\n                            // TODO: refactor below.\n                            //\n                            if (Schema.is(field.type)) {\n                                fieldType = \"ref\";\n                                childTypeSchema = field.type;\n                            }\n                            else {\n                                fieldType = Object.keys(field.type)[0];\n                                if (typeof (field.type[fieldType]) === \"string\") {\n                                    fieldType += \":\" + field.type[fieldType]; // array:string\n                                }\n                                else {\n                                    childTypeSchema = field.type[fieldType];\n                                }\n                            }\n                            reflectionField.referencedType = (childTypeSchema)\n                                ? context.getTypeId(childTypeSchema)\n                                : -1;\n                        }\n                        reflectionField.type = fieldType;\n                        type.fields.push(reflectionField);\n                    }\n                }\n                addType(type);\n            });\n            // in case there are types that were not added due to inheritance\n            for (const typeid in pendingReflectionTypes) {\n                pendingReflectionTypes[typeid].forEach((type) => reflection.types.push(type));\n            }\n            const buf = reflectionEncoder.encodeAll(it);\n            return Buffer.from(buf, 0, it.offset);\n        }\n        /**\n         * Decodes the TypeContext from a buffer into a Decoder instance.\n         *\n         * @param bytes Reflection.encode() output\n         * @param it\n         * @returns Decoder instance\n         */\n        static decode(bytes, it) {\n            const reflection = new Reflection();\n            const reflectionDecoder = new Decoder(reflection);\n            reflectionDecoder.decode(bytes, it);\n            const typeContext = new TypeContext();\n            // 1st pass, initialize metadata + inheritance\n            reflection.types.forEach((reflectionType) => {\n                const parentClass = typeContext.get(reflectionType.extendsId) ?? Schema;\n                const schema = class _ extends parentClass {\n                };\n                // register for inheritance support\n                TypeContext.register(schema);\n                // // for inheritance support\n                // Metadata.initialize(schema);\n                typeContext.add(schema, reflectionType.id);\n            }, {});\n            // define fields\n            const addFields = (metadata, reflectionType, parentFieldIndex) => {\n                reflectionType.fields.forEach((field, i) => {\n                    const fieldIndex = parentFieldIndex + i;\n                    if (field.referencedType !== undefined) {\n                        let fieldType = field.type;\n                        let refType = typeContext.get(field.referencedType);\n                        // map or array of primitive type (-1)\n                        if (!refType) {\n                            const typeInfo = field.type.split(\":\");\n                            fieldType = typeInfo[0];\n                            refType = typeInfo[1]; // string\n                        }\n                        if (fieldType === \"ref\") {\n                            Metadata.addField(metadata, fieldIndex, field.name, refType);\n                        }\n                        else {\n                            Metadata.addField(metadata, fieldIndex, field.name, { [fieldType]: refType });\n                        }\n                    }\n                    else {\n                        Metadata.addField(metadata, fieldIndex, field.name, field.type);\n                    }\n                });\n            };\n            // 2nd pass, set fields\n            reflection.types.forEach((reflectionType) => {\n                const schema = typeContext.get(reflectionType.id);\n                // for inheritance support\n                const metadata = Metadata.initialize(schema);\n                const inheritedTypes = [];\n                let parentType = reflectionType;\n                do {\n                    inheritedTypes.push(parentType);\n                    parentType = reflection.types.find((t) => t.id === parentType.extendsId);\n                } while (parentType);\n                let parentFieldIndex = 0;\n                inheritedTypes.reverse().forEach((reflectionType) => {\n                    // add fields from all inherited classes\n                    // TODO: refactor this to avoid adding fields from parent classes\n                    addFields(metadata, reflectionType, parentFieldIndex);\n                    parentFieldIndex += reflectionType.fields.length;\n                });\n            });\n            const state = new (typeContext.get(reflection.rootType || 0))();\n            return new Decoder(state, typeContext);\n        }\n    }\n    __decorate([\n        type([ReflectionType])\n    ], Reflection.prototype, \"types\", void 0);\n    __decorate([\n        type(\"number\")\n    ], Reflection.prototype, \"rootType\", void 0);\n\n    function getDecoderStateCallbacks(decoder) {\n        const $root = decoder.root;\n        const callbacks = $root.callbacks;\n        const onAddCalls = new WeakMap();\n        let currentOnAddCallback;\n        decoder.triggerChanges = function (allChanges) {\n            const uniqueRefIds = new Set();\n            for (let i = 0, l = allChanges.length; i < l; i++) {\n                const change = allChanges[i];\n                const refId = change.refId;\n                const ref = change.ref;\n                const $callbacks = callbacks[refId];\n                if (!$callbacks) {\n                    continue;\n                }\n                //\n                // trigger onRemove on child structure.\n                //\n                if ((change.op & exports.OPERATION.DELETE) === exports.OPERATION.DELETE &&\n                    change.previousValue instanceof Schema) {\n                    const deleteCallbacks = callbacks[$root.refIds.get(change.previousValue)]?.[exports.OPERATION.DELETE];\n                    for (let i = deleteCallbacks?.length - 1; i >= 0; i--) {\n                        deleteCallbacks[i]();\n                    }\n                }\n                if (ref instanceof Schema) {\n                    //\n                    // Handle schema instance\n                    //\n                    if (!uniqueRefIds.has(refId)) {\n                        // trigger onChange\n                        const replaceCallbacks = $callbacks?.[exports.OPERATION.REPLACE];\n                        for (let i = replaceCallbacks?.length - 1; i >= 0; i--) {\n                            replaceCallbacks[i]();\n                            // try {\n                            // } catch (e) {\n                            //     console.error(e);\n                            // }\n                        }\n                    }\n                    if ($callbacks.hasOwnProperty(change.field)) {\n                        const fieldCallbacks = $callbacks[change.field];\n                        for (let i = fieldCallbacks?.length - 1; i >= 0; i--) {\n                            fieldCallbacks[i](change.value, change.previousValue);\n                            // try {\n                            // } catch (e) {\n                            //     console.error(e);\n                            // }\n                        }\n                    }\n                }\n                else {\n                    //\n                    // Handle collection of items\n                    //\n                    if ((change.op & exports.OPERATION.DELETE) === exports.OPERATION.DELETE) {\n                        //\n                        // FIXME: `previousValue` should always be available.\n                        //\n                        if (change.previousValue !== undefined) {\n                            // triger onRemove\n                            const deleteCallbacks = $callbacks[exports.OPERATION.DELETE];\n                            for (let i = deleteCallbacks?.length - 1; i >= 0; i--) {\n                                deleteCallbacks[i](change.previousValue, change.dynamicIndex ?? change.field);\n                            }\n                        }\n                        // Handle DELETE_AND_ADD operations\n                        if ((change.op & exports.OPERATION.ADD) === exports.OPERATION.ADD) {\n                            const addCallbacks = $callbacks[exports.OPERATION.ADD];\n                            for (let i = addCallbacks?.length - 1; i >= 0; i--) {\n                                addCallbacks[i](change.value, change.dynamicIndex ?? change.field);\n                            }\n                        }\n                    }\n                    else if ((change.op & exports.OPERATION.ADD) === exports.OPERATION.ADD &&\n                        change.previousValue !== change.value) {\n                        // triger onAdd\n                        const addCallbacks = $callbacks[exports.OPERATION.ADD];\n                        for (let i = addCallbacks?.length - 1; i >= 0; i--) {\n                            addCallbacks[i](change.value, change.dynamicIndex ?? change.field);\n                        }\n                    }\n                    // trigger onChange\n                    if (change.value !== change.previousValue &&\n                        // FIXME: see \"should not encode item if added and removed at the same patch\" test case.\n                        // some \"ADD\" + \"DELETE\" operations on same patch are being encoded as \"DELETE\"\n                        (change.value !== undefined || change.previousValue !== undefined)) {\n                        const replaceCallbacks = $callbacks[exports.OPERATION.REPLACE];\n                        for (let i = replaceCallbacks?.length - 1; i >= 0; i--) {\n                            replaceCallbacks[i](change.value, change.dynamicIndex ?? change.field);\n                        }\n                    }\n                }\n                uniqueRefIds.add(refId);\n            }\n        };\n        function getProxy(metadataOrType, context) {\n            let metadata = context.instance?.constructor[Symbol.metadata] || metadataOrType;\n            let isCollection = ((context.instance && typeof (context.instance['forEach']) === \"function\") ||\n                (metadataOrType && typeof (metadataOrType[Symbol.metadata]) === \"undefined\"));\n            if (metadata && !isCollection) {\n                const onAddListen = function (ref, prop, callback, immediate) {\n                    // immediate trigger\n                    if (immediate &&\n                        context.instance[prop] !== undefined &&\n                        !onAddCalls.has(currentOnAddCallback) // Workaround for https://github.com/colyseus/schema/issues/147\n                    ) {\n                        callback(context.instance[prop], undefined);\n                    }\n                    return $root.addCallback($root.refIds.get(ref), prop, callback);\n                };\n                /**\n                 * Schema instances\n                 */\n                return new Proxy({\n                    listen: function listen(prop, callback, immediate = true) {\n                        if (context.instance) {\n                            return onAddListen(context.instance, prop, callback, immediate);\n                        }\n                        else {\n                            // collection instance not received yet\n                            let detachCallback = () => { };\n                            context.onInstanceAvailable((ref, existing) => {\n                                detachCallback = onAddListen(ref, prop, callback, immediate && existing && !onAddCalls.has(currentOnAddCallback));\n                            });\n                            return () => detachCallback();\n                        }\n                    },\n                    onChange: function onChange(callback) {\n                        return $root.addCallback($root.refIds.get(context.instance), exports.OPERATION.REPLACE, callback);\n                    },\n                    //\n                    // TODO: refactor `bindTo()` implementation.\n                    // There is room for improvement.\n                    //\n                    bindTo: function bindTo(targetObject, properties) {\n                        if (!properties) {\n                            properties = Object.keys(metadata).map((index) => metadata[index].name);\n                        }\n                        return $root.addCallback($root.refIds.get(context.instance), exports.OPERATION.REPLACE, () => {\n                            properties.forEach((prop) => targetObject[prop] = context.instance[prop]);\n                        });\n                    }\n                }, {\n                    get(target, prop) {\n                        const metadataField = metadata[metadata[prop]];\n                        if (metadataField) {\n                            const instance = context.instance?.[prop];\n                            const onInstanceAvailable = ((callback) => {\n                                const unbind = $(context.instance).listen(prop, (value, _) => {\n                                    callback(value, false);\n                                    // FIXME: by \"unbinding\" the callback here,\n                                    // it will not support when the server\n                                    // re-instantiates the instance.\n                                    //\n                                    unbind?.();\n                                }, false);\n                                // has existing value\n                                if ($root.refIds.get(instance) !== undefined) {\n                                    callback(instance, true);\n                                }\n                            });\n                            return getProxy(metadataField.type, {\n                                // make sure refId is available, otherwise need to wait for the instance to be available.\n                                instance: ($root.refIds.get(instance) && instance),\n                                parentInstance: context.instance,\n                                onInstanceAvailable,\n                            });\n                        }\n                        else {\n                            // accessing the function\n                            return target[prop];\n                        }\n                    },\n                    has(target, prop) { return metadata[prop] !== undefined; },\n                    set(_, _1, _2) { throw new Error(\"not allowed\"); },\n                    deleteProperty(_, _1) { throw new Error(\"not allowed\"); },\n                });\n            }\n            else {\n                /**\n                 * Collection instances\n                 */\n                const onAdd = function (ref, callback, immediate) {\n                    // Trigger callback on existing items\n                    if (immediate) {\n                        ref.forEach((v, k) => callback(v, k));\n                    }\n                    return $root.addCallback($root.refIds.get(ref), exports.OPERATION.ADD, (value, key) => {\n                        onAddCalls.set(callback, true);\n                        currentOnAddCallback = callback;\n                        callback(value, key);\n                        onAddCalls.delete(callback);\n                        currentOnAddCallback = undefined;\n                    });\n                };\n                const onRemove = function (ref, callback) {\n                    return $root.addCallback($root.refIds.get(ref), exports.OPERATION.DELETE, callback);\n                };\n                const onChange = function (ref, callback) {\n                    return $root.addCallback($root.refIds.get(ref), exports.OPERATION.REPLACE, callback);\n                };\n                return new Proxy({\n                    onAdd: function (callback, immediate = true) {\n                        //\n                        // https://github.com/colyseus/schema/issues/147\n                        // If parent instance has \"onAdd\" registered, avoid triggering immediate callback.\n                        //\n                        if (context.instance) {\n                            return onAdd(context.instance, callback, immediate && !onAddCalls.has(currentOnAddCallback));\n                        }\n                        else if (context.onInstanceAvailable) {\n                            // collection instance not received yet\n                            let detachCallback = () => { };\n                            context.onInstanceAvailable((ref, existing) => {\n                                detachCallback = onAdd(ref, callback, immediate && existing && !onAddCalls.has(currentOnAddCallback));\n                            });\n                            return () => detachCallback();\n                        }\n                    },\n                    onRemove: function (callback) {\n                        if (context.instance) {\n                            return onRemove(context.instance, callback);\n                        }\n                        else if (context.onInstanceAvailable) {\n                            // collection instance not received yet\n                            let detachCallback = () => { };\n                            context.onInstanceAvailable((ref) => {\n                                detachCallback = onRemove(ref, callback);\n                            });\n                            return () => detachCallback();\n                        }\n                    },\n                    onChange: function (callback) {\n                        if (context.instance) {\n                            return onChange(context.instance, callback);\n                        }\n                        else if (context.onInstanceAvailable) {\n                            // collection instance not received yet\n                            let detachCallback = () => { };\n                            context.onInstanceAvailable((ref) => {\n                                detachCallback = onChange(ref, callback);\n                            });\n                            return () => detachCallback();\n                        }\n                    },\n                }, {\n                    get(target, prop) {\n                        if (!target[prop]) {\n                            throw new Error(`Can't access '${prop}' through callback proxy. access the instance directly.`);\n                        }\n                        return target[prop];\n                    },\n                    has(target, prop) { return target[prop] !== undefined; },\n                    set(_, _1, _2) { throw new Error(\"not allowed\"); },\n                    deleteProperty(_, _1) { throw new Error(\"not allowed\"); },\n                });\n            }\n        }\n        function $(instance) {\n            return getProxy(undefined, { instance });\n        }\n        return $;\n    }\n\n    function getRawChangesCallback(decoder, callback) {\n        decoder.triggerChanges = callback;\n    }\n\n    class StateView {\n        constructor(iterable = false) {\n            this.iterable = iterable;\n            /**\n             * List of ChangeTree's that are visible to this view\n             */\n            this.visible = new WeakSet();\n            /**\n             * List of ChangeTree's that are invisible to this view\n             */\n            this.invisible = new WeakSet();\n            /**\n             * Manual \"ADD\" operations for changes per ChangeTree, specific to this view.\n             * (This is used to force encoding a property, even if it was not changed)\n             */\n            this.changes = new Map();\n            if (iterable) {\n                this.items = [];\n            }\n        }\n        // TODO: allow to set multiple tags at once\n        add(obj, tag = DEFAULT_VIEW_TAG, checkIncludeParent = true) {\n            const changeTree = obj?.[$changes];\n            const parentChangeTree = changeTree.parent;\n            if (!changeTree) {\n                console.warn(\"StateView#add(), invalid object:\", obj);\n                return false;\n            }\n            else if (!parentChangeTree &&\n                changeTree.refId !== 0 // allow root object\n            ) {\n                /**\n                 * TODO: can we avoid this?\n                 *\n                 * When the \"parent\" structure has the @view() tag, it is currently\n                 * not possible to identify it has to be added to the view as well\n                 * (this.addParentOf() is not called).\n                 */\n                throw new Error(`Cannot add a detached instance to the StateView. Make sure to assign the \"${changeTree.ref.constructor.name}\" instance to the state before calling view.add()`);\n            }\n            // FIXME: ArraySchema/MapSchema do not have metadata\n            const metadata = obj.constructor[Symbol.metadata];\n            this.visible.add(changeTree);\n            // add to iterable list (only the explicitly added items)\n            if (this.iterable && checkIncludeParent) {\n                this.items.push(obj);\n            }\n            // add parent ChangeTree's\n            // - if it was invisible to this view\n            // - if it were previously filtered out\n            if (checkIncludeParent && parentChangeTree) {\n                this.addParentOf(changeTree, tag);\n            }\n            let changes = this.changes.get(changeTree.refId);\n            if (changes === undefined) {\n                changes = {};\n                // FIXME / OPTIMIZE: do not add if no changes are needed\n                this.changes.set(changeTree.refId, changes);\n            }\n            let isChildAdded = false;\n            //\n            // Add children of this ChangeTree first.\n            // If successful, we must link the current ChangeTree to the child.\n            //\n            changeTree.forEachChild((change, index) => {\n                // Do not ADD children that don't have the same tag\n                if (metadata &&\n                    metadata[index].tag !== undefined &&\n                    metadata[index].tag !== tag) {\n                    return;\n                }\n                if (this.add(change.ref, tag, false)) {\n                    isChildAdded = true;\n                }\n            });\n            // set tag\n            if (tag !== DEFAULT_VIEW_TAG) {\n                if (!this.tags) {\n                    this.tags = new WeakMap();\n                }\n                let tags;\n                if (!this.tags.has(changeTree)) {\n                    tags = new Set();\n                    this.tags.set(changeTree, tags);\n                }\n                else {\n                    tags = this.tags.get(changeTree);\n                }\n                tags.add(tag);\n                // Ref: add tagged properties\n                metadata?.[$fieldIndexesByViewTag]?.[tag]?.forEach((index) => {\n                    if (changeTree.getChange(index) !== exports.OPERATION.DELETE) {\n                        changes[index] = exports.OPERATION.ADD;\n                    }\n                });\n            }\n            else if (!changeTree.isNew || isChildAdded) {\n                // new structures will be added as part of .encode() call, no need to force it to .encodeView()\n                const changeSet = (changeTree.filteredChanges !== undefined)\n                    ? changeTree.allFilteredChanges\n                    : changeTree.allChanges;\n                const isInvisible = this.invisible.has(changeTree);\n                for (let i = 0, len = changeSet.operations.length; i < len; i++) {\n                    const index = changeSet.operations[i];\n                    if (index === undefined) {\n                        continue;\n                    } // skip \"undefined\" indexes\n                    const op = changeTree.indexedOperations[index] ?? exports.OPERATION.ADD;\n                    const tagAtIndex = metadata?.[index].tag;\n                    if (op !== exports.OPERATION.DELETE &&\n                        (isInvisible || // if \"invisible\", include all\n                            tagAtIndex === undefined || // \"all change\" with no tag\n                            tagAtIndex === tag // tagged property\n                        )) {\n                        changes[index] = op;\n                        isChildAdded = true; // FIXME: assign only once\n                    }\n                }\n            }\n            return isChildAdded;\n        }\n        addParentOf(childChangeTree, tag) {\n            const changeTree = childChangeTree.parent[$changes];\n            const parentIndex = childChangeTree.parentIndex;\n            if (!this.visible.has(changeTree)) {\n                // view must have all \"changeTree\" parent tree\n                this.visible.add(changeTree);\n                // add parent's parent\n                const parentChangeTree = changeTree.parent?.[$changes];\n                if (parentChangeTree && (parentChangeTree.filteredChanges !== undefined)) {\n                    this.addParentOf(changeTree, tag);\n                }\n                // // parent is already available, no need to add it!\n                // if (!this.invisible.has(changeTree)) { return; }\n            }\n            // add parent's tag properties\n            if (changeTree.getChange(parentIndex) !== exports.OPERATION.DELETE) {\n                let changes = this.changes.get(changeTree.refId);\n                if (changes === undefined) {\n                    changes = {};\n                    this.changes.set(changeTree.refId, changes);\n                }\n                if (!this.tags) {\n                    this.tags = new WeakMap();\n                }\n                let tags;\n                if (!this.tags.has(changeTree)) {\n                    tags = new Set();\n                    this.tags.set(changeTree, tags);\n                }\n                else {\n                    tags = this.tags.get(changeTree);\n                }\n                tags.add(tag);\n                changes[parentIndex] = exports.OPERATION.ADD;\n            }\n        }\n        remove(obj, tag = DEFAULT_VIEW_TAG, _isClear = false) {\n            const changeTree = obj[$changes];\n            if (!changeTree) {\n                console.warn(\"StateView#remove(), invalid object:\", obj);\n                return this;\n            }\n            this.visible.delete(changeTree);\n            // remove from iterable list\n            if (this.iterable &&\n                !_isClear // no need to remove during clear(), as it will be cleared entirely\n            ) {\n                spliceOne(this.items, this.items.indexOf(obj));\n            }\n            const ref = changeTree.ref;\n            const metadata = ref.constructor[Symbol.metadata]; // ArraySchema/MapSchema do not have metadata\n            let changes = this.changes.get(changeTree.refId);\n            if (changes === undefined) {\n                changes = {};\n                this.changes.set(changeTree.refId, changes);\n            }\n            if (tag === DEFAULT_VIEW_TAG) {\n                // parent is collection (Map/Array)\n                const parent = changeTree.parent;\n                if (parent && !Metadata.isValidInstance(parent) && changeTree.isFiltered) {\n                    const parentChangeTree = parent[$changes];\n                    let changes = this.changes.get(parentChangeTree.refId);\n                    if (changes === undefined) {\n                        changes = {};\n                        this.changes.set(parentChangeTree.refId, changes);\n                    }\n                    else if (changes[changeTree.parentIndex] === exports.OPERATION.ADD) {\n                        //\n                        // SAME PATCH ADD + REMOVE:\n                        // The 'changes' of deleted structure should be ignored.\n                        //\n                        this.changes.delete(changeTree.refId);\n                    }\n                    // DELETE / DELETE BY REF ID\n                    changes[changeTree.parentIndex] = exports.OPERATION.DELETE;\n                    // Remove child schema from visible set\n                    this._recursiveDeleteVisibleChangeTree(changeTree);\n                }\n                else {\n                    // delete all \"tagged\" properties.\n                    metadata?.[$viewFieldIndexes]?.forEach((index) => changes[index] = exports.OPERATION.DELETE);\n                }\n            }\n            else {\n                // delete only tagged properties\n                metadata?.[$fieldIndexesByViewTag][tag].forEach((index) => changes[index] = exports.OPERATION.DELETE);\n            }\n            // remove tag\n            if (this.tags && this.tags.has(changeTree)) {\n                const tags = this.tags.get(changeTree);\n                if (tag === undefined) {\n                    // delete all tags\n                    this.tags.delete(changeTree);\n                }\n                else {\n                    // delete specific tag\n                    tags.delete(tag);\n                    // if tag set is empty, delete it entirely\n                    if (tags.size === 0) {\n                        this.tags.delete(changeTree);\n                    }\n                }\n            }\n            return this;\n        }\n        has(obj) {\n            return this.visible.has(obj[$changes]);\n        }\n        hasTag(ob, tag = DEFAULT_VIEW_TAG) {\n            const tags = this.tags?.get(ob[$changes]);\n            return tags?.has(tag) ?? false;\n        }\n        clear() {\n            if (!this.iterable) {\n                throw new Error(\"StateView#clear() is only available for iterable StateView's. Use StateView(iterable: true) constructor.\");\n            }\n            for (let i = 0, l = this.items.length; i < l; i++) {\n                this.remove(this.items[i], DEFAULT_VIEW_TAG, true);\n            }\n            // clear items array\n            this.items.length = 0;\n        }\n        isChangeTreeVisible(changeTree) {\n            let isVisible = this.visible.has(changeTree);\n            //\n            // TODO: avoid checking for parent visibility, most of the time it's not needed\n            // See test case: 'should not be required to manually call view.add() items to child arrays without @view() tag'\n            //\n            if (!isVisible && changeTree.isVisibilitySharedWithParent) {\n                // console.log(\"CHECK AGAINST PARENT...\", {\n                //     ref: changeTree.ref.constructor.name,\n                //     refId: changeTree.refId,\n                //     parent: changeTree.parent.constructor.name,\n                // });\n                if (this.visible.has(changeTree.parent[$changes])) {\n                    this.visible.add(changeTree);\n                    isVisible = true;\n                }\n            }\n            return isVisible;\n        }\n        _recursiveDeleteVisibleChangeTree(changeTree) {\n            changeTree.forEachChild((childChangeTree) => {\n                this.visible.delete(childChangeTree);\n                this._recursiveDeleteVisibleChangeTree(childChangeTree);\n            });\n        }\n    }\n\n    registerType(\"map\", { constructor: MapSchema });\n    registerType(\"array\", { constructor: ArraySchema });\n    registerType(\"set\", { constructor: SetSchema });\n    registerType(\"collection\", { constructor: CollectionSchema, });\n\n    exports.$changes = $changes;\n    exports.$childType = $childType;\n    exports.$decoder = $decoder;\n    exports.$deleteByIndex = $deleteByIndex;\n    exports.$encoder = $encoder;\n    exports.$filter = $filter;\n    exports.$getByIndex = $getByIndex;\n    exports.$track = $track;\n    exports.ArraySchema = ArraySchema;\n    exports.ChangeTree = ChangeTree;\n    exports.CollectionSchema = CollectionSchema;\n    exports.Decoder = Decoder;\n    exports.Encoder = Encoder;\n    exports.MapSchema = MapSchema;\n    exports.Metadata = Metadata;\n    exports.Reflection = Reflection;\n    exports.ReflectionField = ReflectionField;\n    exports.ReflectionType = ReflectionType;\n    exports.Schema = Schema;\n    exports.SetSchema = SetSchema;\n    exports.StateView = StateView;\n    exports.TypeContext = TypeContext;\n    exports.decode = decode;\n    exports.decodeKeyValueOperation = decodeKeyValueOperation;\n    exports.decodeSchemaOperation = decodeSchemaOperation;\n    exports.defineCustomTypes = defineCustomTypes;\n    exports.defineTypes = defineTypes;\n    exports.deprecated = deprecated;\n    exports.dumpChanges = dumpChanges;\n    exports.encode = encode;\n    exports.encodeArray = encodeArray;\n    exports.encodeKeyValueOperation = encodeKeyValueOperation;\n    exports.encodeSchemaOperation = encodeSchemaOperation;\n    exports.entity = entity;\n    exports.getDecoderStateCallbacks = getDecoderStateCallbacks;\n    exports.getRawChangesCallback = getRawChangesCallback;\n    exports.registerType = registerType;\n    exports.schema = schema;\n    exports.type = type;\n    exports.view = view;\n\n}));\n","import { ITransport, ITransportEventMap } from \"./ITransport\";\r\nimport { encode, decode, Iterator } from '@colyseus/schema';\r\n\r\nexport class H3TransportTransport implements ITransport {\r\n    wt: WebTransport;\r\n    isOpen: boolean = false;\r\n\r\n    reader: ReadableStreamDefaultReader;\r\n    writer: WritableStreamDefaultWriter;\r\n\r\n    unreliableReader: ReadableStreamDefaultReader<Uint8Array>;\r\n    unreliableWriter: WritableStreamDefaultWriter<Uint8Array>;\r\n\r\n    private lengthPrefixBuffer = new Uint8Array(9); // 9 bytes is the maximum length of a length prefix\r\n\r\n    constructor(public events: ITransportEventMap) { }\r\n\r\n    public connect(url: string, options: any = {}) {\r\n        const wtOpts: WebTransportOptions = options.fingerprint && ({\r\n            // requireUnreliable: true,\r\n            // congestionControl: \"default\", // \"low-latency\" || \"throughput\"\r\n\r\n            serverCertificateHashes: [{\r\n                algorithm: 'sha-256',\r\n                value: new Uint8Array(options.fingerprint).buffer\r\n            }]\r\n        }) || undefined;\r\n\r\n        this.wt = new WebTransport(url, wtOpts);\r\n\r\n        this.wt.ready.then((e) => {\r\n            console.log(\"WebTransport ready!\", e)\r\n            this.isOpen = true;\r\n\r\n            this.unreliableReader = this.wt.datagrams.readable.getReader();\r\n            this.unreliableWriter = this.wt.datagrams.writable.getWriter();\r\n\r\n            const incomingBidi = this.wt.incomingBidirectionalStreams.getReader();\r\n            incomingBidi.read().then((stream) => {\r\n                this.reader = stream.value.readable.getReader();\r\n                this.writer = stream.value.writable.getWriter();\r\n\r\n                // immediately write room/sessionId for establishing the room connection\r\n                this.sendSeatReservation(options.room.roomId, options.sessionId, options.reconnectionToken);\r\n\r\n                // start reading incoming data\r\n                this.readIncomingData();\r\n                this.readIncomingUnreliableData();\r\n\r\n            }).catch((e) => {\r\n                console.error(\"failed to read incoming stream\", e);\r\n                console.error(\"TODO: close the connection\");\r\n            });\r\n\r\n            // this.events.onopen(e);\r\n        }).catch((e: WebTransportCloseInfo) => {\r\n            // this.events.onerror(e);\r\n            // this.events.onclose({ code: e.closeCode, reason: e.reason });\r\n            console.log(\"WebTransport not ready!\", e)\r\n            this._close();\r\n        });\r\n\r\n        this.wt.closed.then((e: WebTransportCloseInfo) => {\r\n            console.log(\"WebTransport closed w/ success\", e)\r\n            this.events.onclose({ code: e.closeCode, reason: e.reason });\r\n\r\n        }).catch((e: WebTransportCloseInfo) => {\r\n            console.log(\"WebTransport closed w/ error\", e)\r\n            this.events.onerror(e);\r\n            this.events.onclose({ code: e.closeCode, reason: e.reason });\r\n        }).finally(() => {\r\n            this._close();\r\n        });\r\n    }\r\n\r\n    public send(data: Buffer | Uint8Array): void {\r\n        const prefixLength = encode.number(this.lengthPrefixBuffer as any, data.length, { offset: 0 });\r\n        const dataWithPrefixedLength = new Uint8Array(prefixLength + data.length);\r\n        dataWithPrefixedLength.set(this.lengthPrefixBuffer.subarray(0, prefixLength), 0);\r\n        dataWithPrefixedLength.set(data, prefixLength);\r\n        this.writer.write(dataWithPrefixedLength);\r\n    }\r\n\r\n    public sendUnreliable(data: Buffer | Uint8Array): void {\r\n        const prefixLength = encode.number(this.lengthPrefixBuffer as any, data.length, { offset: 0 });\r\n        const dataWithPrefixedLength = new Uint8Array(prefixLength + data.length);\r\n        dataWithPrefixedLength.set(this.lengthPrefixBuffer.subarray(0, prefixLength), 0);\r\n        dataWithPrefixedLength.set(data, prefixLength);\r\n        this.unreliableWriter.write(dataWithPrefixedLength);\r\n    }\r\n\r\n    public close(code?: number, reason?: string) {\r\n        try {\r\n            this.wt.close({ closeCode: code, reason: reason });\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    protected async readIncomingData() {\r\n        let result: ReadableStreamReadResult<Uint8Array>;\r\n\r\n        while (this.isOpen) {\r\n            try {\r\n                result = await this.reader.read();\r\n\r\n                //\r\n                // a single read may contain multiple messages\r\n                // each message is prefixed with its length\r\n                //\r\n\r\n                const messages = result.value;\r\n                const it: Iterator = { offset: 0 };\r\n                do {\r\n                    //\r\n                    // QUESTION: should we buffer the message in case it's not fully read?\r\n                    //\r\n\r\n                    const length = decode.number(messages as any, it);\r\n                    this.events.onmessage({ data: messages.subarray(it.offset, it.offset + length) });\r\n                    it.offset += length;\r\n                } while (it.offset < messages.length);\r\n\r\n            } catch (e) {\r\n                if (e.message.indexOf(\"session is closed\") === -1) {\r\n                    console.error(\"H3Transport: failed to read incoming data\", e);\r\n                }\r\n                break;\r\n            }\r\n\r\n            if (result.done) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    protected async readIncomingUnreliableData() {\r\n        let result: ReadableStreamReadResult<Uint8Array>;\r\n\r\n        while (this.isOpen) {\r\n            try {\r\n                result = await this.unreliableReader.read();\r\n\r\n                //\r\n                // a single read may contain multiple messages\r\n                // each message is prefixed with its length\r\n                //\r\n\r\n                const messages = result.value;\r\n                const it: Iterator = { offset: 0 };\r\n                do {\r\n                    //\r\n                    // QUESTION: should we buffer the message in case it's not fully read?\r\n                    //\r\n\r\n                    const length = decode.number(messages as any, it);\r\n                    this.events.onmessage({ data: messages.subarray(it.offset, it.offset + length) });\r\n                    it.offset += length;\r\n                } while (it.offset < messages.length);\r\n\r\n            } catch (e) {\r\n                if (e.message.indexOf(\"session is closed\") === -1) {\r\n                    console.error(\"H3Transport: failed to read incoming data\", e);\r\n                }\r\n                break;\r\n            }\r\n\r\n            if (result.done) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    protected sendSeatReservation (roomId: string, sessionId: string, reconnectionToken?: string) {\r\n        const it: Iterator = { offset: 0 };\r\n        const bytes: number[] = [];\r\n\r\n        encode.string(bytes, roomId, it);\r\n        encode.string(bytes, sessionId, it);\r\n\r\n        if (reconnectionToken) {\r\n            encode.string(bytes, reconnectionToken, it);\r\n        }\r\n\r\n        this.writer.write(new Uint8Array(bytes).buffer);\r\n    }\r\n\r\n    protected _close() {\r\n        this.isOpen = false;\r\n    }\r\n\r\n}\r\n","'use strict';\n\nmodule.exports = function () {\n  throw new Error(\n    'ws does not work in the browser. Browser clients must use the native ' +\n      'WebSocket object'\n  );\n};\n","import NodeWebSocket from \"ws\";\nimport { ITransport, ITransportEventMap } from \"./ITransport\";\n\nconst WebSocket1 = globalThis.WebSocket || NodeWebSocket;\n\nexport class WebSocketTransport implements ITransport {\n    ws: WebSocket | NodeWebSocket;\n    protocols?: string | string[];\n\n    constructor(public events: ITransportEventMap) {}\n\n    public send(data: Buffer | Uint8Array): void {\n        this.ws.send(data);\n    }\n\n    public sendUnreliable(data: ArrayBuffer | Array<number>): void {\n        console.warn(\"colyseus.js: The WebSocket transport does not support unreliable messages\");\n    }\n\n    /**\n     * @param url URL to connect to\n     * @param headers custom headers to send with the connection (only supported in Node.js. Web Browsers do not allow setting custom headers)\n     */\n    public connect(url: string, headers?: any): void {\n        if (typeof wx !== 'undefined' && wx.connectSocket) {\n          // 微信小程序环境\n          this.ws = wx.connectSocket({ url, headers, protocols: this.protocols });\n          this.ws.onOpen(() => {\n              console.log(\"ws onOpen\");\n              this.events.onopen?.(); // 直接调用，不返回\n          });\n          this.ws.onMessage((res) => {\n              console.log(\"wx onMessage\", res);\n              this.events.onmessage?.({ data: res.data }); // 包装为标准格式\n          });\n          this.ws.onClose(() => {\n            console.log(\"wx onClose\");\n\n              this.events.onclose?.();\n          });\n          this.ws.onError((err) => {\n            console.log(\"wx onError\", err);\n\n              this.events.onerror?.(err);\n          });\n      } else {\n          // 非微信环境（Node.js 或浏览器）\n          try {\n              this.ws = new WebSocket1(url, { headers, protocols: this.protocols });\n          } catch (e) {\n              this.ws = new WebSocket1(url, this.protocols);\n          }\n          this.ws.binaryType = 'arraybuffer';\n          this.ws.onopen = this.events.onopen;\n          this.ws.onmessage = this.events.onmessage;\n          this.ws.onclose = this.events.onclose;\n          this.ws.onerror = this.events.onerror;\n      }\n    }\n\n    public close(code?: number, reason?: string) {\n        this.ws.close(code, reason);\n    }\n\n    get isOpen() {\n        return this.ws.readyState === WebSocket.OPEN;\n    }\n\n}\n","import { H3TransportTransport } from \"./transport/H3Transport\";\r\nimport { ITransport, ITransportEventMap } from \"./transport/ITransport\";\r\nimport { WebSocketTransport } from \"./transport/WebSocketTransport\";\r\n\r\nexport class Connection implements ITransport {\r\n    transport: ITransport;\r\n    events: ITransportEventMap = {};\r\n\r\n    constructor(protocol?: string) {\r\n        switch (protocol) {\r\n            case \"h3\":\r\n                this.transport = new H3TransportTransport(this.events);\r\n                break;\r\n\r\n            default:\r\n                this.transport = new WebSocketTransport(this.events);\r\n                break;\r\n        }\r\n    }\r\n\r\n    connect(url: string, options?: any): void {\r\n        this.transport.connect.call(this.transport, url, options);\r\n    }\r\n\r\n    send(data: Buffer | Uint8Array): void {\r\n        this.transport.send(data);\r\n    }\r\n\r\n    sendUnreliable(data: Buffer | Uint8Array): void {\r\n        this.transport.sendUnreliable(data);\r\n    }\r\n\r\n    close(code?: number, reason?: string): void {\r\n        this.transport.close(code, reason);\r\n    }\r\n\r\n    get isOpen() {\r\n        return this.transport.isOpen;\r\n    }\r\n\r\n}\r\n","import { RoomAvailable } from \"./Room\";\r\n\r\nexport interface SeatReservation {\r\n    room: RoomAvailable;\r\n    sessionId: string;\r\n    reconnectionToken?: string;\r\n    devMode?: boolean;\r\n    protocol?: string;\r\n}\r\n\r\n// Use codes between 0~127 for lesser throughput (1 byte)\r\nexport enum Protocol {\r\n    // Room-related (10~19)\r\n    HANDSHAKE = 9,\r\n    JOIN_ROOM = 10,\r\n    ERROR = 11,\r\n    LEAVE_ROOM = 12,\r\n    ROOM_DATA = 13,\r\n    ROOM_STATE = 14,\r\n    ROOM_STATE_PATCH = 15,\r\n    ROOM_DATA_SCHEMA = 16,\r\n    ROOM_DATA_BYTES = 17,\r\n}\r\n\r\nexport enum ErrorCode {\r\n    MATCHMAKE_NO_HANDLER = 4210,\r\n    MATCHMAKE_INVALID_CRITERIA = 4211,\r\n    MATCHMAKE_INVALID_ROOM_ID = 4212,\r\n    MATCHMAKE_UNHANDLED = 4213,\r\n    MATCHMAKE_EXPIRED = 4214,\r\n\r\n    AUTH_FAILED = 4215,\r\n    APPLICATION_ERROR = 4216,\r\n}\r\n","import type { Iterator } from \"@colyseus/schema\";\r\n\r\nexport type BufferLike = number[] | Uint8Array | Buffer;\r\n\r\nexport interface Serializer<State> {\r\n    setState(data: BufferLike, it?: Iterator): void;\r\n    getState(): State;\r\n\r\n    patch(data: BufferLike, it?: Iterator): void;\r\n    teardown(): void;\r\n\r\n    handshake?(bytes: BufferLike, it?: any): void;\r\n}\r\n\r\nconst serializers: { [id: string]: any } = {};\r\n\r\nexport function registerSerializer (id: string, serializer: any) {\r\n    serializers[id] = serializer;\r\n}\r\n\r\nexport function getSerializer (id: string) {\r\n    const serializer = serializers[id];\r\n    if (!serializer) { throw new Error(\"missing serializer: \" + id); }\r\n    return serializer;\r\n}","/**\r\n * The MIT License (MIT)\r\n *\r\n * Copyright 2016 Andrey Sitnik <andrey@sitnik.ru>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\r\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\r\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\r\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\r\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\nexport const createNanoEvents = () => ({\r\n    emit(event: string, ...args: any[]) {\r\n        let callbacks = this.events[event] || []\r\n        for (let i = 0, length = callbacks.length; i < length; i++) {\r\n            callbacks[i](...args)\r\n        }\r\n    },\r\n    events: {},\r\n    on(event: string, cb: (...args: any[]) => void) {\r\n        this.events[event]?.push(cb) || (this.events[event] = [cb])\r\n        return () => {\r\n            this.events[event] = this.events[event]?.filter(i => cb !== i)\r\n        }\r\n    }\r\n});","type FunctionParameters<T extends (...args: any[]) => any> =\r\n  T extends (...args: infer P) => any\r\n    ? P\r\n    : never;\r\n\r\nexport class EventEmitter<CallbackSignature extends (...args: any[]) => any> {\r\n  handlers: Array<CallbackSignature> = [];\r\n\r\n  register(cb: CallbackSignature, once: boolean = false) {\r\n    this.handlers.push(cb);\r\n    return this;\r\n  }\r\n\r\n  invoke(...args: FunctionParameters<CallbackSignature>) {\r\n    this.handlers.forEach((handler) => handler.apply(this, args));\r\n  }\r\n\r\n  invokeAsync(...args: FunctionParameters<CallbackSignature>) {\r\n    return Promise.all(this.handlers.map((handler) => handler.apply(this, args)));\r\n  }\r\n\r\n  remove (cb: CallbackSignature) {\r\n    const index = this.handlers.indexOf(cb);\r\n    this.handlers[index] = this.handlers[this.handlers.length - 1];\r\n    this.handlers.pop();\r\n  }\r\n\r\n  clear() {\r\n    this.handlers = [];\r\n  }\r\n}\r\n\r\nexport function createSignal<CallbackSignature extends (...args: any[]) => void | Promise<any>>()\r\n  : \r\n   {\r\n    once: (cb: CallbackSignature) => void;\r\n    remove: (cb: CallbackSignature) => void,\r\n    invoke: (...args: FunctionParameters<CallbackSignature>) => void,\r\n    invokeAsync: (...args: FunctionParameters<CallbackSignature>) => Promise<any[]>,\r\n    clear: () => void,\r\n  } & ((this: any, cb: CallbackSignature) => EventEmitter<CallbackSignature> )\r\n  {\r\n  const emitter = new EventEmitter<CallbackSignature>();\r\n\r\n  function register(this: any, cb: CallbackSignature): EventEmitter<CallbackSignature> {\r\n    return emitter.register(cb, this === null);\r\n  };\r\n\r\n  register.once = (cb: CallbackSignature) => {\r\n    const callback: any = function (...args: any[]) {\r\n      cb.apply(this, args);\r\n      emitter.remove(callback);\r\n    }\r\n    emitter.register(callback);\r\n  }\r\n  register.remove = (cb: CallbackSignature) => emitter.remove(cb)\r\n  register.invoke = (...args: FunctionParameters<CallbackSignature>) => emitter.invoke(...args);\r\n  register.invokeAsync = (...args: FunctionParameters<CallbackSignature>) => emitter.invokeAsync(...args);\r\n  register.clear = () => emitter.clear();\r\n\r\n  return register;\r\n}","import { Serializer } from \"./Serializer\";\r\nimport { Schema, Decoder, Reflection, Iterator, getDecoderStateCallbacks } from \"@colyseus/schema\";\r\nimport type { Room } from \"../Room\";\r\n\r\nexport type SchemaConstructor<T = Schema> = new (...args: any[]) => T;\r\n\r\n//\r\n// TODO: use a schema interface, which even having duplicate definitions, it could be used to get the callback proxy.\r\n// \r\n// ```ts\r\n//     export type SchemaCallbackProxy<RoomState> = (<T extends ISchema>(instance: T) => CallbackProxy<T>);\r\n//     export function getStateCallbacks<T extends ISchema>(room: Room<T>) {\r\n// ```\r\n//\r\nexport function getStateCallbacks<T>(room: Room<T>) {\r\n    try {\r\n        // SchemaSerializer\r\n        // @ts-ignore\r\n        return getDecoderStateCallbacks<T>((room['serializer'] as unknown as SchemaSerializer<T>).decoder);\r\n    } catch (e) {\r\n        // NoneSerializer\r\n        return undefined;\r\n    }\r\n}\r\n\r\nexport class SchemaSerializer<T extends Schema = any> implements Serializer<T> {\r\n    state: T;\r\n    decoder: Decoder<T>;\r\n\r\n    setState(encodedState: Buffer, it?: Iterator) {\r\n        this.decoder.decode(encodedState, it);\r\n    }\r\n\r\n    getState() {\r\n        return this.state;\r\n    }\r\n\r\n    patch(patches: Buffer, it?: Iterator) {\r\n        return this.decoder.decode(patches, it);\r\n    }\r\n\r\n    teardown() {\r\n        this.decoder.root.clearRefs();\r\n    }\r\n\r\n    handshake(bytes: Buffer, it?: Iterator) {\r\n        if (this.state) {\r\n            //\r\n            // TODO: validate definitions against concreate this.state instance\r\n            //\r\n            Reflection.decode(bytes, it); // no-op\r\n\r\n            this.decoder = new Decoder(this.state);\r\n\r\n        } else {\r\n            // initialize reflected state from server\r\n            this.decoder = Reflection.decode(bytes, it);\r\n            this.state = this.decoder.state;\r\n        }\r\n    }\r\n}\r\n","var decoder\ntry {\n\tdecoder = new TextDecoder()\n} catch(error) {}\nvar src\nvar srcEnd\nvar position = 0\nvar alreadySet\nconst EMPTY_ARRAY = []\nvar strings = EMPTY_ARRAY\nvar stringPosition = 0\nvar currentUnpackr = {}\nvar currentStructures\nvar srcString\nvar srcStringStart = 0\nvar srcStringEnd = 0\nvar bundledStrings\nvar referenceMap\nvar currentExtensions = []\nvar dataView\nvar defaultOptions = {\n\tuseRecords: false,\n\tmapsAsObjects: true\n}\nexport class C1Type {}\nexport const C1 = new C1Type()\nC1.name = 'MessagePack 0xC1'\nvar sequentialMode = false\nvar inlineObjectReadThreshold = 2\nvar readStruct, onLoadedStructures, onSaveState\nvar BlockedFunction // we use search and replace to change the next call to BlockedFunction to avoid CSP issues for\n// no-eval build\ntry {\n\tnew Function('')\n} catch(error) {\n\t// if eval variants are not supported, do not create inline object readers ever\n\tinlineObjectReadThreshold = Infinity\n}\n\nexport class Unpackr {\n\tconstructor(options) {\n\t\tif (options) {\n\t\t\tif (options.useRecords === false && options.mapsAsObjects === undefined)\n\t\t\t\toptions.mapsAsObjects = true\n\t\t\tif (options.sequential && options.trusted !== false) {\n\t\t\t\toptions.trusted = true;\n\t\t\t\tif (!options.structures && options.useRecords != false) {\n\t\t\t\t\toptions.structures = []\n\t\t\t\t\tif (!options.maxSharedStructures)\n\t\t\t\t\t\toptions.maxSharedStructures = 0\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (options.structures)\n\t\t\t\toptions.structures.sharedLength = options.structures.length\n\t\t\telse if (options.getStructures) {\n\t\t\t\t(options.structures = []).uninitialized = true // this is what we use to denote an uninitialized structures\n\t\t\t\toptions.structures.sharedLength = 0\n\t\t\t}\n\t\t\tif (options.int64AsNumber) {\n\t\t\t\toptions.int64AsType = 'number'\n\t\t\t}\n\t\t}\n\t\tObject.assign(this, options)\n\t}\n\tunpack(source, options) {\n\t\tif (src) {\n\t\t\t// re-entrant execution, save the state and restore it after we do this unpack\n\t\t\treturn saveState(() => {\n\t\t\t\tclearSource()\n\t\t\t\treturn this ? this.unpack(source, options) : Unpackr.prototype.unpack.call(defaultOptions, source, options)\n\t\t\t})\n\t\t}\n\t\tif (!source.buffer && source.constructor === ArrayBuffer)\n\t\t\tsource = typeof Buffer !== 'undefined' ? Buffer.from(source) : new Uint8Array(source);\n\t\tif (typeof options === 'object') {\n\t\t\tsrcEnd = options.end || source.length\n\t\t\tposition = options.start || 0\n\t\t} else {\n\t\t\tposition = 0\n\t\t\tsrcEnd = options > -1 ? options : source.length\n\t\t}\n\t\tstringPosition = 0\n\t\tsrcStringEnd = 0\n\t\tsrcString = null\n\t\tstrings = EMPTY_ARRAY\n\t\tbundledStrings = null\n\t\tsrc = source\n\t\t// this provides cached access to the data view for a buffer if it is getting reused, which is a recommend\n\t\t// technique for getting data from a database where it can be copied into an existing buffer instead of creating\n\t\t// new ones\n\t\ttry {\n\t\t\tdataView = source.dataView || (source.dataView = new DataView(source.buffer, source.byteOffset, source.byteLength))\n\t\t} catch(error) {\n\t\t\t// if it doesn't have a buffer, maybe it is the wrong type of object\n\t\t\tsrc = null\n\t\t\tif (source instanceof Uint8Array)\n\t\t\t\tthrow error\n\t\t\tthrow new Error('Source must be a Uint8Array or Buffer but was a ' + ((source && typeof source == 'object') ? source.constructor.name : typeof source))\n\t\t}\n\t\tif (this instanceof Unpackr) {\n\t\t\tcurrentUnpackr = this\n\t\t\tif (this.structures) {\n\t\t\t\tcurrentStructures = this.structures\n\t\t\t\treturn checkedRead(options)\n\t\t\t} else if (!currentStructures || currentStructures.length > 0) {\n\t\t\t\tcurrentStructures = []\n\t\t\t}\n\t\t} else {\n\t\t\tcurrentUnpackr = defaultOptions\n\t\t\tif (!currentStructures || currentStructures.length > 0)\n\t\t\t\tcurrentStructures = []\n\t\t}\n\t\treturn checkedRead(options)\n\t}\n\tunpackMultiple(source, forEach) {\n\t\tlet values, lastPosition = 0\n\t\ttry {\n\t\t\tsequentialMode = true\n\t\t\tlet size = source.length\n\t\t\tlet value = this ? this.unpack(source, size) : defaultUnpackr.unpack(source, size)\n\t\t\tif (forEach) {\n\t\t\t\tif (forEach(value, lastPosition, position) === false) return;\n\t\t\t\twhile(position < size) {\n\t\t\t\t\tlastPosition = position\n\t\t\t\t\tif (forEach(checkedRead(), lastPosition, position) === false) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvalues = [ value ]\n\t\t\t\twhile(position < size) {\n\t\t\t\t\tlastPosition = position\n\t\t\t\t\tvalues.push(checkedRead())\n\t\t\t\t}\n\t\t\t\treturn values\n\t\t\t}\n\t\t} catch(error) {\n\t\t\terror.lastPosition = lastPosition\n\t\t\terror.values = values\n\t\t\tthrow error\n\t\t} finally {\n\t\t\tsequentialMode = false\n\t\t\tclearSource()\n\t\t}\n\t}\n\t_mergeStructures(loadedStructures, existingStructures) {\n\t\tif (onLoadedStructures)\n\t\t\tloadedStructures = onLoadedStructures.call(this, loadedStructures);\n\t\tloadedStructures = loadedStructures || []\n\t\tif (Object.isFrozen(loadedStructures))\n\t\t\tloadedStructures = loadedStructures.map(structure => structure.slice(0))\n\t\tfor (let i = 0, l = loadedStructures.length; i < l; i++) {\n\t\t\tlet structure = loadedStructures[i]\n\t\t\tif (structure) {\n\t\t\t\tstructure.isShared = true\n\t\t\t\tif (i >= 32)\n\t\t\t\t\tstructure.highByte = (i - 32) >> 5\n\t\t\t}\n\t\t}\n\t\tloadedStructures.sharedLength = loadedStructures.length\n\t\tfor (let id in existingStructures || []) {\n\t\t\tif (id >= 0) {\n\t\t\t\tlet structure = loadedStructures[id]\n\t\t\t\tlet existing = existingStructures[id]\n\t\t\t\tif (existing) {\n\t\t\t\t\tif (structure)\n\t\t\t\t\t\t(loadedStructures.restoreStructures || (loadedStructures.restoreStructures = []))[id] = structure\n\t\t\t\t\tloadedStructures[id] = existing\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this.structures = loadedStructures\n\t}\n\tdecode(source, options) {\n\t\treturn this.unpack(source, options)\n\t}\n}\nexport function getPosition() {\n\treturn position\n}\nexport function checkedRead(options) {\n\ttry {\n\t\tif (!currentUnpackr.trusted && !sequentialMode) {\n\t\t\tlet sharedLength = currentStructures.sharedLength || 0\n\t\t\tif (sharedLength < currentStructures.length)\n\t\t\t\tcurrentStructures.length = sharedLength\n\t\t}\n\t\tlet result\n\t\tif (currentUnpackr.randomAccessStructure && src[position] < 0x40 && src[position] >= 0x20 && readStruct) {\n\t\t\tresult = readStruct(src, position, srcEnd, currentUnpackr)\n\t\t\tsrc = null // dispose of this so that recursive unpack calls don't save state\n\t\t\tif (!(options && options.lazy) && result)\n\t\t\t\tresult = result.toJSON()\n\t\t\tposition = srcEnd\n\t\t} else\n\t\t\tresult = read()\n\t\tif (bundledStrings) { // bundled strings to skip past\n\t\t\tposition = bundledStrings.postBundlePosition\n\t\t\tbundledStrings = null\n\t\t}\n\t\tif (sequentialMode)\n\t\t\t// we only need to restore the structures if there was an error, but if we completed a read,\n\t\t\t// we can clear this out and keep the structures we read\n\t\t\tcurrentStructures.restoreStructures = null\n\n\t\tif (position == srcEnd) {\n\t\t\t// finished reading this source, cleanup references\n\t\t\tif (currentStructures && currentStructures.restoreStructures)\n\t\t\t\trestoreStructures()\n\t\t\tcurrentStructures = null\n\t\t\tsrc = null\n\t\t\tif (referenceMap)\n\t\t\t\treferenceMap = null\n\t\t} else if (position > srcEnd) {\n\t\t\t// over read\n\t\t\tthrow new Error('Unexpected end of MessagePack data')\n\t\t} else if (!sequentialMode) {\n\t\t\tlet jsonView;\n\t\t\ttry {\n\t\t\t\tjsonView = JSON.stringify(result, (_, value) => typeof value === \"bigint\" ? `${value}n` : value).slice(0, 100)\n\t\t\t} catch(error) {\n\t\t\t\tjsonView = '(JSON view not available ' + error + ')'\n\t\t\t}\n\t\t\tthrow new Error('Data read, but end of buffer not reached ' + jsonView)\n\t\t}\n\t\t// else more to read, but we are reading sequentially, so don't clear source yet\n\t\treturn result\n\t} catch(error) {\n\t\tif (currentStructures && currentStructures.restoreStructures)\n\t\t\trestoreStructures()\n\t\tclearSource()\n\t\tif (error instanceof RangeError || error.message.startsWith('Unexpected end of buffer') || position > srcEnd) {\n\t\t\terror.incomplete = true\n\t\t}\n\t\tthrow error\n\t}\n}\n\nfunction restoreStructures() {\n\tfor (let id in currentStructures.restoreStructures) {\n\t\tcurrentStructures[id] = currentStructures.restoreStructures[id]\n\t}\n\tcurrentStructures.restoreStructures = null\n}\n\nexport function read() {\n\tlet token = src[position++]\n\tif (token < 0xa0) {\n\t\tif (token < 0x80) {\n\t\t\tif (token < 0x40)\n\t\t\t\treturn token\n\t\t\telse {\n\t\t\t\tlet structure = currentStructures[token & 0x3f] ||\n\t\t\t\t\tcurrentUnpackr.getStructures && loadStructures()[token & 0x3f]\n\t\t\t\tif (structure) {\n\t\t\t\t\tif (!structure.read) {\n\t\t\t\t\t\tstructure.read = createStructureReader(structure, token & 0x3f)\n\t\t\t\t\t}\n\t\t\t\t\treturn structure.read()\n\t\t\t\t} else\n\t\t\t\t\treturn token\n\t\t\t}\n\t\t} else if (token < 0x90) {\n\t\t\t// map\n\t\t\ttoken -= 0x80\n\t\t\tif (currentUnpackr.mapsAsObjects) {\n\t\t\t\tlet object = {}\n\t\t\t\tfor (let i = 0; i < token; i++) {\n\t\t\t\t\tlet key = readKey()\n\t\t\t\t\tif (key === '__proto__')\n\t\t\t\t\t\tkey = '__proto_'\n\t\t\t\t\tobject[key] = read()\n\t\t\t\t}\n\t\t\t\treturn object\n\t\t\t} else {\n\t\t\t\tlet map = new Map()\n\t\t\t\tfor (let i = 0; i < token; i++) {\n\t\t\t\t\tmap.set(read(), read())\n\t\t\t\t}\n\t\t\t\treturn map\n\t\t\t}\n\t\t} else {\n\t\t\ttoken -= 0x90\n\t\t\tlet array = new Array(token)\n\t\t\tfor (let i = 0; i < token; i++) {\n\t\t\t\tarray[i] = read()\n\t\t\t}\n\t\t\tif (currentUnpackr.freezeData)\n\t\t\t\treturn Object.freeze(array)\n\t\t\treturn array\n\t\t}\n\t} else if (token < 0xc0) {\n\t\t// fixstr\n\t\tlet length = token - 0xa0\n\t\tif (srcStringEnd >= position) {\n\t\t\treturn srcString.slice(position - srcStringStart, (position += length) - srcStringStart)\n\t\t}\n\t\tif (srcStringEnd == 0 && srcEnd < 140) {\n\t\t\t// for small blocks, avoiding the overhead of the extract call is helpful\n\t\t\tlet string = length < 16 ? shortStringInJS(length) : longStringInJS(length)\n\t\t\tif (string != null)\n\t\t\t\treturn string\n\t\t}\n\t\treturn readFixedString(length)\n\t} else {\n\t\tlet value\n\t\tswitch (token) {\n\t\t\tcase 0xc0: return null\n\t\t\tcase 0xc1:\n\t\t\t\tif (bundledStrings) {\n\t\t\t\t\tvalue = read() // followed by the length of the string in characters (not bytes!)\n\t\t\t\t\tif (value > 0)\n\t\t\t\t\t\treturn bundledStrings[1].slice(bundledStrings.position1, bundledStrings.position1 += value)\n\t\t\t\t\telse\n\t\t\t\t\t\treturn bundledStrings[0].slice(bundledStrings.position0, bundledStrings.position0 -= value)\n\t\t\t\t}\n\t\t\t\treturn C1; // \"never-used\", return special object to denote that\n\t\t\tcase 0xc2: return false\n\t\t\tcase 0xc3: return true\n\t\t\tcase 0xc4:\n\t\t\t\t// bin 8\n\t\t\t\tvalue = src[position++]\n\t\t\t\tif (value === undefined)\n\t\t\t\t\tthrow new Error('Unexpected end of buffer')\n\t\t\t\treturn readBin(value)\n\t\t\tcase 0xc5:\n\t\t\t\t// bin 16\n\t\t\t\tvalue = dataView.getUint16(position)\n\t\t\t\tposition += 2\n\t\t\t\treturn readBin(value)\n\t\t\tcase 0xc6:\n\t\t\t\t// bin 32\n\t\t\t\tvalue = dataView.getUint32(position)\n\t\t\t\tposition += 4\n\t\t\t\treturn readBin(value)\n\t\t\tcase 0xc7:\n\t\t\t\t// ext 8\n\t\t\t\treturn readExt(src[position++])\n\t\t\tcase 0xc8:\n\t\t\t\t// ext 16\n\t\t\t\tvalue = dataView.getUint16(position)\n\t\t\t\tposition += 2\n\t\t\t\treturn readExt(value)\n\t\t\tcase 0xc9:\n\t\t\t\t// ext 32\n\t\t\t\tvalue = dataView.getUint32(position)\n\t\t\t\tposition += 4\n\t\t\t\treturn readExt(value)\n\t\t\tcase 0xca:\n\t\t\t\tvalue = dataView.getFloat32(position)\n\t\t\t\tif (currentUnpackr.useFloat32 > 2) {\n\t\t\t\t\t// this does rounding of numbers that were encoded in 32-bit float to nearest significant decimal digit that could be preserved\n\t\t\t\t\tlet multiplier = mult10[((src[position] & 0x7f) << 1) | (src[position + 1] >> 7)]\n\t\t\t\t\tposition += 4\n\t\t\t\t\treturn ((multiplier * value + (value > 0 ? 0.5 : -0.5)) >> 0) / multiplier\n\t\t\t\t}\n\t\t\t\tposition += 4\n\t\t\t\treturn value\n\t\t\tcase 0xcb:\n\t\t\t\tvalue = dataView.getFloat64(position)\n\t\t\t\tposition += 8\n\t\t\t\treturn value\n\t\t\t// uint handlers\n\t\t\tcase 0xcc:\n\t\t\t\treturn src[position++]\n\t\t\tcase 0xcd:\n\t\t\t\tvalue = dataView.getUint16(position)\n\t\t\t\tposition += 2\n\t\t\t\treturn value\n\t\t\tcase 0xce:\n\t\t\t\tvalue = dataView.getUint32(position)\n\t\t\t\tposition += 4\n\t\t\t\treturn value\n\t\t\tcase 0xcf:\n\t\t\t\tif (currentUnpackr.int64AsType === 'number') {\n\t\t\t\t\tvalue = dataView.getUint32(position) * 0x100000000\n\t\t\t\t\tvalue += dataView.getUint32(position + 4)\n\t\t\t\t} else if (currentUnpackr.int64AsType === 'string') {\n\t\t\t\t\tvalue = dataView.getBigUint64(position).toString()\n\t\t\t\t} else if (currentUnpackr.int64AsType === 'auto') {\n\t\t\t\t\tvalue = dataView.getBigUint64(position)\n\t\t\t\t\tif (value<=BigInt(2)<<BigInt(52)) value=Number(value)\n\t\t\t\t} else\n\t\t\t\t\tvalue = dataView.getBigUint64(position)\n\t\t\t\tposition += 8\n\t\t\t\treturn value\n\n\t\t\t// int handlers\n\t\t\tcase 0xd0:\n\t\t\t\treturn dataView.getInt8(position++)\n\t\t\tcase 0xd1:\n\t\t\t\tvalue = dataView.getInt16(position)\n\t\t\t\tposition += 2\n\t\t\t\treturn value\n\t\t\tcase 0xd2:\n\t\t\t\tvalue = dataView.getInt32(position)\n\t\t\t\tposition += 4\n\t\t\t\treturn value\n\t\t\tcase 0xd3:\n\t\t\t\tif (currentUnpackr.int64AsType === 'number') {\n\t\t\t\t\tvalue = dataView.getInt32(position) * 0x100000000\n\t\t\t\t\tvalue += dataView.getUint32(position + 4)\n\t\t\t\t} else if (currentUnpackr.int64AsType === 'string') {\n\t\t\t\t\tvalue = dataView.getBigInt64(position).toString()\n\t\t\t\t} else if (currentUnpackr.int64AsType === 'auto') {\n\t\t\t\t\tvalue = dataView.getBigInt64(position)\n\t\t\t\t\tif (value>=BigInt(-2)<<BigInt(52)&&value<=BigInt(2)<<BigInt(52)) value=Number(value)\n\t\t\t\t} else\n\t\t\t\t\tvalue = dataView.getBigInt64(position)\n\t\t\t\tposition += 8\n\t\t\t\treturn value\n\n\t\t\tcase 0xd4:\n\t\t\t\t// fixext 1\n\t\t\t\tvalue = src[position++]\n\t\t\t\tif (value == 0x72) {\n\t\t\t\t\treturn recordDefinition(src[position++] & 0x3f)\n\t\t\t\t} else {\n\t\t\t\t\tlet extension = currentExtensions[value]\n\t\t\t\t\tif (extension) {\n\t\t\t\t\t\tif (extension.read) {\n\t\t\t\t\t\t\tposition++ // skip filler byte\n\t\t\t\t\t\t\treturn extension.read(read())\n\t\t\t\t\t\t} else if (extension.noBuffer) {\n\t\t\t\t\t\t\tposition++ // skip filler byte\n\t\t\t\t\t\t\treturn extension()\n\t\t\t\t\t\t} else\n\t\t\t\t\t\t\treturn extension(src.subarray(position, ++position))\n\t\t\t\t\t} else\n\t\t\t\t\t\tthrow new Error('Unknown extension ' + value)\n\t\t\t\t}\n\t\t\tcase 0xd5:\n\t\t\t\t// fixext 2\n\t\t\t\tvalue = src[position]\n\t\t\t\tif (value == 0x72) {\n\t\t\t\t\tposition++\n\t\t\t\t\treturn recordDefinition(src[position++] & 0x3f, src[position++])\n\t\t\t\t} else\n\t\t\t\t\treturn readExt(2)\n\t\t\tcase 0xd6:\n\t\t\t\t// fixext 4\n\t\t\t\treturn readExt(4)\n\t\t\tcase 0xd7:\n\t\t\t\t// fixext 8\n\t\t\t\treturn readExt(8)\n\t\t\tcase 0xd8:\n\t\t\t\t// fixext 16\n\t\t\t\treturn readExt(16)\n\t\t\tcase 0xd9:\n\t\t\t// str 8\n\t\t\t\tvalue = src[position++]\n\t\t\t\tif (srcStringEnd >= position) {\n\t\t\t\t\treturn srcString.slice(position - srcStringStart, (position += value) - srcStringStart)\n\t\t\t\t}\n\t\t\t\treturn readString8(value)\n\t\t\tcase 0xda:\n\t\t\t// str 16\n\t\t\t\tvalue = dataView.getUint16(position)\n\t\t\t\tposition += 2\n\t\t\t\tif (srcStringEnd >= position) {\n\t\t\t\t\treturn srcString.slice(position - srcStringStart, (position += value) - srcStringStart)\n\t\t\t\t}\n\t\t\t\treturn readString16(value)\n\t\t\tcase 0xdb:\n\t\t\t// str 32\n\t\t\t\tvalue = dataView.getUint32(position)\n\t\t\t\tposition += 4\n\t\t\t\tif (srcStringEnd >= position) {\n\t\t\t\t\treturn srcString.slice(position - srcStringStart, (position += value) - srcStringStart)\n\t\t\t\t}\n\t\t\t\treturn readString32(value)\n\t\t\tcase 0xdc:\n\t\t\t// array 16\n\t\t\t\tvalue = dataView.getUint16(position)\n\t\t\t\tposition += 2\n\t\t\t\treturn readArray(value)\n\t\t\tcase 0xdd:\n\t\t\t// array 32\n\t\t\t\tvalue = dataView.getUint32(position)\n\t\t\t\tposition += 4\n\t\t\t\treturn readArray(value)\n\t\t\tcase 0xde:\n\t\t\t// map 16\n\t\t\t\tvalue = dataView.getUint16(position)\n\t\t\t\tposition += 2\n\t\t\t\treturn readMap(value)\n\t\t\tcase 0xdf:\n\t\t\t// map 32\n\t\t\t\tvalue = dataView.getUint32(position)\n\t\t\t\tposition += 4\n\t\t\t\treturn readMap(value)\n\t\t\tdefault: // negative int\n\t\t\t\tif (token >= 0xe0)\n\t\t\t\t\treturn token - 0x100\n\t\t\t\tif (token === undefined) {\n\t\t\t\t\tlet error = new Error('Unexpected end of MessagePack data')\n\t\t\t\t\terror.incomplete = true\n\t\t\t\t\tthrow error\n\t\t\t\t}\n\t\t\t\tthrow new Error('Unknown MessagePack token ' + token)\n\n\t\t}\n\t}\n}\nconst validName = /^[a-zA-Z_$][a-zA-Z\\d_$]*$/\nfunction createStructureReader(structure, firstId) {\n\tfunction readObject() {\n\t\t// This initial function is quick to instantiate, but runs slower. After several iterations pay the cost to build the faster function\n\t\tif (readObject.count++ > inlineObjectReadThreshold) {\n\t\t\tlet readObject = structure.read = (new Function('r', 'return function(){return ' + (currentUnpackr.freezeData ? 'Object.freeze' : '') +\n\t\t\t\t'({' + structure.map(key => key === '__proto__' ? '__proto_:r()' : validName.test(key) ? key + ':r()' : ('[' + JSON.stringify(key) + ']:r()')).join(',') + '})}'))(read)\n\t\t\tif (structure.highByte === 0)\n\t\t\t\tstructure.read = createSecondByteReader(firstId, structure.read)\n\t\t\treturn readObject() // second byte is already read, if there is one so immediately read object\n\t\t}\n\t\tlet object = {}\n\t\tfor (let i = 0, l = structure.length; i < l; i++) {\n\t\t\tlet key = structure[i]\n\t\t\tif (key === '__proto__')\n\t\t\t\tkey = '__proto_'\n\t\t\tobject[key] = read()\n\t\t}\n\t\tif (currentUnpackr.freezeData)\n\t\t\treturn Object.freeze(object);\n\t\treturn object\n\t}\n\treadObject.count = 0\n\tif (structure.highByte === 0) {\n\t\treturn createSecondByteReader(firstId, readObject)\n\t}\n\treturn readObject\n}\n\nconst createSecondByteReader = (firstId, read0) => {\n\treturn function() {\n\t\tlet highByte = src[position++]\n\t\tif (highByte === 0)\n\t\t\treturn read0()\n\t\tlet id = firstId < 32 ? -(firstId + (highByte << 5)) : firstId + (highByte << 5)\n\t\tlet structure = currentStructures[id] || loadStructures()[id]\n\t\tif (!structure) {\n\t\t\tthrow new Error('Record id is not defined for ' + id)\n\t\t}\n\t\tif (!structure.read)\n\t\t\tstructure.read = createStructureReader(structure, firstId)\n\t\treturn structure.read()\n\t}\n}\n\nexport function loadStructures() {\n\tlet loadedStructures = saveState(() => {\n\t\t// save the state in case getStructures modifies our buffer\n\t\tsrc = null\n\t\treturn currentUnpackr.getStructures()\n\t})\n\treturn currentStructures = currentUnpackr._mergeStructures(loadedStructures, currentStructures)\n}\n\nvar readFixedString = readStringJS\nvar readString8 = readStringJS\nvar readString16 = readStringJS\nvar readString32 = readStringJS\nexport let isNativeAccelerationEnabled = false\n\nexport function setExtractor(extractStrings) {\n\tisNativeAccelerationEnabled = true\n\treadFixedString = readString(1)\n\treadString8 = readString(2)\n\treadString16 = readString(3)\n\treadString32 = readString(5)\n\tfunction readString(headerLength) {\n\t\treturn function readString(length) {\n\t\t\tlet string = strings[stringPosition++]\n\t\t\tif (string == null) {\n\t\t\t\tif (bundledStrings)\n\t\t\t\t\treturn readStringJS(length)\n\t\t\t\tlet byteOffset = src.byteOffset\n\t\t\t\tlet extraction = extractStrings(position - headerLength + byteOffset, srcEnd + byteOffset, src.buffer)\n\t\t\t\tif (typeof extraction == 'string') {\n\t\t\t\t\tstring = extraction\n\t\t\t\t\tstrings = EMPTY_ARRAY\n\t\t\t\t} else {\n\t\t\t\t\tstrings = extraction\n\t\t\t\t\tstringPosition = 1\n\t\t\t\t\tsrcStringEnd = 1 // even if a utf-8 string was decoded, must indicate we are in the midst of extracted strings and can't skip strings\n\t\t\t\t\tstring = strings[0]\n\t\t\t\t\tif (string === undefined)\n\t\t\t\t\t\tthrow new Error('Unexpected end of buffer')\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet srcStringLength = string.length\n\t\t\tif (srcStringLength <= length) {\n\t\t\t\tposition += length\n\t\t\t\treturn string\n\t\t\t}\n\t\t\tsrcString = string\n\t\t\tsrcStringStart = position\n\t\t\tsrcStringEnd = position + srcStringLength\n\t\t\tposition += length\n\t\t\treturn string.slice(0, length) // we know we just want the beginning\n\t\t}\n\t}\n}\nfunction readStringJS(length) {\n\tlet result\n\tif (length < 16) {\n\t\tif (result = shortStringInJS(length))\n\t\t\treturn result\n\t}\n\tif (length > 64 && decoder)\n\t\treturn decoder.decode(src.subarray(position, position += length))\n\tconst end = position + length\n\tconst units = []\n\tresult = ''\n\twhile (position < end) {\n\t\tconst byte1 = src[position++]\n\t\tif ((byte1 & 0x80) === 0) {\n\t\t\t// 1 byte\n\t\t\tunits.push(byte1)\n\t\t} else if ((byte1 & 0xe0) === 0xc0) {\n\t\t\t// 2 bytes\n\t\t\tconst byte2 = src[position++] & 0x3f\n\t\t\tunits.push(((byte1 & 0x1f) << 6) | byte2)\n\t\t} else if ((byte1 & 0xf0) === 0xe0) {\n\t\t\t// 3 bytes\n\t\t\tconst byte2 = src[position++] & 0x3f\n\t\t\tconst byte3 = src[position++] & 0x3f\n\t\t\tunits.push(((byte1 & 0x1f) << 12) | (byte2 << 6) | byte3)\n\t\t} else if ((byte1 & 0xf8) === 0xf0) {\n\t\t\t// 4 bytes\n\t\t\tconst byte2 = src[position++] & 0x3f\n\t\t\tconst byte3 = src[position++] & 0x3f\n\t\t\tconst byte4 = src[position++] & 0x3f\n\t\t\tlet unit = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0c) | (byte3 << 0x06) | byte4\n\t\t\tif (unit > 0xffff) {\n\t\t\t\tunit -= 0x10000\n\t\t\t\tunits.push(((unit >>> 10) & 0x3ff) | 0xd800)\n\t\t\t\tunit = 0xdc00 | (unit & 0x3ff)\n\t\t\t}\n\t\t\tunits.push(unit)\n\t\t} else {\n\t\t\tunits.push(byte1)\n\t\t}\n\n\t\tif (units.length >= 0x1000) {\n\t\t\tresult += fromCharCode.apply(String, units)\n\t\t\tunits.length = 0\n\t\t}\n\t}\n\n\tif (units.length > 0) {\n\t\tresult += fromCharCode.apply(String, units)\n\t}\n\n\treturn result\n}\nexport function readString(source, start, length) {\n\tlet existingSrc = src;\n\tsrc = source;\n\tposition = start;\n\ttry {\n\t\treturn readStringJS(length);\n\t} finally {\n\t\tsrc = existingSrc;\n\t}\n}\n\nfunction readArray(length) {\n\tlet array = new Array(length)\n\tfor (let i = 0; i < length; i++) {\n\t\tarray[i] = read()\n\t}\n\tif (currentUnpackr.freezeData)\n\t\treturn Object.freeze(array)\n\treturn array\n}\n\nfunction readMap(length) {\n\tif (currentUnpackr.mapsAsObjects) {\n\t\tlet object = {}\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tlet key = readKey()\n\t\t\tif (key === '__proto__')\n\t\t\t\tkey = '__proto_';\n\t\t\tobject[key] = read()\n\t\t}\n\t\treturn object\n\t} else {\n\t\tlet map = new Map()\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tmap.set(read(), read())\n\t\t}\n\t\treturn map\n\t}\n}\n\nvar fromCharCode = String.fromCharCode\nfunction longStringInJS(length) {\n\tlet start = position\n\tlet bytes = new Array(length)\n\tfor (let i = 0; i < length; i++) {\n\t\tconst byte = src[position++];\n\t\tif ((byte & 0x80) > 0) {\n\t\t\t\tposition = start\n\t\t\t\treturn\n\t\t\t}\n\t\t\tbytes[i] = byte\n\t\t}\n\t\treturn fromCharCode.apply(String, bytes)\n}\nfunction shortStringInJS(length) {\n\tif (length < 4) {\n\t\tif (length < 2) {\n\t\t\tif (length === 0)\n\t\t\t\treturn ''\n\t\t\telse {\n\t\t\t\tlet a = src[position++]\n\t\t\t\tif ((a & 0x80) > 1) {\n\t\t\t\t\tposition -= 1\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\treturn fromCharCode(a)\n\t\t\t}\n\t\t} else {\n\t\t\tlet a = src[position++]\n\t\t\tlet b = src[position++]\n\t\t\tif ((a & 0x80) > 0 || (b & 0x80) > 0) {\n\t\t\t\tposition -= 2\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif (length < 3)\n\t\t\t\treturn fromCharCode(a, b)\n\t\t\tlet c = src[position++]\n\t\t\tif ((c & 0x80) > 0) {\n\t\t\t\tposition -= 3\n\t\t\t\treturn\n\t\t\t}\n\t\t\treturn fromCharCode(a, b, c)\n\t\t}\n\t} else {\n\t\tlet a = src[position++]\n\t\tlet b = src[position++]\n\t\tlet c = src[position++]\n\t\tlet d = src[position++]\n\t\tif ((a & 0x80) > 0 || (b & 0x80) > 0 || (c & 0x80) > 0 || (d & 0x80) > 0) {\n\t\t\tposition -= 4\n\t\t\treturn\n\t\t}\n\t\tif (length < 6) {\n\t\t\tif (length === 4)\n\t\t\t\treturn fromCharCode(a, b, c, d)\n\t\t\telse {\n\t\t\t\tlet e = src[position++]\n\t\t\t\tif ((e & 0x80) > 0) {\n\t\t\t\t\tposition -= 5\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\treturn fromCharCode(a, b, c, d, e)\n\t\t\t}\n\t\t} else if (length < 8) {\n\t\t\tlet e = src[position++]\n\t\t\tlet f = src[position++]\n\t\t\tif ((e & 0x80) > 0 || (f & 0x80) > 0) {\n\t\t\t\tposition -= 6\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif (length < 7)\n\t\t\t\treturn fromCharCode(a, b, c, d, e, f)\n\t\t\tlet g = src[position++]\n\t\t\tif ((g & 0x80) > 0) {\n\t\t\t\tposition -= 7\n\t\t\t\treturn\n\t\t\t}\n\t\t\treturn fromCharCode(a, b, c, d, e, f, g)\n\t\t} else {\n\t\t\tlet e = src[position++]\n\t\t\tlet f = src[position++]\n\t\t\tlet g = src[position++]\n\t\t\tlet h = src[position++]\n\t\t\tif ((e & 0x80) > 0 || (f & 0x80) > 0 || (g & 0x80) > 0 || (h & 0x80) > 0) {\n\t\t\t\tposition -= 8\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif (length < 10) {\n\t\t\t\tif (length === 8)\n\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h)\n\t\t\t\telse {\n\t\t\t\t\tlet i = src[position++]\n\t\t\t\t\tif ((i & 0x80) > 0) {\n\t\t\t\t\t\tposition -= 9\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i)\n\t\t\t\t}\n\t\t\t} else if (length < 12) {\n\t\t\t\tlet i = src[position++]\n\t\t\t\tlet j = src[position++]\n\t\t\t\tif ((i & 0x80) > 0 || (j & 0x80) > 0) {\n\t\t\t\t\tposition -= 10\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tif (length < 11)\n\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j)\n\t\t\t\tlet k = src[position++]\n\t\t\t\tif ((k & 0x80) > 0) {\n\t\t\t\t\tposition -= 11\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j, k)\n\t\t\t} else {\n\t\t\t\tlet i = src[position++]\n\t\t\t\tlet j = src[position++]\n\t\t\t\tlet k = src[position++]\n\t\t\t\tlet l = src[position++]\n\t\t\t\tif ((i & 0x80) > 0 || (j & 0x80) > 0 || (k & 0x80) > 0 || (l & 0x80) > 0) {\n\t\t\t\t\tposition -= 12\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tif (length < 14) {\n\t\t\t\t\tif (length === 12)\n\t\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l)\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet m = src[position++]\n\t\t\t\t\t\tif ((m & 0x80) > 0) {\n\t\t\t\t\t\t\tposition -= 13\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l, m)\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlet m = src[position++]\n\t\t\t\t\tlet n = src[position++]\n\t\t\t\t\tif ((m & 0x80) > 0 || (n & 0x80) > 0) {\n\t\t\t\t\t\tposition -= 14\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\tif (length < 15)\n\t\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l, m, n)\n\t\t\t\t\tlet o = src[position++]\n\t\t\t\t\tif ((o & 0x80) > 0) {\n\t\t\t\t\t\tposition -= 15\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction readOnlyJSString() {\n\tlet token = src[position++]\n\tlet length\n\tif (token < 0xc0) {\n\t\t// fixstr\n\t\tlength = token - 0xa0\n\t} else {\n\t\tswitch(token) {\n\t\t\tcase 0xd9:\n\t\t\t// str 8\n\t\t\t\tlength = src[position++]\n\t\t\t\tbreak\n\t\t\tcase 0xda:\n\t\t\t// str 16\n\t\t\t\tlength = dataView.getUint16(position)\n\t\t\t\tposition += 2\n\t\t\t\tbreak\n\t\t\tcase 0xdb:\n\t\t\t// str 32\n\t\t\t\tlength = dataView.getUint32(position)\n\t\t\t\tposition += 4\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\tthrow new Error('Expected string')\n\t\t}\n\t}\n\treturn readStringJS(length)\n}\n\n\nfunction readBin(length) {\n\treturn currentUnpackr.copyBuffers ?\n\t\t// specifically use the copying slice (not the node one)\n\t\tUint8Array.prototype.slice.call(src, position, position += length) :\n\t\tsrc.subarray(position, position += length)\n}\nfunction readExt(length) {\n\tlet type = src[position++]\n\tif (currentExtensions[type]) {\n\t\tlet end\n\t\treturn currentExtensions[type](src.subarray(position, end = (position += length)), (readPosition) => {\n\t\t\tposition = readPosition;\n\t\t\ttry {\n\t\t\t\treturn read();\n\t\t\t} finally {\n\t\t\t\tposition = end;\n\t\t\t}\n\t\t})\n\t}\n\telse\n\t\tthrow new Error('Unknown extension type ' + type)\n}\n\nvar keyCache = new Array(4096)\nfunction readKey() {\n\tlet length = src[position++]\n\tif (length >= 0xa0 && length < 0xc0) {\n\t\t// fixstr, potentially use key cache\n\t\tlength = length - 0xa0\n\t\tif (srcStringEnd >= position) // if it has been extracted, must use it (and faster anyway)\n\t\t\treturn srcString.slice(position - srcStringStart, (position += length) - srcStringStart)\n\t\telse if (!(srcStringEnd == 0 && srcEnd < 180))\n\t\t\treturn readFixedString(length)\n\t} else { // not cacheable, go back and do a standard read\n\t\tposition--\n\t\treturn asSafeString(read())\n\t}\n\tlet key = ((length << 5) ^ (length > 1 ? dataView.getUint16(position) : length > 0 ? src[position] : 0)) & 0xfff\n\tlet entry = keyCache[key]\n\tlet checkPosition = position\n\tlet end = position + length - 3\n\tlet chunk\n\tlet i = 0\n\tif (entry && entry.bytes == length) {\n\t\twhile (checkPosition < end) {\n\t\t\tchunk = dataView.getUint32(checkPosition)\n\t\t\tif (chunk != entry[i++]) {\n\t\t\t\tcheckPosition = 0x70000000\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcheckPosition += 4\n\t\t}\n\t\tend += 3\n\t\twhile (checkPosition < end) {\n\t\t\tchunk = src[checkPosition++]\n\t\t\tif (chunk != entry[i++]) {\n\t\t\t\tcheckPosition = 0x70000000\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\tif (checkPosition === end) {\n\t\t\tposition = checkPosition\n\t\t\treturn entry.string\n\t\t}\n\t\tend -= 3\n\t\tcheckPosition = position\n\t}\n\tentry = []\n\tkeyCache[key] = entry\n\tentry.bytes = length\n\twhile (checkPosition < end) {\n\t\tchunk = dataView.getUint32(checkPosition)\n\t\tentry.push(chunk)\n\t\tcheckPosition += 4\n\t}\n\tend += 3\n\twhile (checkPosition < end) {\n\t\tchunk = src[checkPosition++]\n\t\tentry.push(chunk)\n\t}\n\t// for small blocks, avoiding the overhead of the extract call is helpful\n\tlet string = length < 16 ? shortStringInJS(length) : longStringInJS(length)\n\tif (string != null)\n\t\treturn entry.string = string\n\treturn entry.string = readFixedString(length)\n}\n\nfunction asSafeString(property) {\n\t// protect against expensive (DoS) string conversions\n\tif (typeof property === 'string') return property;\n\tif (typeof property === 'number' || typeof property === 'boolean' || typeof property === 'bigint') return property.toString();\n\tif (property == null) return property + '';\n\tif (currentUnpackr.allowArraysInMapKeys && Array.isArray(property) && property.flat().every(item => ['string', 'number', 'boolean', 'bigint'].includes(typeof item))) {\n\t\treturn property.flat().toString();\n\t}\n\tthrow new Error(`Invalid property type for record: ${typeof property}`);\n}\n// the registration of the record definition extension (as \"r\")\nconst recordDefinition = (id, highByte) => {\n\tlet structure = read().map(asSafeString) // ensure that all keys are strings and\n\t// that the array is mutable\n\tlet firstByte = id\n\tif (highByte !== undefined) {\n\t\tid = id < 32 ? -((highByte << 5) + id) : ((highByte << 5) + id)\n\t\tstructure.highByte = highByte\n\t}\n\tlet existingStructure = currentStructures[id]\n\t// If it is a shared structure, we need to restore any changes after reading.\n\t// Also in sequential mode, we may get incomplete reads and thus errors, and we need to restore\n\t// to the state prior to an incomplete read in order to properly resume.\n\tif (existingStructure && (existingStructure.isShared || sequentialMode)) {\n\t\t(currentStructures.restoreStructures || (currentStructures.restoreStructures = []))[id] = existingStructure\n\t}\n\tcurrentStructures[id] = structure\n\tstructure.read = createStructureReader(structure, firstByte)\n\treturn structure.read()\n}\ncurrentExtensions[0] = () => {} // notepack defines extension 0 to mean undefined, so use that as the default here\ncurrentExtensions[0].noBuffer = true\n\ncurrentExtensions[0x42] = (data) => {\n\t// decode bigint\n\tlet length = data.length;\n\tlet value = BigInt(data[0] & 0x80 ? data[0] - 0x100 : data[0]);\n\tfor (let i = 1; i < length; i++) {\n\t\tvalue <<= BigInt(8);\n\t\tvalue += BigInt(data[i]);\n\t}\n\treturn value;\n}\n\nlet errors = { Error, TypeError, ReferenceError };\ncurrentExtensions[0x65] = () => {\n\tlet data = read()\n\treturn (errors[data[0]] || Error)(data[1], { cause: data[2] })\n}\n\ncurrentExtensions[0x69] = (data) => {\n\t// id extension (for structured clones)\n\tif (currentUnpackr.structuredClone === false) throw new Error('Structured clone extension is disabled')\n\tlet id = dataView.getUint32(position - 4)\n\tif (!referenceMap)\n\t\treferenceMap = new Map()\n\tlet token = src[position]\n\tlet target\n\t// TODO: handle Maps, Sets, and other types that can cycle; this is complicated, because you potentially need to read\n\t// ahead past references to record structure definitions\n\tif (token >= 0x90 && token < 0xa0 || token == 0xdc || token == 0xdd)\n\t\ttarget = []\n\telse\n\t\ttarget = {}\n\n\tlet refEntry = { target } // a placeholder object\n\treferenceMap.set(id, refEntry)\n\tlet targetProperties = read() // read the next value as the target object to id\n\tif (refEntry.used) // there is a cycle, so we have to assign properties to original target\n\t\treturn Object.assign(target, targetProperties)\n\trefEntry.target = targetProperties // the placeholder wasn't used, replace with the deserialized one\n\treturn targetProperties // no cycle, can just use the returned read object\n}\n\ncurrentExtensions[0x70] = (data) => {\n\t// pointer extension (for structured clones)\n\tif (currentUnpackr.structuredClone === false) throw new Error('Structured clone extension is disabled')\n\tlet id = dataView.getUint32(position - 4)\n\tlet refEntry = referenceMap.get(id)\n\trefEntry.used = true\n\treturn refEntry.target\n}\n\ncurrentExtensions[0x73] = () => new Set(read())\n\nexport const typedArrays = ['Int8','Uint8','Uint8Clamped','Int16','Uint16','Int32','Uint32','Float32','Float64','BigInt64','BigUint64'].map(type => type + 'Array')\n\nlet glbl = typeof globalThis === 'object' ? globalThis : window;\ncurrentExtensions[0x74] = (data) => {\n\tlet typeCode = data[0]\n\tlet typedArrayName = typedArrays[typeCode]\n\tif (!typedArrayName) {\n\t\tif (typeCode === 16) {\n\t\t\tlet ab = new ArrayBuffer(data.length - 1)\n\t\t\tlet u8 = new Uint8Array(ab)\n\t\t\tu8.set(data.subarray(1))\n\t\t\treturn ab;\n\t\t}\n\t\tthrow new Error('Could not find typed array for code ' + typeCode)\n\t}\n\t// we have to always slice/copy here to get a new ArrayBuffer that is word/byte aligned\n\treturn new glbl[typedArrayName](Uint8Array.prototype.slice.call(data, 1).buffer)\n}\ncurrentExtensions[0x78] = () => {\n\tlet data = read()\n\treturn new RegExp(data[0], data[1])\n}\nconst TEMP_BUNDLE = []\ncurrentExtensions[0x62] = (data) => {\n\tlet dataSize = (data[0] << 24) + (data[1] << 16) + (data[2] << 8) + data[3]\n\tlet dataPosition = position\n\tposition += dataSize - data.length\n\tbundledStrings = TEMP_BUNDLE\n\tbundledStrings = [readOnlyJSString(), readOnlyJSString()]\n\tbundledStrings.position0 = 0\n\tbundledStrings.position1 = 0\n\tbundledStrings.postBundlePosition = position\n\tposition = dataPosition\n\treturn read()\n}\n\ncurrentExtensions[0xff] = (data) => {\n\t// 32-bit date extension\n\tif (data.length == 4)\n\t\treturn new Date((data[0] * 0x1000000 + (data[1] << 16) + (data[2] << 8) + data[3]) * 1000)\n\telse if (data.length == 8)\n\t\treturn new Date(\n\t\t\t((data[0] << 22) + (data[1] << 14) + (data[2] << 6) + (data[3] >> 2)) / 1000000 +\n\t\t\t((data[3] & 0x3) * 0x100000000 + data[4] * 0x1000000 + (data[5] << 16) + (data[6] << 8) + data[7]) * 1000)\n\telse if (data.length == 12)// TODO: Implement support for negative\n\t\treturn new Date(\n\t\t\t((data[0] << 24) + (data[1] << 16) + (data[2] << 8) + data[3]) / 1000000 +\n\t\t\t(((data[4] & 0x80) ? -0x1000000000000 : 0) + data[6] * 0x10000000000 + data[7] * 0x100000000 + data[8] * 0x1000000 + (data[9] << 16) + (data[10] << 8) + data[11]) * 1000)\n\telse\n\t\treturn new Date('invalid')\n} // notepack defines extension 0 to mean undefined, so use that as the default here\n// registration of bulk record definition?\n// currentExtensions[0x52] = () =>\n\nfunction saveState(callback) {\n\tif (onSaveState)\n\t\tonSaveState();\n\tlet savedSrcEnd = srcEnd\n\tlet savedPosition = position\n\tlet savedStringPosition = stringPosition\n\tlet savedSrcStringStart = srcStringStart\n\tlet savedSrcStringEnd = srcStringEnd\n\tlet savedSrcString = srcString\n\tlet savedStrings = strings\n\tlet savedReferenceMap = referenceMap\n\tlet savedBundledStrings = bundledStrings\n\n\t// TODO: We may need to revisit this if we do more external calls to user code (since it could be slow)\n\tlet savedSrc = new Uint8Array(src.slice(0, srcEnd)) // we copy the data in case it changes while external data is processed\n\tlet savedStructures = currentStructures\n\tlet savedStructuresContents = currentStructures.slice(0, currentStructures.length)\n\tlet savedPackr = currentUnpackr\n\tlet savedSequentialMode = sequentialMode\n\tlet value = callback()\n\tsrcEnd = savedSrcEnd\n\tposition = savedPosition\n\tstringPosition = savedStringPosition\n\tsrcStringStart = savedSrcStringStart\n\tsrcStringEnd = savedSrcStringEnd\n\tsrcString = savedSrcString\n\tstrings = savedStrings\n\treferenceMap = savedReferenceMap\n\tbundledStrings = savedBundledStrings\n\tsrc = savedSrc\n\tsequentialMode = savedSequentialMode\n\tcurrentStructures = savedStructures\n\tcurrentStructures.splice(0, currentStructures.length, ...savedStructuresContents)\n\tcurrentUnpackr = savedPackr\n\tdataView = new DataView(src.buffer, src.byteOffset, src.byteLength)\n\treturn value\n}\nexport function clearSource() {\n\tsrc = null\n\treferenceMap = null\n\tcurrentStructures = null\n}\n\nexport function addExtension(extension) {\n\tif (extension.unpack)\n\t\tcurrentExtensions[extension.type] = extension.unpack\n\telse\n\t\tcurrentExtensions[extension.type] = extension\n}\n\nexport const mult10 = new Array(147) // this is a table matching binary exponents to the multiplier to determine significant digit rounding\nfor (let i = 0; i < 256; i++) {\n\tmult10[i] = +('1e' + Math.floor(45.15 - i * 0.30103))\n}\nexport const Decoder = Unpackr\nvar defaultUnpackr = new Unpackr({ useRecords: false })\nexport const unpack = defaultUnpackr.unpack\nexport const unpackMultiple = defaultUnpackr.unpackMultiple\nexport const decode = defaultUnpackr.unpack\nexport const FLOAT32_OPTIONS = {\n\tNEVER: 0,\n\tALWAYS: 1,\n\tDECIMAL_ROUND: 3,\n\tDECIMAL_FIT: 4\n}\nlet f32Array = new Float32Array(1)\nlet u8Array = new Uint8Array(f32Array.buffer, 0, 4)\nexport function roundFloat32(float32Number) {\n\tf32Array[0] = float32Number\n\tlet multiplier = mult10[((u8Array[3] & 0x7f) << 1) | (u8Array[2] >> 7)]\n\treturn ((multiplier * float32Number + (float32Number > 0 ? 0.5 : -0.5)) >> 0) / multiplier\n}\nexport function setReadStruct(updatedReadStruct, loadedStructs, saveState) {\n\treadStruct = updatedReadStruct;\n\tonLoadedStructures = loadedStructs;\n\tonSaveState = saveState;\n}\n","import { Unpackr, mult10, C1Type, typedArrays, addExtension as unpackAddExtension } from './unpack.js'\nlet textEncoder\ntry {\n\ttextEncoder = new TextEncoder()\n} catch (error) {}\nlet extensions, extensionClasses\nconst hasNodeBuffer = typeof Buffer !== 'undefined'\nconst ByteArrayAllocate = hasNodeBuffer ?\n\tfunction(length) { return Buffer.allocUnsafeSlow(length) } : Uint8Array\nconst ByteArray = hasNodeBuffer ? Buffer : Uint8Array\nconst MAX_BUFFER_SIZE = hasNodeBuffer ? 0x100000000 : 0x7fd00000\nlet target, keysTarget\nlet targetView\nlet position = 0\nlet safeEnd\nlet bundledStrings = null\nlet writeStructSlots\nconst MAX_BUNDLE_SIZE = 0x5500 // maximum characters such that the encoded bytes fits in 16 bits.\nconst hasNonLatin = /[\\u0080-\\uFFFF]/\nexport const RECORD_SYMBOL = Symbol('record-id')\nexport class Packr extends Unpackr {\n\tconstructor(options) {\n\t\tsuper(options)\n\t\tthis.offset = 0\n\t\tlet typeBuffer\n\t\tlet start\n\t\tlet hasSharedUpdate\n\t\tlet structures\n\t\tlet referenceMap\n\t\tlet encodeUtf8 = ByteArray.prototype.utf8Write ? function(string, position) {\n\t\t\treturn target.utf8Write(string, position, target.byteLength - position)\n\t\t} : (textEncoder && textEncoder.encodeInto) ?\n\t\t\tfunction(string, position) {\n\t\t\t\treturn textEncoder.encodeInto(string, target.subarray(position)).written\n\t\t\t} : false\n\n\t\tlet packr = this\n\t\tif (!options)\n\t\t\toptions = {}\n\t\tlet isSequential = options && options.sequential\n\t\tlet hasSharedStructures = options.structures || options.saveStructures\n\t\tlet maxSharedStructures = options.maxSharedStructures\n\t\tif (maxSharedStructures == null)\n\t\t\tmaxSharedStructures = hasSharedStructures ? 32 : 0\n\t\tif (maxSharedStructures > 8160)\n\t\t\tthrow new Error('Maximum maxSharedStructure is 8160')\n\t\tif (options.structuredClone && options.moreTypes == undefined) {\n\t\t\tthis.moreTypes = true\n\t\t}\n\t\tlet maxOwnStructures = options.maxOwnStructures\n\t\tif (maxOwnStructures == null)\n\t\t\tmaxOwnStructures = hasSharedStructures ? 32 : 64\n\t\tif (!this.structures && options.useRecords != false)\n\t\t\tthis.structures = []\n\t\t// two byte record ids for shared structures\n\t\tlet useTwoByteRecords = maxSharedStructures > 32 || (maxOwnStructures + maxSharedStructures > 64)\n\t\tlet sharedLimitId = maxSharedStructures + 0x40\n\t\tlet maxStructureId = maxSharedStructures + maxOwnStructures + 0x40\n\t\tif (maxStructureId > 8256) {\n\t\t\tthrow new Error('Maximum maxSharedStructure + maxOwnStructure is 8192')\n\t\t}\n\t\tlet recordIdsToRemove = []\n\t\tlet transitionsCount = 0\n\t\tlet serializationsSinceTransitionRebuild = 0\n\n\t\tthis.pack = this.encode = function(value, encodeOptions) {\n\t\t\tif (!target) {\n\t\t\t\ttarget = new ByteArrayAllocate(8192)\n\t\t\t\ttargetView = target.dataView || (target.dataView = new DataView(target.buffer, 0, 8192))\n\t\t\t\tposition = 0\n\t\t\t}\n\t\t\tsafeEnd = target.length - 10\n\t\t\tif (safeEnd - position < 0x800) {\n\t\t\t\t// don't start too close to the end,\n\t\t\t\ttarget = new ByteArrayAllocate(target.length)\n\t\t\t\ttargetView = target.dataView || (target.dataView = new DataView(target.buffer, 0, target.length))\n\t\t\t\tsafeEnd = target.length - 10\n\t\t\t\tposition = 0\n\t\t\t} else\n\t\t\t\tposition = (position + 7) & 0x7ffffff8 // Word align to make any future copying of this buffer faster\n\t\t\tstart = position\n\t\t\tif (encodeOptions & RESERVE_START_SPACE) position += (encodeOptions & 0xff)\n\t\t\treferenceMap = packr.structuredClone ? new Map() : null\n\t\t\tif (packr.bundleStrings && typeof value !== 'string') {\n\t\t\t\tbundledStrings = []\n\t\t\t\tbundledStrings.size = Infinity // force a new bundle start on first string\n\t\t\t} else\n\t\t\t\tbundledStrings = null\n\t\t\tstructures = packr.structures\n\t\t\tif (structures) {\n\t\t\t\tif (structures.uninitialized)\n\t\t\t\t\tstructures = packr._mergeStructures(packr.getStructures())\n\t\t\t\tlet sharedLength = structures.sharedLength || 0\n\t\t\t\tif (sharedLength > maxSharedStructures) {\n\t\t\t\t\t//if (maxSharedStructures <= 32 && structures.sharedLength > 32) // TODO: could support this, but would need to update the limit ids\n\t\t\t\t\tthrow new Error('Shared structures is larger than maximum shared structures, try increasing maxSharedStructures to ' + structures.sharedLength)\n\t\t\t\t}\n\t\t\t\tif (!structures.transitions) {\n\t\t\t\t\t// rebuild our structure transitions\n\t\t\t\t\tstructures.transitions = Object.create(null)\n\t\t\t\t\tfor (let i = 0; i < sharedLength; i++) {\n\t\t\t\t\t\tlet keys = structures[i]\n\t\t\t\t\t\tif (!keys)\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\tlet nextTransition, transition = structures.transitions\n\t\t\t\t\t\tfor (let j = 0, l = keys.length; j < l; j++) {\n\t\t\t\t\t\t\tlet key = keys[j]\n\t\t\t\t\t\t\tnextTransition = transition[key]\n\t\t\t\t\t\t\tif (!nextTransition) {\n\t\t\t\t\t\t\t\tnextTransition = transition[key] = Object.create(null)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttransition = nextTransition\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttransition[RECORD_SYMBOL] = i + 0x40\n\t\t\t\t\t}\n\t\t\t\t\tthis.lastNamedStructuresLength = sharedLength\n\t\t\t\t}\n\t\t\t\tif (!isSequential) {\n\t\t\t\t\tstructures.nextId = sharedLength + 0x40\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (hasSharedUpdate)\n\t\t\t\thasSharedUpdate = false\n\t\t\tlet encodingError;\n\t\t\ttry {\n\t\t\t\tif (packr.randomAccessStructure && value && value.constructor && value.constructor === Object)\n\t\t\t\t\twriteStruct(value);\n\t\t\t\telse\n\t\t\t\t\tpack(value)\n\t\t\t\tlet lastBundle = bundledStrings;\n\t\t\t\tif (bundledStrings)\n\t\t\t\t\twriteBundles(start, pack, 0)\n\t\t\t\tif (referenceMap && referenceMap.idsToInsert) {\n\t\t\t\t\tlet idsToInsert = referenceMap.idsToInsert.sort((a, b) => a.offset > b.offset ? 1 : -1);\n\t\t\t\t\tlet i = idsToInsert.length;\n\t\t\t\t\tlet incrementPosition = -1;\n\t\t\t\t\twhile (lastBundle && i > 0) {\n\t\t\t\t\t\tlet insertionPoint = idsToInsert[--i].offset + start;\n\t\t\t\t\t\tif (insertionPoint < (lastBundle.stringsPosition + start) && incrementPosition === -1)\n\t\t\t\t\t\t\tincrementPosition = 0;\n\t\t\t\t\t\tif (insertionPoint > (lastBundle.position + start)) {\n\t\t\t\t\t\t\tif (incrementPosition >= 0)\n\t\t\t\t\t\t\t\tincrementPosition += 6;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (incrementPosition >= 0) {\n\t\t\t\t\t\t\t\t// update the bundle reference now\n\t\t\t\t\t\t\t\ttargetView.setUint32(lastBundle.position + start,\n\t\t\t\t\t\t\t\t\ttargetView.getUint32(lastBundle.position + start) + incrementPosition)\n\t\t\t\t\t\t\t\tincrementPosition = -1; // reset\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlastBundle = lastBundle.previous;\n\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (incrementPosition >= 0 && lastBundle) {\n\t\t\t\t\t\t// update the bundle reference now\n\t\t\t\t\t\ttargetView.setUint32(lastBundle.position + start,\n\t\t\t\t\t\t\ttargetView.getUint32(lastBundle.position + start) + incrementPosition)\n\t\t\t\t\t}\n\t\t\t\t\tposition += idsToInsert.length * 6;\n\t\t\t\t\tif (position > safeEnd)\n\t\t\t\t\t\tmakeRoom(position)\n\t\t\t\t\tpackr.offset = position\n\t\t\t\t\tlet serialized = insertIds(target.subarray(start, position), idsToInsert)\n\t\t\t\t\treferenceMap = null\n\t\t\t\t\treturn serialized\n\t\t\t\t}\n\t\t\t\tpackr.offset = position // update the offset so next serialization doesn't write over our buffer, but can continue writing to same buffer sequentially\n\t\t\t\tif (encodeOptions & REUSE_BUFFER_MODE) {\n\t\t\t\t\ttarget.start = start\n\t\t\t\t\ttarget.end = position\n\t\t\t\t\treturn target\n\t\t\t\t}\n\t\t\t\treturn target.subarray(start, position) // position can change if we call pack again in saveStructures, so we get the buffer now\n\t\t\t} catch(error) {\n\t\t\t\tencodingError = error;\n\t\t\t\tthrow error;\n\t\t\t} finally {\n\t\t\t\tif (structures) {\n\t\t\t\t\tresetStructures();\n\t\t\t\t\tif (hasSharedUpdate && packr.saveStructures) {\n\t\t\t\t\t\tlet sharedLength = structures.sharedLength || 0\n\t\t\t\t\t\t// we can't rely on start/end with REUSE_BUFFER_MODE since they will (probably) change when we save\n\t\t\t\t\t\tlet returnBuffer = target.subarray(start, position)\n\t\t\t\t\t\tlet newSharedData = prepareStructures(structures, packr);\n\t\t\t\t\t\tif (!encodingError) { // TODO: If there is an encoding error, should make the structures as uninitialized so they get rebuilt next time\n\t\t\t\t\t\t\tif (packr.saveStructures(newSharedData, newSharedData.isCompatible) === false) {\n\t\t\t\t\t\t\t\t// get updated structures and try again if the update failed\n\t\t\t\t\t\t\t\treturn packr.pack(value, encodeOptions)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tpackr.lastNamedStructuresLength = sharedLength\n\t\t\t\t\t\t\t// don't keep large buffers around\n\t\t\t\t\t\t\tif (target.length > 0x40000000) target = null\n\t\t\t\t\t\t\treturn returnBuffer\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// don't keep large buffers around, they take too much memory and cause problems (limit at 1GB)\n\t\t\t\tif (target.length > 0x40000000) target = null\n\t\t\t\tif (encodeOptions & RESET_BUFFER_MODE)\n\t\t\t\t\tposition = start\n\t\t\t}\n\t\t}\n\t\tconst resetStructures = () => {\n\t\t\tif (serializationsSinceTransitionRebuild < 10)\n\t\t\t\tserializationsSinceTransitionRebuild++\n\t\t\tlet sharedLength = structures.sharedLength || 0\n\t\t\tif (structures.length > sharedLength && !isSequential)\n\t\t\t\tstructures.length = sharedLength\n\t\t\tif (transitionsCount > 10000) {\n\t\t\t\t// force a rebuild occasionally after a lot of transitions so it can get cleaned up\n\t\t\t\tstructures.transitions = null\n\t\t\t\tserializationsSinceTransitionRebuild = 0\n\t\t\t\ttransitionsCount = 0\n\t\t\t\tif (recordIdsToRemove.length > 0)\n\t\t\t\t\trecordIdsToRemove = []\n\t\t\t} else if (recordIdsToRemove.length > 0 && !isSequential) {\n\t\t\t\tfor (let i = 0, l = recordIdsToRemove.length; i < l; i++) {\n\t\t\t\t\trecordIdsToRemove[i][RECORD_SYMBOL] = 0\n\t\t\t\t}\n\t\t\t\trecordIdsToRemove = []\n\t\t\t}\n\t\t}\n\t\tconst packArray = (value) => {\n\t\t\tvar length = value.length\n\t\t\tif (length < 0x10) {\n\t\t\t\ttarget[position++] = 0x90 | length\n\t\t\t} else if (length < 0x10000) {\n\t\t\t\ttarget[position++] = 0xdc\n\t\t\t\ttarget[position++] = length >> 8\n\t\t\t\ttarget[position++] = length & 0xff\n\t\t\t} else {\n\t\t\t\ttarget[position++] = 0xdd\n\t\t\t\ttargetView.setUint32(position, length)\n\t\t\t\tposition += 4\n\t\t\t}\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tpack(value[i])\n\t\t\t}\n\t\t}\n\t\tconst pack = (value) => {\n\t\t\tif (position > safeEnd)\n\t\t\t\ttarget = makeRoom(position)\n\n\t\t\tvar type = typeof value\n\t\t\tvar length\n\t\t\tif (type === 'string') {\n\t\t\t\tlet strLength = value.length\n\t\t\t\tif (bundledStrings && strLength >= 4 && strLength < 0x1000) {\n\t\t\t\t\tif ((bundledStrings.size += strLength) > MAX_BUNDLE_SIZE) {\n\t\t\t\t\t\tlet extStart\n\t\t\t\t\t\tlet maxBytes = (bundledStrings[0] ? bundledStrings[0].length * 3 + bundledStrings[1].length : 0) + 10\n\t\t\t\t\t\tif (position + maxBytes > safeEnd)\n\t\t\t\t\t\t\ttarget = makeRoom(position + maxBytes)\n\t\t\t\t\t\tlet lastBundle\n\t\t\t\t\t\tif (bundledStrings.position) { // here we use the 0x62 extension to write the last bundle and reserve space for the reference pointer to the next/current bundle\n\t\t\t\t\t\t\tlastBundle = bundledStrings\n\t\t\t\t\t\t\ttarget[position] = 0xc8 // ext 16\n\t\t\t\t\t\t\tposition += 3 // reserve for the writing bundle size\n\t\t\t\t\t\t\ttarget[position++] = 0x62 // 'b'\n\t\t\t\t\t\t\textStart = position - start\n\t\t\t\t\t\t\tposition += 4 // reserve for writing bundle reference\n\t\t\t\t\t\t\twriteBundles(start, pack, 0) // write the last bundles\n\t\t\t\t\t\t\ttargetView.setUint16(extStart + start - 3, position - start - extStart)\n\t\t\t\t\t\t} else { // here we use the 0x62 extension just to reserve the space for the reference pointer to the bundle (will be updated once the bundle is written)\n\t\t\t\t\t\t\ttarget[position++] = 0xd6 // fixext 4\n\t\t\t\t\t\t\ttarget[position++] = 0x62 // 'b'\n\t\t\t\t\t\t\textStart = position - start\n\t\t\t\t\t\t\tposition += 4 // reserve for writing bundle reference\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbundledStrings = ['', ''] // create new ones\n\t\t\t\t\t\tbundledStrings.previous = lastBundle;\n\t\t\t\t\t\tbundledStrings.size = 0\n\t\t\t\t\t\tbundledStrings.position = extStart\n\t\t\t\t\t}\n\t\t\t\t\tlet twoByte = hasNonLatin.test(value)\n\t\t\t\t\tbundledStrings[twoByte ? 0 : 1] += value\n\t\t\t\t\ttarget[position++] = 0xc1\n\t\t\t\t\tpack(twoByte ? -strLength : strLength);\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tlet headerSize\n\t\t\t\t// first we estimate the header size, so we can write to the correct location\n\t\t\t\tif (strLength < 0x20) {\n\t\t\t\t\theaderSize = 1\n\t\t\t\t} else if (strLength < 0x100) {\n\t\t\t\t\theaderSize = 2\n\t\t\t\t} else if (strLength < 0x10000) {\n\t\t\t\t\theaderSize = 3\n\t\t\t\t} else {\n\t\t\t\t\theaderSize = 5\n\t\t\t\t}\n\t\t\t\tlet maxBytes = strLength * 3\n\t\t\t\tif (position + maxBytes > safeEnd)\n\t\t\t\t\ttarget = makeRoom(position + maxBytes)\n\n\t\t\t\tif (strLength < 0x40 || !encodeUtf8) {\n\t\t\t\t\tlet i, c1, c2, strPosition = position + headerSize\n\t\t\t\t\tfor (i = 0; i < strLength; i++) {\n\t\t\t\t\t\tc1 = value.charCodeAt(i)\n\t\t\t\t\t\tif (c1 < 0x80) {\n\t\t\t\t\t\t\ttarget[strPosition++] = c1\n\t\t\t\t\t\t} else if (c1 < 0x800) {\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 >> 6 | 0xc0\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 & 0x3f | 0x80\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t(c1 & 0xfc00) === 0xd800 &&\n\t\t\t\t\t\t\t((c2 = value.charCodeAt(i + 1)) & 0xfc00) === 0xdc00\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tc1 = 0x10000 + ((c1 & 0x03ff) << 10) + (c2 & 0x03ff)\n\t\t\t\t\t\t\ti++\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 >> 18 | 0xf0\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 >> 12 & 0x3f | 0x80\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 >> 6 & 0x3f | 0x80\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 & 0x3f | 0x80\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 >> 12 | 0xe0\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 >> 6 & 0x3f | 0x80\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 & 0x3f | 0x80\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tlength = strPosition - position - headerSize\n\t\t\t\t} else {\n\t\t\t\t\tlength = encodeUtf8(value, position + headerSize)\n\t\t\t\t}\n\n\t\t\t\tif (length < 0x20) {\n\t\t\t\t\ttarget[position++] = 0xa0 | length\n\t\t\t\t} else if (length < 0x100) {\n\t\t\t\t\tif (headerSize < 2) {\n\t\t\t\t\t\ttarget.copyWithin(position + 2, position + 1, position + 1 + length)\n\t\t\t\t\t}\n\t\t\t\t\ttarget[position++] = 0xd9\n\t\t\t\t\ttarget[position++] = length\n\t\t\t\t} else if (length < 0x10000) {\n\t\t\t\t\tif (headerSize < 3) {\n\t\t\t\t\t\ttarget.copyWithin(position + 3, position + 2, position + 2 + length)\n\t\t\t\t\t}\n\t\t\t\t\ttarget[position++] = 0xda\n\t\t\t\t\ttarget[position++] = length >> 8\n\t\t\t\t\ttarget[position++] = length & 0xff\n\t\t\t\t} else {\n\t\t\t\t\tif (headerSize < 5) {\n\t\t\t\t\t\ttarget.copyWithin(position + 5, position + 3, position + 3 + length)\n\t\t\t\t\t}\n\t\t\t\t\ttarget[position++] = 0xdb\n\t\t\t\t\ttargetView.setUint32(position, length)\n\t\t\t\t\tposition += 4\n\t\t\t\t}\n\t\t\t\tposition += length\n\t\t\t} else if (type === 'number') {\n\t\t\t\tif (value >>> 0 === value) {// positive integer, 32-bit or less\n\t\t\t\t\t// positive uint\n\t\t\t\t\tif (value < 0x20 || (value < 0x80 && this.useRecords === false) || (value < 0x40 && !this.randomAccessStructure)) {\n\t\t\t\t\t\ttarget[position++] = value\n\t\t\t\t\t} else if (value < 0x100) {\n\t\t\t\t\t\ttarget[position++] = 0xcc\n\t\t\t\t\t\ttarget[position++] = value\n\t\t\t\t\t} else if (value < 0x10000) {\n\t\t\t\t\t\ttarget[position++] = 0xcd\n\t\t\t\t\t\ttarget[position++] = value >> 8\n\t\t\t\t\t\ttarget[position++] = value & 0xff\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttarget[position++] = 0xce\n\t\t\t\t\t\ttargetView.setUint32(position, value)\n\t\t\t\t\t\tposition += 4\n\t\t\t\t\t}\n\t\t\t\t} else if (value >> 0 === value) { // negative integer\n\t\t\t\t\tif (value >= -0x20) {\n\t\t\t\t\t\ttarget[position++] = 0x100 + value\n\t\t\t\t\t} else if (value >= -0x80) {\n\t\t\t\t\t\ttarget[position++] = 0xd0\n\t\t\t\t\t\ttarget[position++] = value + 0x100\n\t\t\t\t\t} else if (value >= -0x8000) {\n\t\t\t\t\t\ttarget[position++] = 0xd1\n\t\t\t\t\t\ttargetView.setInt16(position, value)\n\t\t\t\t\t\tposition += 2\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttarget[position++] = 0xd2\n\t\t\t\t\t\ttargetView.setInt32(position, value)\n\t\t\t\t\t\tposition += 4\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlet useFloat32\n\t\t\t\t\tif ((useFloat32 = this.useFloat32) > 0 && value < 0x100000000 && value >= -0x80000000) {\n\t\t\t\t\t\ttarget[position++] = 0xca\n\t\t\t\t\t\ttargetView.setFloat32(position, value)\n\t\t\t\t\t\tlet xShifted\n\t\t\t\t\t\tif (useFloat32 < 4 ||\n\t\t\t\t\t\t\t\t// this checks for rounding of numbers that were encoded in 32-bit float to nearest significant decimal digit that could be preserved\n\t\t\t\t\t\t\t\t((xShifted = value * mult10[((target[position] & 0x7f) << 1) | (target[position + 1] >> 7)]) >> 0) === xShifted) {\n\t\t\t\t\t\t\tposition += 4\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t} else\n\t\t\t\t\t\t\tposition-- // move back into position for writing a double\n\t\t\t\t\t}\n\t\t\t\t\ttarget[position++] = 0xcb\n\t\t\t\t\ttargetView.setFloat64(position, value)\n\t\t\t\t\tposition += 8\n\t\t\t\t}\n\t\t\t} else if (type === 'object' || type === 'function') {\n\t\t\t\tif (!value)\n\t\t\t\t\ttarget[position++] = 0xc0\n\t\t\t\telse {\n\t\t\t\t\tif (referenceMap) {\n\t\t\t\t\t\tlet referee = referenceMap.get(value)\n\t\t\t\t\t\tif (referee) {\n\t\t\t\t\t\t\tif (!referee.id) {\n\t\t\t\t\t\t\t\tlet idsToInsert = referenceMap.idsToInsert || (referenceMap.idsToInsert = [])\n\t\t\t\t\t\t\t\treferee.id = idsToInsert.push(referee)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttarget[position++] = 0xd6 // fixext 4\n\t\t\t\t\t\t\ttarget[position++] = 0x70 // \"p\" for pointer\n\t\t\t\t\t\t\ttargetView.setUint32(position, referee.id)\n\t\t\t\t\t\t\tposition += 4\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t} else\n\t\t\t\t\t\t\treferenceMap.set(value, { offset: position - start })\n\t\t\t\t\t}\n\t\t\t\t\tlet constructor = value.constructor\n\t\t\t\t\tif (constructor === Object) {\n\t\t\t\t\t\twriteObject(value)\n\t\t\t\t\t} else if (constructor === Array) {\n\t\t\t\t\t\tpackArray(value)\n\t\t\t\t\t} else if (constructor === Map) {\n\t\t\t\t\t\tif (this.mapAsEmptyObject) target[position++] = 0x80\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tlength = value.size\n\t\t\t\t\t\t\tif (length < 0x10) {\n\t\t\t\t\t\t\t\ttarget[position++] = 0x80 | length\n\t\t\t\t\t\t\t} else if (length < 0x10000) {\n\t\t\t\t\t\t\t\ttarget[position++] = 0xde\n\t\t\t\t\t\t\t\ttarget[position++] = length >> 8\n\t\t\t\t\t\t\t\ttarget[position++] = length & 0xff\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttarget[position++] = 0xdf\n\t\t\t\t\t\t\t\ttargetView.setUint32(position, length)\n\t\t\t\t\t\t\t\tposition += 4\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfor (let [key, entryValue] of value) {\n\t\t\t\t\t\t\t\tpack(key)\n\t\t\t\t\t\t\t\tpack(entryValue)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (let i = 0, l = extensions.length; i < l; i++) {\n\t\t\t\t\t\t\tlet extensionClass = extensionClasses[i]\n\t\t\t\t\t\t\tif (value instanceof extensionClass) {\n\t\t\t\t\t\t\t\tlet extension = extensions[i]\n\t\t\t\t\t\t\t\tif (extension.write) {\n\t\t\t\t\t\t\t\t\tif (extension.type) {\n\t\t\t\t\t\t\t\t\t\ttarget[position++] = 0xd4 // one byte \"tag\" extension\n\t\t\t\t\t\t\t\t\t\ttarget[position++] = extension.type\n\t\t\t\t\t\t\t\t\t\ttarget[position++] = 0\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tlet writeResult = extension.write.call(this, value)\n\t\t\t\t\t\t\t\t\tif (writeResult === value) { // avoid infinite recursion\n\t\t\t\t\t\t\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\t\t\t\t\t\t\tpackArray(value)\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\twriteObject(value)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tpack(writeResult)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tlet currentTarget = target\n\t\t\t\t\t\t\t\tlet currentTargetView = targetView\n\t\t\t\t\t\t\t\tlet currentPosition = position\n\t\t\t\t\t\t\t\ttarget = null\n\t\t\t\t\t\t\t\tlet result\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tresult = extension.pack.call(this, value, (size) => {\n\t\t\t\t\t\t\t\t\t\t// restore target and use it\n\t\t\t\t\t\t\t\t\t\ttarget = currentTarget\n\t\t\t\t\t\t\t\t\t\tcurrentTarget = null\n\t\t\t\t\t\t\t\t\t\tposition += size\n\t\t\t\t\t\t\t\t\t\tif (position > safeEnd)\n\t\t\t\t\t\t\t\t\t\t\tmakeRoom(position)\n\t\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t\ttarget, targetView, position: position - size\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}, pack)\n\t\t\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\t\t\t// restore current target information (unless already restored)\n\t\t\t\t\t\t\t\t\tif (currentTarget) {\n\t\t\t\t\t\t\t\t\t\ttarget = currentTarget\n\t\t\t\t\t\t\t\t\t\ttargetView = currentTargetView\n\t\t\t\t\t\t\t\t\t\tposition = currentPosition\n\t\t\t\t\t\t\t\t\t\tsafeEnd = target.length - 10\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (result) {\n\t\t\t\t\t\t\t\t\tif (result.length + position > safeEnd)\n\t\t\t\t\t\t\t\t\t\tmakeRoom(result.length + position)\n\t\t\t\t\t\t\t\t\tposition = writeExtensionData(result, target, position, extension.type)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// check isArray after extensions, because extensions can extend Array\n\t\t\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\t\t\tpackArray(value)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// use this as an alternate mechanism for expressing how to serialize\n\t\t\t\t\t\t\tif (value.toJSON) {\n\t\t\t\t\t\t\t\tconst json = value.toJSON()\n\t\t\t\t\t\t\t\t// if for some reason value.toJSON returns itself it'll loop forever\n\t\t\t\t\t\t\t\tif (json !== value)\n\t\t\t\t\t\t\t\t\treturn pack(json)\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// if there is a writeFunction, use it, otherwise just encode as undefined\n\t\t\t\t\t\t\tif (type === 'function')\n\t\t\t\t\t\t\t\treturn pack(this.writeFunction && this.writeFunction(value));\n\n\t\t\t\t\t\t\t// no extension found, write as plain object\n\t\t\t\t\t\t\twriteObject(value)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (type === 'boolean') {\n\t\t\t\ttarget[position++] = value ? 0xc3 : 0xc2\n\t\t\t} else if (type === 'bigint') {\n\t\t\t\tif (value < (BigInt(1)<<BigInt(63)) && value >= -(BigInt(1)<<BigInt(63))) {\n\t\t\t\t\t// use a signed int as long as it fits\n\t\t\t\t\ttarget[position++] = 0xd3\n\t\t\t\t\ttargetView.setBigInt64(position, value)\n\t\t\t\t} else if (value < (BigInt(1)<<BigInt(64)) && value > 0) {\n\t\t\t\t\t// if we can fit an unsigned int, use that\n\t\t\t\t\ttarget[position++] = 0xcf\n\t\t\t\t\ttargetView.setBigUint64(position, value)\n\t\t\t\t} else {\n\t\t\t\t\t// overflow\n\t\t\t\t\tif (this.largeBigIntToFloat) {\n\t\t\t\t\t\ttarget[position++] = 0xcb\n\t\t\t\t\t\ttargetView.setFloat64(position, Number(value))\n\t\t\t\t\t} else if (this.largeBigIntToString) {\n\t\t\t\t\t\treturn pack(value.toString());\n\t\t\t\t\t} else if (this.useBigIntExtension && value < BigInt(2)**BigInt(1023) && value > -(BigInt(2)**BigInt(1023))) {\n\t\t\t\t\t\ttarget[position++] = 0xc7\n\t\t\t\t\t\tposition++;\n\t\t\t\t\t\ttarget[position++] = 0x42 // \"B\" for BigInt\n\t\t\t\t\t\tlet bytes = [];\n\t\t\t\t\t\tlet alignedSign;\n\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\tlet byte = value & BigInt(0xff);\n\t\t\t\t\t\t\talignedSign = (byte & BigInt(0x80)) === (value < BigInt(0) ? BigInt(0x80) : BigInt(0));\n\t\t\t\t\t\t\tbytes.push(byte);\n\t\t\t\t\t\t\tvalue >>= BigInt(8);\n\t\t\t\t\t\t} while (!((value === BigInt(0) || value === BigInt(-1)) && alignedSign));\n\t\t\t\t\t\ttarget[position-2] = bytes.length;\n\t\t\t\t\t\tfor (let i = bytes.length; i > 0;) {\n\t\t\t\t\t\t\ttarget[position++] = Number(bytes[--i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new RangeError(value + ' was too large to fit in MessagePack 64-bit integer format, use' +\n\t\t\t\t\t\t\t' useBigIntExtension, or set largeBigIntToFloat to convert to float-64, or set' +\n\t\t\t\t\t\t\t' largeBigIntToString to convert to string')\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tposition += 8\n\t\t\t} else if (type === 'undefined') {\n\t\t\t\tif (this.encodeUndefinedAsNil)\n\t\t\t\t\ttarget[position++] = 0xc0\n\t\t\t\telse {\n\t\t\t\t\ttarget[position++] = 0xd4 // a number of implementations use fixext1 with type 0, data 0 to denote undefined, so we follow suite\n\t\t\t\t\ttarget[position++] = 0\n\t\t\t\t\ttarget[position++] = 0\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthrow new Error('Unknown type: ' + type)\n\t\t\t}\n\t\t}\n\n\t\tconst writePlainObject = (this.variableMapSize || this.coercibleKeyAsNumber || this.skipValues) ? (object) => {\n\t\t\t// this method is slightly slower, but generates \"preferred serialization\" (optimally small for smaller objects)\n\t\t\tlet keys;\n\t\t\tif (this.skipValues) {\n\t\t\t\tkeys = [];\n\t\t\t\tfor (let key in object) {\n\t\t\t\t\tif ((typeof object.hasOwnProperty !== 'function' || object.hasOwnProperty(key)) &&\n\t\t\t\t\t\t!this.skipValues.includes(object[key]))\n\t\t\t\t\t\tkeys.push(key);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tkeys = Object.keys(object)\n\t\t\t}\n\t\t\tlet length = keys.length\n\t\t\tif (length < 0x10) {\n\t\t\t\ttarget[position++] = 0x80 | length\n\t\t\t} else if (length < 0x10000) {\n\t\t\t\ttarget[position++] = 0xde\n\t\t\t\ttarget[position++] = length >> 8\n\t\t\t\ttarget[position++] = length & 0xff\n\t\t\t} else {\n\t\t\t\ttarget[position++] = 0xdf\n\t\t\t\ttargetView.setUint32(position, length)\n\t\t\t\tposition += 4\n\t\t\t}\n\t\t\tlet key\n\t\t\tif (this.coercibleKeyAsNumber) {\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\tkey = keys[i]\n\t\t\t\t\tlet num = Number(key)\n\t\t\t\t\tpack(isNaN(num) ? key : num)\n\t\t\t\t\tpack(object[key])\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\tpack(key = keys[i])\n\t\t\t\t\tpack(object[key])\n\t\t\t\t}\n\t\t\t}\n\t\t} :\n\t\t(object) => {\n\t\t\ttarget[position++] = 0xde // always using map 16, so we can preallocate and set the length afterwards\n\t\t\tlet objectOffset = position - start\n\t\t\tposition += 2\n\t\t\tlet size = 0\n\t\t\tfor (let key in object) {\n\t\t\t\tif (typeof object.hasOwnProperty !== 'function' || object.hasOwnProperty(key)) {\n\t\t\t\t\tpack(key)\n\t\t\t\t\tpack(object[key])\n\t\t\t\t\tsize++\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (size > 0xffff) {\n\t\t\t\tthrow new Error('Object is too large to serialize with fast 16-bit map size,' +\n\t\t\t\t' use the \"variableMapSize\" option to serialize this object');\n\t\t\t}\n\t\t\ttarget[objectOffset++ + start] = size >> 8\n\t\t\ttarget[objectOffset + start] = size & 0xff\n\t\t}\n\n\t\tconst writeRecord = this.useRecords === false ? writePlainObject :\n\t\t(options.progressiveRecords && !useTwoByteRecords) ?  // this is about 2% faster for highly stable structures, since it only requires one for-in loop (but much more expensive when new structure needs to be written)\n\t\t(object) => {\n\t\t\tlet nextTransition, transition = structures.transitions || (structures.transitions = Object.create(null))\n\t\t\tlet objectOffset = position++ - start\n\t\t\tlet wroteKeys\n\t\t\tfor (let key in object) {\n\t\t\t\tif (typeof object.hasOwnProperty !== 'function' || object.hasOwnProperty(key)) {\n\t\t\t\t\tnextTransition = transition[key]\n\t\t\t\t\tif (nextTransition)\n\t\t\t\t\t\ttransition = nextTransition\n\t\t\t\t\telse {\n\t\t\t\t\t\t// record doesn't exist, create full new record and insert it\n\t\t\t\t\t\tlet keys = Object.keys(object)\n\t\t\t\t\t\tlet lastTransition = transition\n\t\t\t\t\t\ttransition = structures.transitions\n\t\t\t\t\t\tlet newTransitions = 0\n\t\t\t\t\t\tfor (let i = 0, l = keys.length; i < l; i++) {\n\t\t\t\t\t\t\tlet key = keys[i]\n\t\t\t\t\t\t\tnextTransition = transition[key]\n\t\t\t\t\t\t\tif (!nextTransition) {\n\t\t\t\t\t\t\t\tnextTransition = transition[key] = Object.create(null)\n\t\t\t\t\t\t\t\tnewTransitions++\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttransition = nextTransition\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (objectOffset + start + 1 == position) {\n\t\t\t\t\t\t\t// first key, so we don't need to insert, we can just write record directly\n\t\t\t\t\t\t\tposition--\n\t\t\t\t\t\t\tnewRecord(transition, keys, newTransitions)\n\t\t\t\t\t\t} else // otherwise we need to insert the record, moving existing data after the record\n\t\t\t\t\t\t\tinsertNewRecord(transition, keys, objectOffset, newTransitions)\n\t\t\t\t\t\twroteKeys = true\n\t\t\t\t\t\ttransition = lastTransition[key]\n\t\t\t\t\t}\n\t\t\t\t\tpack(object[key])\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!wroteKeys) {\n\t\t\t\tlet recordId = transition[RECORD_SYMBOL]\n\t\t\t\tif (recordId)\n\t\t\t\t\ttarget[objectOffset + start] = recordId\n\t\t\t\telse\n\t\t\t\t\tinsertNewRecord(transition, Object.keys(object), objectOffset, 0)\n\t\t\t}\n\t\t} :\n\t\t(object) => {\n\t\t\tlet nextTransition, transition = structures.transitions || (structures.transitions = Object.create(null))\n\t\t\tlet newTransitions = 0\n\t\t\tfor (let key in object) if (typeof object.hasOwnProperty !== 'function' || object.hasOwnProperty(key)) {\n\t\t\t\tnextTransition = transition[key]\n\t\t\t\tif (!nextTransition) {\n\t\t\t\t\tnextTransition = transition[key] = Object.create(null)\n\t\t\t\t\tnewTransitions++\n\t\t\t\t}\n\t\t\t\ttransition = nextTransition\n\t\t\t}\n\t\t\tlet recordId = transition[RECORD_SYMBOL]\n\t\t\tif (recordId) {\n\t\t\t\tif (recordId >= 0x60 && useTwoByteRecords) {\n\t\t\t\t\ttarget[position++] = ((recordId -= 0x60) & 0x1f) + 0x60\n\t\t\t\t\ttarget[position++] = recordId >> 5\n\t\t\t\t} else\n\t\t\t\t\ttarget[position++] = recordId\n\t\t\t} else {\n\t\t\t\tnewRecord(transition, transition.__keys__ || Object.keys(object), newTransitions)\n\t\t\t}\n\t\t\t// now write the values\n\t\t\tfor (let key in object)\n\t\t\t\tif (typeof object.hasOwnProperty !== 'function' || object.hasOwnProperty(key)) {\n\t\t\t\t\tpack(object[key])\n\t\t\t\t}\n\t\t}\n\n\t\t// create reference to useRecords if useRecords is a function\n\t\tconst checkUseRecords = typeof this.useRecords == 'function' && this.useRecords;\n\n\t\tconst writeObject = checkUseRecords ? (object) => {\n\t\t\tcheckUseRecords(object) ? writeRecord(object) : writePlainObject(object)\n\t\t} : writeRecord\n\n\t\tconst makeRoom = (end) => {\n\t\t\tlet newSize\n\t\t\tif (end > 0x1000000) {\n\t\t\t\t// special handling for really large buffers\n\t\t\t\tif ((end - start) > MAX_BUFFER_SIZE)\n\t\t\t\t\tthrow new Error('Packed buffer would be larger than maximum buffer size')\n\t\t\t\tnewSize = Math.min(MAX_BUFFER_SIZE,\n\t\t\t\t\tMath.round(Math.max((end - start) * (end > 0x4000000 ? 1.25 : 2), 0x400000) / 0x1000) * 0x1000)\n\t\t\t} else // faster handling for smaller buffers\n\t\t\t\tnewSize = ((Math.max((end - start) << 2, target.length - 1) >> 12) + 1) << 12\n\t\t\tlet newBuffer = new ByteArrayAllocate(newSize)\n\t\t\ttargetView = newBuffer.dataView || (newBuffer.dataView = new DataView(newBuffer.buffer, 0, newSize))\n\t\t\tend = Math.min(end, target.length)\n\t\t\tif (target.copy)\n\t\t\t\ttarget.copy(newBuffer, 0, start, end)\n\t\t\telse\n\t\t\t\tnewBuffer.set(target.slice(start, end))\n\t\t\tposition -= start\n\t\t\tstart = 0\n\t\t\tsafeEnd = newBuffer.length - 10\n\t\t\treturn target = newBuffer\n\t\t}\n\t\tconst newRecord = (transition, keys, newTransitions) => {\n\t\t\tlet recordId = structures.nextId\n\t\t\tif (!recordId)\n\t\t\t\trecordId = 0x40\n\t\t\tif (recordId < sharedLimitId && this.shouldShareStructure && !this.shouldShareStructure(keys)) {\n\t\t\t\trecordId = structures.nextOwnId\n\t\t\t\tif (!(recordId < maxStructureId))\n\t\t\t\t\trecordId = sharedLimitId\n\t\t\t\tstructures.nextOwnId = recordId + 1\n\t\t\t} else {\n\t\t\t\tif (recordId >= maxStructureId)// cycle back around\n\t\t\t\t\trecordId = sharedLimitId\n\t\t\t\tstructures.nextId = recordId + 1\n\t\t\t}\n\t\t\tlet highByte = keys.highByte = recordId >= 0x60 && useTwoByteRecords ? (recordId - 0x60) >> 5 : -1\n\t\t\ttransition[RECORD_SYMBOL] = recordId\n\t\t\ttransition.__keys__ = keys\n\t\t\tstructures[recordId - 0x40] = keys\n\n\t\t\tif (recordId < sharedLimitId) {\n\t\t\t\tkeys.isShared = true\n\t\t\t\tstructures.sharedLength = recordId - 0x3f\n\t\t\t\thasSharedUpdate = true\n\t\t\t\tif (highByte >= 0) {\n\t\t\t\t\ttarget[position++] = (recordId & 0x1f) + 0x60\n\t\t\t\t\ttarget[position++] = highByte\n\t\t\t\t} else {\n\t\t\t\t\ttarget[position++] = recordId\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (highByte >= 0) {\n\t\t\t\t\ttarget[position++] = 0xd5 // fixext 2\n\t\t\t\t\ttarget[position++] = 0x72 // \"r\" record defintion extension type\n\t\t\t\t\ttarget[position++] = (recordId & 0x1f) + 0x60\n\t\t\t\t\ttarget[position++] = highByte\n\t\t\t\t} else {\n\t\t\t\t\ttarget[position++] = 0xd4 // fixext 1\n\t\t\t\t\ttarget[position++] = 0x72 // \"r\" record defintion extension type\n\t\t\t\t\ttarget[position++] = recordId\n\t\t\t\t}\n\n\t\t\t\tif (newTransitions)\n\t\t\t\t\ttransitionsCount += serializationsSinceTransitionRebuild * newTransitions\n\t\t\t\t// record the removal of the id, we can maintain our shared structure\n\t\t\t\tif (recordIdsToRemove.length >= maxOwnStructures)\n\t\t\t\t\trecordIdsToRemove.shift()[RECORD_SYMBOL] = 0 // we are cycling back through, and have to remove old ones\n\t\t\t\trecordIdsToRemove.push(transition)\n\t\t\t\tpack(keys)\n\t\t\t}\n\t\t}\n\t\tconst insertNewRecord = (transition, keys, insertionOffset, newTransitions) => {\n\t\t\tlet mainTarget = target\n\t\t\tlet mainPosition = position\n\t\t\tlet mainSafeEnd = safeEnd\n\t\t\tlet mainStart = start\n\t\t\ttarget = keysTarget\n\t\t\tposition = 0\n\t\t\tstart = 0\n\t\t\tif (!target)\n\t\t\t\tkeysTarget = target = new ByteArrayAllocate(8192)\n\t\t\tsafeEnd = target.length - 10\n\t\t\tnewRecord(transition, keys, newTransitions)\n\t\t\tkeysTarget = target\n\t\t\tlet keysPosition = position\n\t\t\ttarget = mainTarget\n\t\t\tposition = mainPosition\n\t\t\tsafeEnd = mainSafeEnd\n\t\t\tstart = mainStart\n\t\t\tif (keysPosition > 1) {\n\t\t\t\tlet newEnd = position + keysPosition - 1\n\t\t\t\tif (newEnd > safeEnd)\n\t\t\t\t\tmakeRoom(newEnd)\n\t\t\t\tlet insertionPosition = insertionOffset + start\n\t\t\t\ttarget.copyWithin(insertionPosition + keysPosition, insertionPosition + 1, position)\n\t\t\t\ttarget.set(keysTarget.slice(0, keysPosition), insertionPosition)\n\t\t\t\tposition = newEnd\n\t\t\t} else {\n\t\t\t\ttarget[insertionOffset + start] = keysTarget[0]\n\t\t\t}\n\t\t}\n\t\tconst writeStruct = (object) => {\n\t\t\tlet newPosition = writeStructSlots(object, target, start, position, structures, makeRoom, (value, newPosition, notifySharedUpdate) => {\n\t\t\t\tif (notifySharedUpdate)\n\t\t\t\t\treturn hasSharedUpdate = true;\n\t\t\t\tposition = newPosition;\n\t\t\t\tlet startTarget = target;\n\t\t\t\tpack(value);\n\t\t\t\tresetStructures();\n\t\t\t\tif (startTarget !== target) {\n\t\t\t\t\treturn { position, targetView, target }; // indicate the buffer was re-allocated\n\t\t\t\t}\n\t\t\t\treturn position;\n\t\t\t}, this);\n\t\t\tif (newPosition === 0) // bail and go to a msgpack object\n\t\t\t\treturn writeObject(object);\n\t\t\tposition = newPosition;\n\t\t}\n\t}\n\tuseBuffer(buffer) {\n\t\t// this means we are finished using our own buffer and we can write over it safely\n\t\ttarget = buffer\n\t\ttarget.dataView || (target.dataView = new DataView(target.buffer, target.byteOffset, target.byteLength))\n\t\tposition = 0\n\t}\n\tset position (value) {\n\t\tposition = value;\n\t}\n\tget position() {\n\t\treturn position;\n\t}\n\tset buffer (buffer) {\n\t\ttarget = buffer;\n\t}\n\tget buffer () {\n\t\treturn target;\n\t}\n\tclearSharedData() {\n\t\tif (this.structures)\n\t\t\tthis.structures = []\n\t\tif (this.typedStructs)\n\t\t\tthis.typedStructs = []\n\t}\n}\n\nextensionClasses = [ Date, Set, Error, RegExp, ArrayBuffer, Object.getPrototypeOf(Uint8Array.prototype).constructor /*TypedArray*/, C1Type ]\nextensions = [{\n\tpack(date, allocateForWrite, pack) {\n\t\tlet seconds = date.getTime() / 1000\n\t\tif ((this.useTimestamp32 || date.getMilliseconds() === 0) && seconds >= 0 && seconds < 0x100000000) {\n\t\t\t// Timestamp 32\n\t\t\tlet { target, targetView, position} = allocateForWrite(6)\n\t\t\ttarget[position++] = 0xd6\n\t\t\ttarget[position++] = 0xff\n\t\t\ttargetView.setUint32(position, seconds)\n\t\t} else if (seconds > 0 && seconds < 0x100000000) {\n\t\t\t// Timestamp 64\n\t\t\tlet { target, targetView, position} = allocateForWrite(10)\n\t\t\ttarget[position++] = 0xd7\n\t\t\ttarget[position++] = 0xff\n\t\t\ttargetView.setUint32(position, date.getMilliseconds() * 4000000 + ((seconds / 1000 / 0x100000000) >> 0))\n\t\t\ttargetView.setUint32(position + 4, seconds)\n\t\t} else if (isNaN(seconds)) {\n\t\t\tif (this.onInvalidDate) {\n\t\t\t\tallocateForWrite(0)\n\t\t\t\treturn pack(this.onInvalidDate())\n\t\t\t}\n\t\t\t// Intentionally invalid timestamp\n\t\t\tlet { target, targetView, position} = allocateForWrite(3)\n\t\t\ttarget[position++] = 0xd4\n\t\t\ttarget[position++] = 0xff\n\t\t\ttarget[position++] = 0xff\n\t\t} else {\n\t\t\t// Timestamp 96\n\t\t\tlet { target, targetView, position} = allocateForWrite(15)\n\t\t\ttarget[position++] = 0xc7\n\t\t\ttarget[position++] = 12\n\t\t\ttarget[position++] = 0xff\n\t\t\ttargetView.setUint32(position, date.getMilliseconds() * 1000000)\n\t\t\ttargetView.setBigInt64(position + 4, BigInt(Math.floor(seconds)))\n\t\t}\n\t}\n}, {\n\tpack(set, allocateForWrite, pack) {\n\t\tif (this.setAsEmptyObject) {\n\t\t\tallocateForWrite(0);\n\t\t\treturn pack({})\n\t\t}\n\t\tlet array = Array.from(set)\n\t\tlet { target, position} = allocateForWrite(this.moreTypes ? 3 : 0)\n\t\tif (this.moreTypes) {\n\t\t\ttarget[position++] = 0xd4\n\t\t\ttarget[position++] = 0x73 // 's' for Set\n\t\t\ttarget[position++] = 0\n\t\t}\n\t\tpack(array)\n\t}\n}, {\n\tpack(error, allocateForWrite, pack) {\n\t\tlet { target, position} = allocateForWrite(this.moreTypes ? 3 : 0)\n\t\tif (this.moreTypes) {\n\t\t\ttarget[position++] = 0xd4\n\t\t\ttarget[position++] = 0x65 // 'e' for error\n\t\t\ttarget[position++] = 0\n\t\t}\n\t\tpack([ error.name, error.message, error.cause ])\n\t}\n}, {\n\tpack(regex, allocateForWrite, pack) {\n\t\tlet { target, position} = allocateForWrite(this.moreTypes ? 3 : 0)\n\t\tif (this.moreTypes) {\n\t\t\ttarget[position++] = 0xd4\n\t\t\ttarget[position++] = 0x78 // 'x' for regeXp\n\t\t\ttarget[position++] = 0\n\t\t}\n\t\tpack([ regex.source, regex.flags ])\n\t}\n}, {\n\tpack(arrayBuffer, allocateForWrite) {\n\t\tif (this.moreTypes)\n\t\t\twriteExtBuffer(arrayBuffer, 0x10, allocateForWrite)\n\t\telse\n\t\t\twriteBuffer(hasNodeBuffer ? Buffer.from(arrayBuffer) : new Uint8Array(arrayBuffer), allocateForWrite)\n\t}\n}, {\n\tpack(typedArray, allocateForWrite) {\n\t\tlet constructor = typedArray.constructor\n\t\tif (constructor !== ByteArray && this.moreTypes)\n\t\t\twriteExtBuffer(typedArray, typedArrays.indexOf(constructor.name), allocateForWrite)\n\t\telse\n\t\t\twriteBuffer(typedArray, allocateForWrite)\n\t}\n}, {\n\tpack(c1, allocateForWrite) { // specific 0xC1 object\n\t\tlet { target, position} = allocateForWrite(1)\n\t\ttarget[position] = 0xc1\n\t}\n}]\n\nfunction writeExtBuffer(typedArray, type, allocateForWrite, encode) {\n\tlet length = typedArray.byteLength\n\tif (length + 1 < 0x100) {\n\t\tvar { target, position } = allocateForWrite(4 + length)\n\t\ttarget[position++] = 0xc7\n\t\ttarget[position++] = length + 1\n\t} else if (length + 1 < 0x10000) {\n\t\tvar { target, position } = allocateForWrite(5 + length)\n\t\ttarget[position++] = 0xc8\n\t\ttarget[position++] = (length + 1) >> 8\n\t\ttarget[position++] = (length + 1) & 0xff\n\t} else {\n\t\tvar { target, position, targetView } = allocateForWrite(7 + length)\n\t\ttarget[position++] = 0xc9\n\t\ttargetView.setUint32(position, length + 1) // plus one for the type byte\n\t\tposition += 4\n\t}\n\ttarget[position++] = 0x74 // \"t\" for typed array\n\ttarget[position++] = type\n\tif (!typedArray.buffer) typedArray = new Uint8Array(typedArray)\n\ttarget.set(new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength), position)\n}\nfunction writeBuffer(buffer, allocateForWrite) {\n\tlet length = buffer.byteLength\n\tvar target, position\n\tif (length < 0x100) {\n\t\tvar { target, position } = allocateForWrite(length + 2)\n\t\ttarget[position++] = 0xc4\n\t\ttarget[position++] = length\n\t} else if (length < 0x10000) {\n\t\tvar { target, position } = allocateForWrite(length + 3)\n\t\ttarget[position++] = 0xc5\n\t\ttarget[position++] = length >> 8\n\t\ttarget[position++] = length & 0xff\n\t} else {\n\t\tvar { target, position, targetView } = allocateForWrite(length + 5)\n\t\ttarget[position++] = 0xc6\n\t\ttargetView.setUint32(position, length)\n\t\tposition += 4\n\t}\n\ttarget.set(buffer, position)\n}\n\nfunction writeExtensionData(result, target, position, type) {\n\tlet length = result.length\n\tswitch (length) {\n\t\tcase 1:\n\t\t\ttarget[position++] = 0xd4\n\t\t\tbreak\n\t\tcase 2:\n\t\t\ttarget[position++] = 0xd5\n\t\t\tbreak\n\t\tcase 4:\n\t\t\ttarget[position++] = 0xd6\n\t\t\tbreak\n\t\tcase 8:\n\t\t\ttarget[position++] = 0xd7\n\t\t\tbreak\n\t\tcase 16:\n\t\t\ttarget[position++] = 0xd8\n\t\t\tbreak\n\t\tdefault:\n\t\t\tif (length < 0x100) {\n\t\t\t\ttarget[position++] = 0xc7\n\t\t\t\ttarget[position++] = length\n\t\t\t} else if (length < 0x10000) {\n\t\t\t\ttarget[position++] = 0xc8\n\t\t\t\ttarget[position++] = length >> 8\n\t\t\t\ttarget[position++] = length & 0xff\n\t\t\t} else {\n\t\t\t\ttarget[position++] = 0xc9\n\t\t\t\ttarget[position++] = length >> 24\n\t\t\t\ttarget[position++] = (length >> 16) & 0xff\n\t\t\t\ttarget[position++] = (length >> 8) & 0xff\n\t\t\t\ttarget[position++] = length & 0xff\n\t\t\t}\n\t}\n\ttarget[position++] = type\n\ttarget.set(result, position)\n\tposition += length\n\treturn position\n}\n\nfunction insertIds(serialized, idsToInsert) {\n\t// insert the ids that need to be referenced for structured clones\n\tlet nextId\n\tlet distanceToMove = idsToInsert.length * 6\n\tlet lastEnd = serialized.length - distanceToMove\n\twhile (nextId = idsToInsert.pop()) {\n\t\tlet offset = nextId.offset\n\t\tlet id = nextId.id\n\t\tserialized.copyWithin(offset + distanceToMove, offset, lastEnd)\n\t\tdistanceToMove -= 6\n\t\tlet position = offset + distanceToMove\n\t\tserialized[position++] = 0xd6\n\t\tserialized[position++] = 0x69 // 'i'\n\t\tserialized[position++] = id >> 24\n\t\tserialized[position++] = (id >> 16) & 0xff\n\t\tserialized[position++] = (id >> 8) & 0xff\n\t\tserialized[position++] = id & 0xff\n\t\tlastEnd = offset\n\t}\n\treturn serialized\n}\n\nfunction writeBundles(start, pack, incrementPosition) {\n\tif (bundledStrings.length > 0) {\n\t\ttargetView.setUint32(bundledStrings.position + start, position + incrementPosition - bundledStrings.position - start)\n\t\tbundledStrings.stringsPosition = position - start;\n\t\tlet writeStrings = bundledStrings\n\t\tbundledStrings = null\n\t\tpack(writeStrings[0])\n\t\tpack(writeStrings[1])\n\t}\n}\n\nexport function addExtension(extension) {\n\tif (extension.Class) {\n\t\tif (!extension.pack && !extension.write)\n\t\t\tthrow new Error('Extension has no pack or write function')\n\t\tif (extension.pack && !extension.type)\n\t\t\tthrow new Error('Extension has no type (numeric code to identify the extension)')\n\t\textensionClasses.unshift(extension.Class)\n\t\textensions.unshift(extension)\n\t}\n\tunpackAddExtension(extension)\n}\nfunction prepareStructures(structures, packr) {\n\tstructures.isCompatible = (existingStructures) => {\n\t\tlet compatible = !existingStructures || ((packr.lastNamedStructuresLength || 0) === existingStructures.length)\n\t\tif (!compatible) // we want to merge these existing structures immediately since we already have it and we are in the right transaction\n\t\t\tpackr._mergeStructures(existingStructures);\n\t\treturn compatible;\n\t}\n\treturn structures\n}\nexport function setWriteStructSlots(writeSlots, makeStructures) {\n\twriteStructSlots = writeSlots;\n\tprepareStructures = makeStructures;\n}\n\nlet defaultPackr = new Packr({ useRecords: false })\nexport const pack = defaultPackr.pack\nexport const encode = defaultPackr.pack\nexport const Encoder = Packr\nexport { FLOAT32_OPTIONS } from './unpack.js'\nimport { FLOAT32_OPTIONS } from './unpack.js'\nexport const { NEVER, ALWAYS, DECIMAL_ROUND, DECIMAL_FIT } = FLOAT32_OPTIONS\nexport const REUSE_BUFFER_MODE = 512\nexport const RESET_BUFFER_MODE = 1024\nexport const RESERVE_START_SPACE = 2048\n","import { Connection } from './Connection';\nimport { Protocol } from './Protocol';\nimport { getSerializer, Serializer } from './serializer/Serializer';\n\n// The unused imports here are important for better `.d.ts` file generation\n// (Later merged with `dts-bundle-generator`)\nimport { createNanoEvents } from './core/nanoevents';\nimport { createSignal } from './core/signal';\n\nimport { decode, encode, Iterator } from '@colyseus/schema';\nimport { SchemaConstructor, SchemaSerializer } from './serializer/SchemaSerializer';\nimport { CloseCode } from './errors/Errors';\n\nimport { Packr, unpack } from '@colyseus/msgpackr';\n\nexport interface RoomAvailable<Metadata = any> {\n    name: string;\n    roomId: string;\n    clients: number;\n    maxClients: number;\n    metadata?: Metadata;\n}\n\nexport class Room<State= any> {\n    public roomId: string;\n    public sessionId: string;\n    public reconnectionToken: string;\n\n    public name: string;\n    public connection: Connection;\n\n    // Public signals\n    public onStateChange = createSignal<(state: State) => void>();\n    public onError = createSignal<(code: number, message?: string) => void>();\n    public onLeave = createSignal<(code: number, reason?: string) => void>();\n    protected onJoin = createSignal();\n\n    public serializerId: string;\n    public serializer: Serializer<State>;\n\n    protected hasJoined: boolean = false;\n\n    // TODO: remove me on 1.0.0\n    protected rootSchema: SchemaConstructor<State>;\n\n    protected onMessageHandlers = createNanoEvents();\n\n    protected packr: Packr;\n\n    constructor(name: string, rootSchema?: SchemaConstructor<State>) {\n        this.roomId = null;\n        this.name = name;\n\n        this.packr = new Packr();\n\n        // msgpackr workaround: force buffer to be created.\n        this.packr.encode(undefined);\n\n        if (rootSchema) {\n            this.serializer = new (getSerializer(\"schema\"));\n            this.rootSchema = rootSchema;\n            (this.serializer as SchemaSerializer).state = new rootSchema();\n        }\n\n        this.onError((code, message) => console.warn?.(`colyseus.js - onError => (${code}) ${message}`));\n        this.onLeave(() => this.removeAllListeners());\n    }\n\n    public connect(\n        endpoint: string,\n        devModeCloseCallback?: () => void,\n        room: Room = this, // when reconnecting on devMode, re-use previous room intance for handling events.\n        options?: any,\n        headers?: any,\n    ) {\n        const connection = new Connection(options.protocol);\n        room.connection = connection;\n\n        connection.events.onmessage = Room.prototype.onMessageCallback.bind(room);\n        connection.events.onclose = function (e: CloseEvent) {\n            if (!room.hasJoined) {\n                console.warn?.(`Room connection was closed unexpectedly (${e.code}): ${e.reason}`);\n                room.onError.invoke(e.code, e.reason);\n                return;\n            }\n            if (e.code === CloseCode.DEVMODE_RESTART && devModeCloseCallback) {\n                devModeCloseCallback();\n            } else {\n                room.onLeave.invoke(e.code, e.reason);\n                room.destroy();\n            }\n        };\n        connection.events.onerror = function (e: CloseEvent) {\n            console.warn?.(`Room, onError (${e.code}): ${e.reason}`);\n            room.onError.invoke(e.code, e.reason);\n        };\n\n        // FIXME: refactor this.\n        if (options.protocol === \"h3\") {\n            const url = new URL(endpoint);\n            connection.connect(url.origin, options);\n\n        } else {\n            connection.connect(endpoint, headers);\n        }\n\n    }\n\n    public leave(consented: boolean = true): Promise<number> {\n        return new Promise((resolve) => {\n            this.onLeave((code) => resolve(code));\n\n            if (this.connection) {\n                if (consented) {\n                    this.packr.buffer[0] = Protocol.LEAVE_ROOM;\n                    this.connection.send(this.packr.buffer.subarray(0, 1));\n\n                } else {\n                    this.connection.close();\n                }\n\n            } else {\n                this.onLeave.invoke(CloseCode.CONSENTED);\n            }\n        });\n    }\n\n    public onMessage<T = any>(type: \"*\", callback: (type: string | number, message: T) => void)\n    public onMessage<T = any>(type: string | number, callback: (message: T) => void)\n    public onMessage(type: '*' | string | number, callback: (...args: any[]) => void) {\n        return this.onMessageHandlers.on(this.getMessageHandlerKey(type), callback);\n    }\n\n    public send<T = any>(type: string | number, message?: T): void {\n        const it: Iterator = { offset: 1 };\n        this.packr.buffer[0] = Protocol.ROOM_DATA;\n\n        if (typeof(type) === \"string\") {\n            encode.string(this.packr.buffer, type, it);\n\n        } else {\n            encode.number(this.packr.buffer, type, it);\n        }\n\n        // force packr to use beginning of the buffer\n        this.packr.position = 0;\n\n        const data = (message !== undefined)\n            ? this.packr.pack(message, 2048 + it.offset) // 2048 = RESERVE_START_SPACE\n            : this.packr.buffer.subarray(0, it.offset);\n\n        this.connection.send(data);\n    }\n\n    public sendUnreliable<T = any>(type: string | number, message?: T): void {\n        const it: Iterator = { offset: 1 };\n        this.packr.buffer[0] = Protocol.ROOM_DATA;\n\n        if (typeof(type) === \"string\") {\n            encode.string(this.packr.buffer, type, it);\n\n        } else {\n            encode.number(this.packr.buffer, type, it);\n        }\n\n        // force packr to use beginning of the buffer\n        this.packr.position = 0;\n\n        const data = (message !== undefined)\n            ? this.packr.pack(message, 2048 + it.offset) // 2048 = RESERVE_START_SPACE\n            : this.packr.buffer.subarray(0, it.offset);\n\n        this.connection.sendUnreliable(data);\n    }\n\n    public sendBytes(type: string | number, bytes: Uint8Array) {\n        const it: Iterator = { offset: 1 };\n        this.packr.buffer[0] = Protocol.ROOM_DATA_BYTES;\n\n        if (typeof(type) === \"string\") {\n            encode.string(this.packr.buffer, type, it);\n\n        } else {\n            encode.number(this.packr.buffer, type, it);\n        }\n\n        // check if buffer needs to be resized\n        // TODO: can we avoid this?\n        if (bytes.byteLength + it.offset > this.packr.buffer.byteLength) {\n            const newBuffer = new Uint8Array(it.offset + bytes.byteLength);\n            newBuffer.set(this.packr.buffer);\n            this.packr.useBuffer(newBuffer);\n        }\n\n        this.packr.buffer.set(bytes, it.offset);\n        this.connection.send(this.packr.buffer.subarray(0, it.offset + bytes.byteLength));\n    }\n\n    public get state (): State {\n        return this.serializer.getState();\n    }\n\n    public removeAllListeners() {\n        this.onJoin.clear();\n        this.onStateChange.clear();\n        this.onError.clear();\n        this.onLeave.clear();\n        this.onMessageHandlers.events = {};\n\n        if (this.serializer instanceof SchemaSerializer) {\n            // Remove callback references\n            this.serializer.decoder.root.callbacks = {};\n        }\n    }\n\n    protected onMessageCallback(event: MessageEvent) {\n        const buffer = new Uint8Array(event.data);\n\n        const it: Iterator = { offset: 1 };\n        const code = buffer[0];\n\n        if (code === Protocol.JOIN_ROOM) {\n            const reconnectionToken = decode.utf8Read(buffer, it, buffer[it.offset++]);\n            this.serializerId = decode.utf8Read(buffer, it, buffer[it.offset++]);\n\n            // Instantiate serializer if not locally available.\n            if (!this.serializer) {\n                const serializer = getSerializer(this.serializerId);\n                this.serializer = new serializer();\n            }\n\n            if (buffer.byteLength > it.offset && this.serializer.handshake) {\n                this.serializer.handshake(buffer, it);\n            }\n\n            this.reconnectionToken = `${this.roomId}:${reconnectionToken}`;\n\n            this.hasJoined = true;\n            this.onJoin.invoke();\n\n            // acknowledge successfull JOIN_ROOM\n            this.packr.buffer[0] = Protocol.JOIN_ROOM;\n            this.connection.send(this.packr.buffer.subarray(0, 1));\n\n        } else if (code === Protocol.ERROR) {\n            const code = decode.number(buffer, it);\n            const message = decode.string(buffer, it);\n\n            this.onError.invoke(code, message);\n\n        } else if (code === Protocol.LEAVE_ROOM) {\n            this.leave();\n\n        } else if (code === Protocol.ROOM_STATE) {\n            this.serializer.setState(buffer, it);\n            this.onStateChange.invoke(this.serializer.getState());\n\n        } else if (code === Protocol.ROOM_STATE_PATCH) {\n            this.serializer.patch(buffer, it);\n            this.onStateChange.invoke(this.serializer.getState());\n\n        } else if (code === Protocol.ROOM_DATA) {\n            const type = (decode.stringCheck(buffer, it))\n                ? decode.string(buffer, it)\n                : decode.number(buffer, it);\n\n            const message = (buffer.byteLength > it.offset)\n                ? unpack(buffer, { start: it.offset })\n                : undefined;\n\n            this.dispatchMessage(type, message);\n\n        } else if (code === Protocol.ROOM_DATA_BYTES) {\n            const type = (decode.stringCheck(buffer, it))\n                ? decode.string(buffer, it)\n                : decode.number(buffer, it);\n\n            this.dispatchMessage(type, buffer.subarray(it.offset));\n        }\n    }\n\n    private dispatchMessage(type: string | number, message: any) {\n        const messageType = this.getMessageHandlerKey(type);\n\n        if (this.onMessageHandlers.events[messageType]) {\n            this.onMessageHandlers.emit(messageType, message);\n\n        } else if (this.onMessageHandlers.events['*']) {\n            this.onMessageHandlers.emit('*', type, message);\n\n        } else {\n            console.warn?.(`colyseus.js: onMessage() not registered for type '${type}'.`);\n        }\n    }\n\n    private destroy () {\n        if (this.serializer) {\n            this.serializer.teardown();\n        }\n    }\n\n    private getMessageHandlerKey(type: string | number): string {\n        switch (typeof(type)) {\n            // string\n            case \"string\": return type;\n\n            // number\n            case \"number\": return `i${type}`;\n\n            default: throw new Error(\"invalid message type.\");\n        }\n    }\n\n}\nexport function splitURL(url:string, base?:any) {\n    // 检查 URL 是否为空或非字符串\n    if (!url || typeof url !== 'string') {\n        throw new Error(\"URL must be a non-empty string\");\n    }\n\n    // 尝试使用全局 URL 构造函数\n    if (typeof globalThis !== 'undefined' && globalThis.URL) {\n        try {\n            return base ? new URL(url, base) : new URL(url);\n        } catch (e) {\n            // URL 构造函数可能会因为无效 URL 抛出错误\n            // 继续使用备选方案\n        }\n    }\n\n    // 如果有基础 URL 且 url 是相对路径，先进行合并\n    if (base && url.startsWith('/')) {\n        // 简单合并，可能需要更复杂的逻辑来处理各种情况\n        let baseUrl = base;\n        if (baseUrl.endsWith('/')) {\n            baseUrl = baseUrl.slice(0, -1);\n        }\n        url = baseUrl + url;\n    }\n\n    // 备选方案：使用正则表达式解析 URL\n    var urlPattern = /^(?:([A-Za-z]+):)?(?:\\/\\/)?(?:([0-9.\\-A-Za-z]+)(?::(\\d+))?)?(\\/[^?#]*)?(?:\\?([^#]*))?(?:#(.*))?$/;\n    var matches = url.match(urlPattern);\n    if (!matches) {\n        throw new Error(\"Invalid URL\");\n    }\n\n    return {\n        protocol: matches[1] ? matches[1] + \":\" : \"\",\n        hostname: matches[2] || \"\",\n        port: matches[3] || \"\",\n        pathname: matches[4] || \"/\",\n        search: matches[5] ? \"?\" + matches[5] : \"\",\n        hash: matches[6] ? \"#\" + matches[6] : \"\",\n        href: url,\n        origin: (matches[1] ? matches[1] + \"://\" : \"//\") + (matches[2] || \"\") + (matches[3] ? \":\" + matches[3] : \"\")\n    };\n}\n","function apply(src, tar) {\n\ttar.headers = src.headers || {};\n\ttar.statusMessage = src.statusText;\n\ttar.statusCode = src.status;\n\ttar.data = src.response;\n}\n\nfunction send(method, uri, opts) {\n\treturn new Promise(function (res, rej) {\n\t\topts = opts || {};\n\t\tvar req = new XMLHttpRequest;\n\t\tvar k, tmp, arr, str=opts.body;\n\t\tvar headers = opts.headers || {};\n\n\t\t// IE compatible\n\t\tif (opts.timeout) req.timeout = opts.timeout;\n\t\treq.ontimeout = req.onerror = function (err) {\n\t\t\terr.timeout = err.type == 'timeout';\n\t\t\trej(err);\n\t\t};\n\n\t\treq.onabort = function (err) {\n\t\t\terr.aborted = true;\n\t\t\trej(err);\n\t\t};\n\n\t\treq.open(method, uri.href || uri);\n\n\t\treq.onload = function () {\n\t\t\tarr = req.getAllResponseHeaders().trim().split(/[\\r\\n]+/);\n\t\t\tapply(req, req); //=> req.headers\n\n\t\t\twhile (tmp = arr.shift()) {\n\t\t\t\ttmp = tmp.split(': ');\n\t\t\t\treq.headers[tmp.shift().toLowerCase()] = tmp.join(': ');\n\t\t\t}\n\n\t\t\ttmp = req.headers['content-type'];\n\t\t\tif (tmp && !!~tmp.indexOf('application/json')) {\n\t\t\t\ttry {\n\t\t\t\t\treq.data = JSON.parse(req.data, opts.reviver);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tapply(req, err);\n\t\t\t\t\treturn rej(err);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t(req.status >= 400 ? rej : res)(req);\n\t\t};\n\n\t\tif (typeof FormData < 'u' && str instanceof FormData) {\n\t\t\t// str = opts.body\n\t\t} else if (str && typeof str == 'object') {\n\t\t\theaders['content-type'] = 'application/json';\n\t\t\tstr = JSON.stringify(str);\n\t\t}\n\n\t\treq.withCredentials = !!opts.withCredentials;\n\n\t\tfor (k in headers) {\n\t\t\treq.setRequestHeader(k, headers[k]);\n\t\t}\n\n\t\treq.send(str);\n\n\t\tif (opts.signal) {\n\t\t\topts.signal.addEventListener('abort', function () {\n\t\t\t\treq.abort();\n\t\t\t});\n\t\t}\n\t});\n}\n\nvar get = /*#__PURE__*/ send.bind(send, 'GET');\nvar post = /*#__PURE__*/ send.bind(send, 'POST');\nvar patch = /*#__PURE__*/ send.bind(send, 'PATCH');\nvar del = /*#__PURE__*/ send.bind(send, 'DELETE');\nvar put = /*#__PURE__*/ send.bind(send, 'PUT');\n\nexports.del = del;\nexports.get = get;\nexports.patch = patch;\nexports.post = post;\nexports.put = put;\nexports.send = send;","import { Client } from \"./Client\";\nimport { AbortError, ServerError } from \"./errors/Errors\";\nimport * as httpie from \"@colyseus/httpie\";\n\nexport class HTTP {\n    public authToken: string;\n\n    constructor(\n        protected client: Client,\n        public headers: { [id: string]: string } = {},\n    ) {}\n\n    public get<T = any>(path: string, options: Partial<httpie.Options> = {}): Promise<httpie.Response<T>> {\n        return this.request(\"get\", path, options);\n    }\n\n    public post<T = any>(path: string, options: Partial<httpie.Options> = {}): Promise<httpie.Response<T>> {\n        return this.request(\"post\", path, options);\n    }\n\n    public del<T = any>(path: string, options: Partial<httpie.Options> = {}): Promise<httpie.Response<T>> {\n        return this.request(\"del\", path, options);\n    }\n\n    public put<T = any>(path: string, options: Partial<httpie.Options> = {}): Promise<httpie.Response<T>> {\n        return this.request(\"put\", path, options);\n    }\n\n    protected request(method: \"get\" | \"post\" | \"put\" | \"del\", path: string, options: Partial<httpie.Options> = {}): Promise<httpie.Response> {\n        return httpie[method](this.client['getHttpEndpoint'](path), this.getOptions(options)).catch((e: any) => {\n            if (e.aborted) {\n                throw new AbortError(\"Request aborted\");\n            }\n\n            const status = e.statusCode; //  || -1\n            const message = e.data?.error || e.statusMessage || e.message; //  || \"offline\"\n\n            if (!status && !message) {\n                throw e;\n            }\n\n            throw new ServerError(status, message);\n        });\n    }\n    protected request(method: \"get\" | \"post\" | \"put\" | \"del\", path: string, options: Partial<httpie.Options> = {}): Promise<httpie.Response> {\n      if (typeof (wx) !== 'undefined' && wx.connectSocket){\n        const wxOptions = this.getWxOptions(method, path, options);\n        return new Promise((resolve, reject) => {\n            wx.request({\n                ...wxOptions,\n                data:options.body || options.data,\n                success: (res) => {\n                  console.log(res);\n                  resolve(res);\n                },\n                fail: (err) => {\n                    reject(new Errors.ServerError(err.statusCode || -1, err.errMsg));\n                }\n            });\n        });\n      }else{\n        return httpie[method](this.client['getHttpEndpoint'](path), this.getOptions(options)).catch((e: any) => {\n            if (e.aborted) {\n                throw new AbortError(\"Request aborted\");\n            }\n\n            const status = e.statusCode; //  || -1\n            const message = e.data?.error || e.statusMessage || e.message; //  || \"offline\"\n\n            if (!status && !message) {\n                throw e;\n            }\n\n            throw new ServerError(status, message);\n        });\n      }\n\n    }\n\n    protected getWxOptions(method:string, path:string, options:Partial<httpie.Options>) {\n        // 合并配置\n        const mergedOptions = {\n            ...options,\n            headers: {\n                ...this.headers,\n                ...(options.headers || {})\n            }\n        };\n\n        // 添加认证令牌\n        if (this.authToken) {\n            mergedOptions.headers['Authorization'] = `Bearer ${this.authToken}`;\n        }\n\n        // 返回微信小程序支持的格式\n        return {\n            url: this.client['getHttpEndpoint'](path),\n            method: method,\n            data: mergedOptions.body || mergedOptions.data,\n            header: mergedOptions.headers,\n            timeout: mergedOptions.timeout,\n            dataType: 'json'\n        };\n    }\n\n    protected getOptions(options: Partial<httpie.Options>) {\n        // merge default custom headers with user headers\n        options.headers = Object.assign({}, this.headers, options.headers);\n\n        if (this.authToken) {\n            options.headers['Authorization'] = `Bearer ${this.authToken}`;\n        }\n\n        if (typeof (cc) !== 'undefined' && cc.sys && cc.sys.isNative) {\n            //\n            // Workaround for Cocos Creator on Native platform\n            // \"Cannot set property withCredentials of #<XMLHttpRequest> which has only a getter\"\n            //\n        } else {\n            // always include credentials\n            options.withCredentials = true;\n        }\n\n        return options;\n    }\n}\n","/// <reference path=\"../typings/cocos-creator.d.ts\" />\r\n\r\n/**\r\n * We do not assign 'storage' to window.localStorage immediatelly for React\r\n * Native compatibility. window.localStorage is not present when this module is\r\n * loaded.\r\n */\r\n\r\nlet storage: any;\r\n\r\nfunction getStorage(): Storage {\r\n    if (!storage)  {\r\n        try {\r\n            storage = (typeof (cc) !== 'undefined' && cc.sys && cc.sys.localStorage)\r\n                ? cc.sys.localStorage  // compatibility with cocos creator\r\n                : window.localStorage; // RN does have window object at this point, but localStorage is not defined\r\n\r\n        } catch (e) {\r\n            // ignore error\r\n        }\r\n    }\r\n\r\n    if (!storage && typeof (globalThis.indexedDB) !== 'undefined') {\r\n        storage = new IndexedDBStorage();\r\n    }\r\n\r\n    if (!storage) {\r\n        // mock localStorage if not available (Node.js or RN environment)\r\n        storage = {\r\n            cache: {},\r\n            setItem: function (key, value) { this.cache[key] = value; },\r\n            getItem: function (key) { this.cache[key]; },\r\n            removeItem: function (key) { delete this.cache[key]; },\r\n        };\r\n    }\r\n\r\n    return storage;\r\n}\r\n\r\nexport function setItem(key: string, value: string) {\r\n    getStorage().setItem(key, value);\r\n}\r\n\r\nexport function removeItem(key: string) {\r\n    getStorage().removeItem(key);\r\n}\r\n\r\nexport function getItem(key: string, callback: Function) {\r\n    const value: any = getStorage().getItem(key);\r\n\r\n    if (\r\n        typeof (Promise) === 'undefined' || // old browsers\r\n        !(value instanceof Promise)\r\n    ) {\r\n        // browser has synchronous return\r\n        callback(value);\r\n\r\n    } else {\r\n        // react-native is asynchronous\r\n        value.then((id) => callback(id));\r\n    }\r\n}\r\n\r\n/**\r\n * When running in a Web Worker, we need to use IndexedDB to store data.\r\n */\r\nclass IndexedDBStorage {\r\n    private dbPromise: Promise<IDBDatabase> = new Promise((resolve) => {\r\n        const request = indexedDB.open('_colyseus_storage', 1);\r\n        request.onupgradeneeded = () => request.result.createObjectStore('store');\r\n        request.onsuccess = () => resolve(request.result);\r\n    });\r\n\r\n    private async tx(mode: IDBTransactionMode, fn: (store: IDBObjectStore) => IDBRequest) {\r\n        const db = await this.dbPromise;\r\n        const store = db.transaction('store', mode).objectStore('store');\r\n        return fn(store);\r\n    }\r\n\r\n    setItem(key: string, value: string) {\r\n        return this.tx('readwrite', store => store.put(value, key)).then();\r\n    }\r\n\r\n    async getItem(key: string) {\r\n        const request = await this.tx('readonly', store => store.get(key));\r\n        return new Promise<string | undefined>((resolve) => {\r\n            request.onsuccess = () => resolve(request.result);\r\n        });\r\n    }\r\n\r\n    removeItem(key: string) {\r\n        return this.tx('readwrite', store => store.delete(key)).then();\r\n    }\r\n}","import { HTTP } from \"./HTTP\";\r\nimport { getItem, removeItem, setItem } from \"./Storage\";\r\nimport { createNanoEvents } from './core/nanoevents';\r\n\r\nexport interface AuthSettings {\r\n    path: string;\r\n    key: string;\r\n}\r\n\r\nexport interface PopupSettings {\r\n    prefix: string;\r\n    width: number;\r\n    height: number;\r\n}\r\n\r\nexport interface AuthData {\r\n    user: any;\r\n    token: string;\r\n}\r\n\r\nexport class Auth {\r\n    settings: AuthSettings = {\r\n        path: \"/auth\",\r\n        key: \"colyseus-auth-token\",\r\n    };\r\n\r\n    #_initialized = false;\r\n    #_initializationPromise: Promise<void>;\r\n    #_signInWindow = undefined;\r\n    #_events = createNanoEvents();\r\n\r\n    constructor(protected http: HTTP) {\r\n        getItem(this.settings.key, (token) => this.token = token);\r\n    }\r\n\r\n    public set token(token: string) {\r\n        this.http.authToken = token;\r\n    }\r\n\r\n    public get token(): string {\r\n        return this.http.authToken;\r\n    }\r\n\r\n    public onChange(callback: (response: AuthData) => void) {\r\n        const unbindChange = this.#_events.on(\"change\", callback);\r\n        if (!this.#_initialized) {\r\n            this.#_initializationPromise = new Promise<void>((resolve, reject) => {\r\n                this.getUserData().then((userData) => {\r\n                    this.emitChange({ ...userData, token: this.token });\r\n\r\n                }).catch((e) => {\r\n                    // user is not logged in, or service is down\r\n                    this.emitChange({ user: null, token: undefined });\r\n\r\n                }).finally(() => {\r\n                    resolve();\r\n                });\r\n            });\r\n        }\r\n        this.#_initialized = true;\r\n        return unbindChange;\r\n    }\r\n\r\n    public async getUserData() {\r\n        if (this.token) {\r\n            return (await this.http.get(`${this.settings.path}/userdata`)).data;\r\n        } else {\r\n            throw new Error(\"missing auth.token\");\r\n        }\r\n    }\r\n\r\n    public async registerWithEmailAndPassword(email: string, password: string, options?: any) {\r\n        const data = (await this.http.post(`${this.settings.path}/register`, {\r\n            body: { email, password, options, },\r\n        })).data;\r\n\r\n        this.emitChange(data);\r\n\r\n        return data;\r\n    }\r\n\r\n    public async signInWithEmailAndPassword(email: string, password: string) {\r\n        const data = (await this.http.post(`${this.settings.path}/login`, {\r\n            body: { email, password, },\r\n        })).data;\r\n\r\n        this.emitChange(data);\r\n\r\n        return data;\r\n    }\r\n\r\n    public async signInAnonymously(options?: any) {\r\n        const data = (await this.http.post(`${this.settings.path}/anonymous`, {\r\n            body: { options, }\r\n        })).data;\r\n\r\n        this.emitChange(data);\r\n\r\n        return data;\r\n    }\r\n\r\n    public async sendPasswordResetEmail(email: string) {\r\n        return (await this.http.post(`${this.settings.path}/forgot-password`, {\r\n            body: { email, }\r\n        })).data;\r\n    }\r\n\r\n    public async signInWithProvider(providerName: string, settings: Partial<PopupSettings> = {}) {\r\n        return new Promise((resolve, reject) => {\r\n            const w = settings.width || 480;\r\n            const h = settings.height || 768;\r\n\r\n            // forward existing token for upgrading\r\n            const upgradingToken = this.token ? `?token=${this.token}` : \"\";\r\n\r\n            // Capitalize first letter of providerName\r\n            const title = `Login with ${(providerName[0].toUpperCase() + providerName.substring(1))}`;\r\n            const url = this.http['client']['getHttpEndpoint'](`${(settings.prefix || `${this.settings.path}/provider`)}/${providerName}${upgradingToken}`);\r\n\r\n            const left = (screen.width / 2) - (w / 2);\r\n            const top = (screen.height / 2) - (h / 2);\r\n\r\n            this.#_signInWindow = window.open(url, title, 'toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=no, resizable=no, copyhistory=no, width=' + w + ', height=' + h + ', top=' + top + ', left=' + left);\r\n\r\n            const onMessage = (event: MessageEvent) => {\r\n                // TODO: it is a good idea to check if event.origin can be trusted!\r\n                // if (event.origin.indexOf(window.location.hostname) === -1) { return; }\r\n\r\n                // require 'user' and 'token' inside received data.\r\n                if (event.data.user === undefined && event.data.token === undefined) { return; }\r\n\r\n                clearInterval(rejectionChecker);\r\n                this.#_signInWindow.close();\r\n                this.#_signInWindow = undefined;\r\n\r\n                window.removeEventListener(\"message\", onMessage);\r\n\r\n                if (event.data.error !== undefined) {\r\n                    reject(event.data.error);\r\n\r\n                } else {\r\n                    resolve(event.data);\r\n                    this.emitChange(event.data);\r\n                }\r\n            }\r\n\r\n            const rejectionChecker = setInterval(() => {\r\n                if (!this.#_signInWindow || this.#_signInWindow.closed) {\r\n                    this.#_signInWindow = undefined;\r\n                    reject(\"cancelled\");\r\n                    window.removeEventListener(\"message\", onMessage);\r\n                }\r\n            }, 200);\r\n\r\n            window.addEventListener(\"message\", onMessage);\r\n        });\r\n    }\r\n\r\n    public async signOut() {\r\n        this.emitChange({ user: null, token: null });\r\n    }\r\n\r\n    private emitChange(authData: Partial<AuthData>) {\r\n        if (authData.token !== undefined) {\r\n            this.token = authData.token;\r\n\r\n            if (authData.token === null) {\r\n                removeItem(this.settings.key);\r\n\r\n            } else {\r\n                // store key in localStorage\r\n                setItem(this.settings.key, authData.token);\r\n            }\r\n        }\r\n\r\n        this.#_events.emit(\"change\", authData);\r\n    }\r\n\r\n}\r\n","/**\r\n * Discord Embedded App SDK\r\n * https://github.com/colyseus/colyseus/issues/707\r\n *\r\n * All URLs must go through the local proxy from\r\n * https://<app_id>.discordsays.com/.proxy/<mapped_url>/...\r\n *\r\n * URL Mapping Examples:\r\n *\r\n * 1. Using Colyseus Cloud:\r\n *   - /colyseus/{subdomain} -> {subdomain}.colyseus.cloud\r\n *\r\n *   Example:\r\n *     const client = new Client(\"https://xxxx.colyseus.cloud\");\r\n *\r\n * -------------------------------------------------------------\r\n *\r\n * 2. Using `cloudflared` tunnel:\r\n *   - /colyseus/ -> <your-cloudflared-url>.trycloudflare.com\r\n *\r\n *   Example:\r\n *     const client = new Client(\"https://<your-cloudflared-url>.trycloudflare.com\");\r\n *\r\n * -------------------------------------------------------------\r\n *\r\n * 3. Providing a manual /.proxy/your-mapping:\r\n *   - /your-mapping/ -> your-endpoint.com\r\n *\r\n *   Example:\r\n *     const client = new Client(\"/.proxy/your-mapping\");\r\n *\r\n */\r\nexport function discordURLBuilder (url: URL): string {\r\n    const localHostname = window?.location?.hostname || \"localhost\";\r\n\r\n    const remoteHostnameSplitted = url.hostname.split('.');\r\n    const subdomain = (\r\n        !url.hostname.includes(\"trycloudflare.com\") && // ignore cloudflared subdomains\r\n        !url.hostname.includes(\"discordsays.com\") &&  // ignore discordsays.com subdomains\r\n        remoteHostnameSplitted.length > 2\r\n    )\r\n        ? `/${remoteHostnameSplitted[0]}`\r\n        : '';\r\n\r\n    return (url.pathname.startsWith(\"/.proxy\"))\r\n        ? `${url.protocol}//${localHostname}${subdomain}${url.pathname}${url.search}`\r\n        : `${url.protocol}//${localHostname}/.proxy/colyseus${subdomain}${url.pathname}${url.search}`;\r\n}\r\n","import { ServerError } from './errors/Errors';\nimport { Room, splitURL } from './Room';\nimport { SchemaConstructor } from './serializer/SchemaSerializer';\nimport { HTTP } from \"./HTTP\";\nimport { Auth } from './Auth';\nimport { SeatReservation } from './Protocol';\nimport { discordURLBuilder } from './3rd_party/discord';\n\nexport type JoinOptions = any;\n\nexport class MatchMakeError extends Error {\n    code: number;\n    constructor(message: string, code: number) {\n        super(message);\n        this.code = code;\n        this.name = \"MatchMakeError\";\n        Object.setPrototypeOf(this, MatchMakeError.prototype);\n    }\n}\n\n// - React Native does not provide `window.location`\n// - Cocos Creator (Native) does not provide `window.location.hostname`\nconst DEFAULT_ENDPOINT = (typeof (window) !== \"undefined\" &&  typeof (window?.location?.hostname) !== \"undefined\")\n    ? `${window.location.protocol.replace(\"http\", \"ws\")}//${window.location.hostname}${(window.location.port && `:${window.location.port}`)}`\n    : \"ws://127.0.0.1:2567\";\n\nexport interface EndpointSettings {\n    hostname: string,\n    secure: boolean,\n    port?: number,\n    pathname?: string,\n    searchParams?: string,\n}\n\nexport interface ClientOptions {\n    headers?: { [id: string]: string };\n    urlBuilder?: (url: URL) => string;\n}\n\nexport class Client {\n    static VERSION = process.env.VERSION;\n\n    public http: HTTP;\n    public auth: Auth;\n\n    protected settings: EndpointSettings;\n    protected urlBuilder: (url: URL) => string;\n\n    constructor(\n        settings: string | EndpointSettings = DEFAULT_ENDPOINT,\n        options?: ClientOptions,\n    ) {\n        if (typeof (settings) === \"string\") {\n\n            //\n            // endpoint by url\n            //\n            const url = (settings.startsWith(\"/\"))\n                ? splitURL(settings, DEFAULT_ENDPOINT)\n                : splitURL(settings);\n\n            const secure = (url.protocol === \"https:\" || url.protocol === \"wss:\");\n            const port = Number(url.port || (secure ? 443 : 80));\n\n            this.settings = {\n                hostname: url.hostname,\n                pathname: url.pathname,\n                port,\n                secure,\n                searchParams: url.searchParams?.toString() || undefined,\n            };\n\n        } else {\n            //\n            // endpoint by settings\n            //\n            if (settings.port === undefined) {\n                settings.port = (settings.secure) ? 443 : 80;\n            }\n            if (settings.pathname === undefined) {\n                settings.pathname = \"\";\n            }\n            this.settings = settings;\n        }\n\n        // make sure pathname does not end with \"/\"\n        if (this.settings.pathname.endsWith(\"/\")) {\n            this.settings.pathname = this.settings.pathname.slice(0, -1);\n        }\n\n        this.http = new HTTP(this, options?.headers || {});\n        this.auth = new Auth(this.http);\n\n        this.urlBuilder = options?.urlBuilder;\n\n        //\n        // Discord Embedded SDK requires a custom URL builder\n        //\n        if (\n            !this.urlBuilder &&\n            typeof (window) !== \"undefined\" &&\n            window?.location?.hostname?.includes(\"discordsays.com\")\n        ) {\n            this.urlBuilder = discordURLBuilder;\n            console.log(\"Colyseus SDK: Discord Embedded SDK detected. Using custom URL builder.\");\n        }\n    }\n\n    public async joinOrCreate<T = any>(roomName: string, options: JoinOptions = {}, rootSchema?: SchemaConstructor<T>) {\n        return await this.createMatchMakeRequest<T>('joinOrCreate', roomName, options, rootSchema);\n    }\n\n    public async create<T = any>(roomName: string, options: JoinOptions = {}, rootSchema?: SchemaConstructor<T>) {\n        return await this.createMatchMakeRequest<T>('create', roomName, options, rootSchema);\n    }\n\n    public async join<T = any>(roomName: string, options: JoinOptions = {}, rootSchema?: SchemaConstructor<T>) {\n        return await this.createMatchMakeRequest<T>('join', roomName, options, rootSchema);\n    }\n\n    public async joinById<T = any>(roomId: string, options: JoinOptions = {}, rootSchema?: SchemaConstructor<T>) {\n        return await this.createMatchMakeRequest<T>('joinById', roomId, options, rootSchema);\n    }\n\n    /**\n     * Re-establish connection with a room this client was previously connected to.\n     *\n     * @param reconnectionToken The `room.reconnectionToken` from previously connected room.\n     * @param rootSchema (optional) Concrete root schema definition\n     * @returns Promise<Room>\n     */\n    public async reconnect<T = any>(reconnectionToken: string, rootSchema?: SchemaConstructor<T>) {\n        if (typeof (reconnectionToken) === \"string\" && typeof (rootSchema) === \"string\") {\n            throw new Error(\"DEPRECATED: .reconnect() now only accepts 'reconnectionToken' as argument.\\nYou can get this token from previously connected `room.reconnectionToken`\");\n        }\n        const [roomId, token] = reconnectionToken.split(\":\");\n\t\tif (!roomId || !token) {\n\t\t\tthrow new Error(\"Invalid reconnection token format.\\nThe format should be roomId:reconnectionToken\");\n\t\t}\n        return await this.createMatchMakeRequest<T>('reconnect', roomId, { reconnectionToken: token }, rootSchema);\n    }\n\n    public async consumeSeatReservation<T = any>(\n        response: SeatReservation,\n        rootSchema?: SchemaConstructor<T>,\n        reuseRoomInstance?: Room // used in devMode\n    ): Promise<Room<T>> {\n        const room = this.createRoom<T>(response.room.name, rootSchema);\n        room.roomId = response.room.roomId;\n        room.sessionId = response.sessionId;\n\n        const options: any = { sessionId: room.sessionId };\n\n        // forward \"reconnection token\" in case of reconnection.\n        if (response.reconnectionToken) {\n            options.reconnectionToken = response.reconnectionToken;\n        }\n\n        const targetRoom = reuseRoomInstance || room;\n        room.connect(this.buildEndpoint(response.room, options, response.protocol), response.devMode && (async () => {\n            console.info(`[Colyseus devMode]: ${String.fromCodePoint(0x1F504)} Re-establishing connection with room id '${room.roomId}'...`); // 🔄\n\n            let retryCount = 0;\n            let retryMaxRetries = 8;\n\n            const retryReconnection = async () => {\n                retryCount++;\n\n                try {\n                    await this.consumeSeatReservation(response, rootSchema, targetRoom);\n                    console.info(`[Colyseus devMode]: ${String.fromCodePoint(0x2705)} Successfully re-established connection with room '${room.roomId}'`); // ✅\n\n                } catch (e) {\n                    if (retryCount < retryMaxRetries) {\n                        console.info(`[Colyseus devMode]: ${String.fromCodePoint(0x1F504)} retrying... (${retryCount} out of ${retryMaxRetries})`); // 🔄\n                        setTimeout(retryReconnection, 2000);\n\n                    } else {\n                        console.info(`[Colyseus devMode]: ${String.fromCodePoint(0x274C)} Failed to reconnect. Is your server running? Please check server logs.`); // ❌\n                    }\n                }\n            };\n\n            setTimeout(retryReconnection, 2000);\n        }), targetRoom, response, this.http.headers);\n\n        return new Promise((resolve, reject) => {\n            const onError = (code, message) => reject(new ServerError(code, message));\n            targetRoom.onError.once(onError);\n\n            targetRoom['onJoin'].once(() => {\n                targetRoom.onError.remove(onError);\n                resolve(targetRoom);\n            });\n        });\n    }\n\n    protected async createMatchMakeRequest<T = any>(\n        method: string,\n        roomName: string,\n        options: JoinOptions = {},\n        rootSchema?: SchemaConstructor<T>,\n        reuseRoomInstance?: Room,\n    ) {\n        const response = (\n            await this.http.post<SeatReservation>(`matchmake/${method}/${roomName}`, {\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(options)\n            })\n        ).data;\n\n        // FIXME: HTTP class is already handling this as ServerError.\n        // @ts-ignore\n        if (response.error) { throw new MatchMakeError(response.error, response.code); }\n\n        // forward reconnection token during \"reconnect\" methods.\n        if (method === \"reconnect\") {\n            response.reconnectionToken = options.reconnectionToken;\n        }\n\n        return await this.consumeSeatReservation<T>(response, rootSchema, reuseRoomInstance);\n    }\n\n    protected createRoom<T = any>(roomName: string, rootSchema?: SchemaConstructor<T>) {\n        return new Room<T>(roomName, rootSchema);\n    }\n\n    protected buildEndpoint(room: any, options: any = {}, protocol: string = \"ws\") {\n        let searchParams = this.settings.searchParams || \"\";\n\n        // forward authentication token\n        if (this.http.authToken) {\n            options['_authToken'] = this.http.authToken;\n        }\n\n        // append provided options\n        for (const name in options) {\n            if (!options.hasOwnProperty(name)) {\n                continue;\n            }\n            searchParams += (searchParams ? '&' : '') + `${name}=${options[name]}`;\n        }\n\n        if (protocol === \"h3\") {\n            protocol = \"http\";\n        }\n\n        let endpoint = (this.settings.secure)\n            ? `${protocol}s://`\n            : `${protocol}://`;\n\n        if (room.publicAddress) {\n            endpoint += `${room.publicAddress}`;\n\n        } else {\n            endpoint += `${this.settings.hostname}${this.getEndpointPort()}${this.settings.pathname}`;\n        }\n\n        const endpointURL = `${endpoint}/${room.processId}/${room.roomId}?${searchParams}`;\n        return (this.urlBuilder)\n            ? this.urlBuilder(splitURL(endpointURL))\n            : endpointURL;\n    }\n\n    protected getHttpEndpoint(segments: string = '') {\n        const path = segments.startsWith(\"/\") ? segments : `/${segments}`;\n\n        let endpointURL = `${(this.settings.secure) ? \"https\" : \"http\"}://${this.settings.hostname}${this.getEndpointPort()}${this.settings.pathname}${path}`;\n\n        if (this.settings.searchParams) {\n            endpointURL += `?${this.settings.searchParams}`;\n        }\n\n        return (this.urlBuilder)\n            ? this.urlBuilder(splitURL(endpointURL))\n            : endpointURL;\n    }\n\n    protected getEndpointPort() {\n        return (this.settings.port !== 80 && this.settings.port !== 443)\n            ? `:${this.settings.port}`\n            : \"\";\n    }\n}\n","import { Serializer } from \"./Serializer\";\r\n\r\nexport class NoneSerializer<T = any> implements Serializer<T> {\r\n    setState(rawState: any): void {}\r\n    getState() { return null; }\r\n    patch(patches) {}\r\n    teardown() { }\r\n    handshake(bytes: number[]) {}\r\n}\r\n","import './legacy';\r\n\r\nexport { Client, JoinOptions, MatchMakeError, type EndpointSettings, type ClientOptions } from './Client';\r\nexport { Protocol, ErrorCode, SeatReservation } from './Protocol';\r\nexport { Room, RoomAvailable } from './Room';\r\nexport { Auth, type AuthSettings, type PopupSettings } from \"./Auth\";\r\nexport { ServerError } from './errors/Errors';\r\n\r\n/*\r\n * Serializers\r\n */\r\nimport { SchemaSerializer, getStateCallbacks } from \"./serializer/SchemaSerializer\";\r\nimport { NoneSerializer } from \"./serializer/NoneSerializer\";\r\nimport { registerSerializer } from './serializer/Serializer';\r\n\r\nexport { registerSerializer, SchemaSerializer, getStateCallbacks };\r\nregisterSerializer('schema', SchemaSerializer);\r\nregisterSerializer('none', NoneSerializer);\r\n"],"names":["this","encode","decode","Protocol","ErrorCode","getDecoderStateCallbacks","Reflection","Decoder","position","bundledStrings"],"mappings":"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","x_google_ignoreList":[1,3,5,13,14,16]}